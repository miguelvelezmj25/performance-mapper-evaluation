package edu.cmu.cs.mvelezce.zip.verificationClasses;

import static edu.cmu.cs.mvelezce.zip.ZipMain.*;

public class FeatureSwitches {
/*
 * DO NOT EDIT! THIS FILE IS AUTOGENERATED BY fstcomp
 */

//    public static boolean FEATUREBase;
//    public static boolean FEATURECRC;
//    public static boolean FEATUREArchiveCheck;
//    public static boolean FEATUREZipMeTest;
//    public static boolean FEATUREGZIP;
//    public static boolean FEATUREAdler32Checksum;
//    public static boolean FEATURECompress;
//    public static boolean FEATUREExtract;
//    public static boolean FEATUREDerivativeGZIPCRC;
//    public static boolean FEATUREDerivativeCompressCRC;
//    public static boolean FEATUREDerivativeExtractCRC;
//    public static boolean FEATUREDerivativeCompressGZIP;
//    public static boolean FEATUREDerivativeCompressAdler32Checksum;
//    public static boolean FEATUREDerivativeCompressGZIPCRC;
//    public static String getSelectedFeaturesAsNames() {
//        StringBuilder sb = new StringBuilder();
//        if (FEATUREBase) sb.append("Base;");
//        if (FEATUREDerivativeCompressAdler32Checksum) sb.append("DerivativeCompressAdler32Checksum;");
//        if (FEATUREDerivativeCompressCRC) sb.append("DerivativeCompressCRC;");
//        if (FEATUREDerivativeCompressGZIP) sb.append("DerivativeCompressGZIP;");
//        if (FEATUREDerivativeCompressGZIPCRC) sb.append("DerivativeCompressGZIPCRC;");
//        if (FEATUREDerivativeGZIPCRC) sb.append("DerivativeGZIPCRC;");
//        if (FEATUREAdler32Checksum) sb.append("Adler32Checksum;");
//        if (FEATUREArchiveCheck) sb.append("ArchiveCheck;");
//        if (FEATUREZipMeTest) sb.append("ZipMeTest;");
//        if (FEATUREGZIP) sb.append("GZIP;");
//        if (FEATUREDerivativeExtractCRC) sb.append("DerivativeExtractCRC;");
//        if (FEATURECRC) sb.append("CRC;");
//        if (FEATURECompress) sb.append("Compress;");
//        if (FEATUREExtract) sb.append("Extract;");
//        return sb.toString();
//    }
//    public static void select_features() {
//        FEATUREBase = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREDerivativeCompressAdler32Checksum = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREDerivativeCompressCRC = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREDerivativeCompressGZIP = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREDerivativeCompressGZIPCRC = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREDerivativeGZIPCRC = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREAdler32Checksum = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREArchiveCheck = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREZipMeTest = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREGZIP = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREDerivativeExtractCRC = verificationClasses.SPLModelChecker.getBoolean();
//        FEATURECRC = verificationClasses.SPLModelChecker.getBoolean();
//        FEATURECompress = verificationClasses.SPLModelChecker.getBoolean();
//        FEATUREExtract = verificationClasses.SPLModelChecker.getBoolean();
//    }

    public static boolean __GUIDSL_ROOT_PRODUCTION;

    public static void select_helpers() {
        __GUIDSL_ROOT_PRODUCTION = true;
    }

    public static boolean valid_product() {
        if ( ( FEATUREBase ) && ( FEATUREZipMeTest ) &&  ( FEATURECompress ) && ( FEATUREExtract ) &&  ( !FEATUREGZIP || FEATURECRC ) && ( FEATURECRC || FEATUREAdler32Checksum ) &&  ( !( FEATURECompress && FEATUREAdler32Checksum ) ^ FEATUREDerivativeCompressAdler32Checksum ) && ( !( FEATURECompress && FEATURECRC ) ^ FEATUREDerivativeCompressCRC ) && ( !( FEATURECompress && FEATUREGZIP ) ^ FEATUREDerivativeCompressGZIP ) && ( !( FEATURECompress && FEATUREGZIP && FEATURECRC ) ^ FEATUREDerivativeCompressGZIPCRC ) && ( !( FEATUREExtract && FEATURECRC ) ^ FEATUREDerivativeExtractCRC ) && ( !( FEATUREGZIP && FEATURECRC ) ^ FEATUREDerivativeGZIPCRC ))
            return true;
        else
            return false;
    }
}