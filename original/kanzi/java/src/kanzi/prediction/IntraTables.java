/*
Copyright 2011-2017 Frederic Langlet
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
you may obtain a copy of the License at

                http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package kanzi.prediction;

public class IntraTables
{
   // q[i] = 1.0507566387 * q[i-1]
   // 2^-1/14 = 1.0507566387 and 7*14=98 => scale by 2^7=128 from 1 to 99   
   public static final int[] QSCALE = new int[]
   {
       4,    8,    8,    9,    9,   10,   10,   11,
      11,   12,   12,   13,   14,   14,   15,   16,
      17,   18,   19,   20,   20,   22,   23,   24,
      25,   26,   28,   29,   30,   32,   34,   35,
      37,   39,   41,   43,   45,   48,   50,   53,
      55,   58,   61,   64,   67,   71,   74,   78,
      82,   86,   91,   95,  100,  105,  110,  116,
     122,  128,  134,  141,  148,  156,  164,  172,
     181,  190,  200,  210,  221,  232,  244,  256,
     269,  283,  297,  312,  328,  345,  362,  380,
     400,  420,  441,  464,  487,  512,  538,  565,
     594,  624,  656,  689,  724,  761,  799,  840,
     883,  927,  975, 1024         
   }; 


   public int getMaxQuantizerIndex()
   {
      return QSCALE.length - 1;
   }

   
   public static final int[] ZIGZAG_SCAN_4x4 = new int[]
   {
      0, 4, 1, 5, 8, 2, 12, 9, 3, 6, 13, 10, 7, 14, 11, 15
   };
   

   public static final int[] ZIGZAG_SCAN_8x8 = new int[]
   {
      0,  8,  1, 16,  9,  2, 17, 24, 10,  3, 18, 25, 32, 11,  4, 26,
     33, 19, 40, 12, 34, 27,  5, 41, 20, 48, 13, 35, 42, 28, 21,  6,
     49, 56, 36, 43, 29,  7, 14, 50, 57, 44, 22, 37, 15, 51, 58, 30,
     45, 23, 52, 59, 38, 31, 60, 53, 46, 39, 61, 54, 47, 62, 55, 63
   };


   public static final int[] ZIGZAG_SCAN_16x16 = new int[]
   {
       0,  16,   1,  32,  17,   2,  48,  33,  18,   3,  64,  34,  49,  19,  65,  80,
      50,   4,  35,  66,  20,  81,  96,  51,   5,  36,  82,  97,  67, 112,  21,  52,
      98,  37,  83, 113,   6,  68, 128,  53,  22,  99, 114,  84,   7, 129,  38,  69,
     100, 115, 144, 130,  85,  54,  23,   8, 145,  39,  70, 116, 101, 131, 160, 146,
      55,  86,  24,  71, 132, 117, 161,  40,   9, 102, 147, 176, 162,  87,  56,  25,
     133, 118, 177, 148,  72, 103,  41, 163,  10, 192, 178,  88,  57, 134, 149, 119,
      26, 164,  73, 104, 193,  42, 179, 208,  11, 135,  89, 165, 120, 150,  58, 194,
     180,  27,  74, 209, 105, 151, 136,  43,  90, 224, 166, 195, 181, 121, 210,  59,
      12, 152, 106, 167, 196,  75, 137, 225, 211, 240, 182, 122,  91,  28, 197,  13,
     226, 168, 183, 153,  44, 212, 138, 107, 241,  60,  29, 123, 198, 184, 227, 169,
     242,  76, 213, 154,  45,  92,  14, 199, 139,  61, 228, 214, 170, 185, 243, 108,
      77, 155,  30,  15, 200, 229, 124, 215, 244,  93,  46, 186, 171, 201, 109, 140,
     230,  62, 216, 245,  31, 125,  78, 156, 231,  47, 187, 202, 217,  94, 246, 141,
      63, 232, 172, 110, 247, 157,  79, 218, 203, 126, 233, 188, 248,  95, 173, 142,
     219, 111, 249, 234, 158, 127, 189, 204, 250, 235, 143, 174, 220, 205, 159, 251,
     190, 221, 175, 236, 237, 191, 206, 252, 222, 253, 207, 238, 223, 254, 239, 255
   };

   
   public static final int[] ZIGZAG_SCAN_32x32 = new int[]
   {
      0,   32,    1,   64,   33,    2,   96,   65,   34,  128,    3,   97,   66,  160,  129,   35, 
     98,    4,   67,  130,  161,  192,   36,   99,  224,    5,  162,  193,   68,  131,   37,  100, 
    225,  194,  256,  163,   69,  132,    6,  226,  257,  288,  195,  101,  164,   38,  258,    7, 
    227,  289,  133,  320,   70,  196,  165,  290,  259,  228,   39,  321,  102,  352,    8,  197, 
     71,  134,  322,  291,  260,  353,  384,  229,  166,  103,   40,  354,  323,  292,  135,  385, 
    198,  261,   72,    9,  416,  167,  386,  355,  230,  324,  104,  293,   41,  417,  199,  136, 
    262,  387,  448,  325,  356,   10,   73,  418,  231,  168,  449,  294,  388,  105,  419,  263, 
     42,  200,  357,  450,  137,  480,   74,  326,  232,   11,  389,  169,  295,  420,  106,  451, 
    481,  358,  264,  327,  201,   43,  138,  512,  482,  390,  296,  233,  170,  421,   75,  452, 
    359,   12,  513,  265,  483,  328,  107,  202,  514,  544,  422,  391,  453,  139,   44,  234, 
    484,  297,  360,  171,   76,  515,  545,  266,  329,  454,   13,  423,  203,  108,  546,  485, 
    576,  298,  235,  140,  361,  330,  172,  547,   45,  455,  267,  577,  486,   77,  204,  362, 
    608,   14,  299,  578,  109,  236,  487,  609,  331,  141,  579,   46,   15,  173,  610,  363, 
     78,  205,   16,  110,  237,  611,  142,   47,  174,   79,  206,   17,  111,  238,   48,  143, 
     80,  175,  112,  207,   49,   18,  239,   81,  113,   19,   50,   82,  114,   51,   83,  115, 
    640,  516,  392,  268,  144,   20,  672,  641,  548,  517,  424,  393,  300,  269,  176,  145, 
     52,   21,  704,  673,  642,  580,  549,  518,  456,  425,  394,  332,  301,  270,  208,  177, 
    146,   84,   53,   22,  736,  705,  674,  643,  612,  581,  550,  519,  488,  457,  426,  395, 
    364,  333,  302,  271,  240,  209,  178,  147,  116,   85,   54,   23,  737,  706,  675,  613, 
    582,  551,  489,  458,  427,  365,  334,  303,  241,  210,  179,  117,   86,   55,  738,  707, 
    614,  583,  490,  459,  366,  335,  242,  211,  118,   87,  739,  615,  491,  367,  243,  119, 
    768,  644,  520,  396,  272,  148,   24,  800,  769,  676,  645,  552,  521,  428,  397,  304, 
    273,  180,  149,   56,   25,  832,  801,  770,  708,  677,  646,  584,  553,  522,  460,  429, 
    398,  336,  305,  274,  212,  181,  150,   88,   57,   26,  864,  833,  802,  771,  740,  709, 
    678,  647,  616,  585,  554,  523,  492,  461,  430,  399,  368,  337,  306,  275,  244,  213, 
    182,  151,  120,   89,   58,   27,  865,  834,  803,  741,  710,  679,  617,  586,  555,  493, 
    462,  431,  369,  338,  307,  245,  214,  183,  121,   90,   59,  866,  835,  742,  711,  618, 
    587,  494,  463,  370,  339,  246,  215,  122,   91,  867,  743,  619,  495,  371,  247,  123, 
    896,  772,  648,  524,  400,  276,  152,   28,  928,  897,  804,  773,  680,  649,  556,  525, 
    432,  401,  308,  277,  184,  153,   60,   29,  960,  929,  898,  836,  805,  774,  712,  681, 
    650,  588,  557,  526,  464,  433,  402,  340,  309,  278,  216,  185,  154,   92,   61,   30, 
    992,  961,  930,  899,  868,  837,  806,  775,  744,  713,  682,  651,  620,  589,  558,  527, 
    496,  465,  434,  403,  372,  341,  310,  279,  248,  217,  186,  155,  124,   93,   62,   31, 
    993,  962,  931,  869,  838,  807,  745,  714,  683,  621,  590,  559,  497,  466,  435,  373, 
    342,  311,  249,  218,  187,  125,   94,   63,  994,  963,  870,  839,  746,  715,  622,  591, 
    498,  467,  374,  343,  250,  219,  126,   95,  995,  871,  747,  623,  499,  375,  251,  127, 
    900,  776,  652,  528,  404,  280,  156,  932,  901,  808,  777,  684,  653,  560,  529,  436, 
    405,  312,  281,  188,  157,  964,  933,  902,  840,  809,  778,  716,  685,  654,  592,  561, 
    530,  468,  437,  406,  344,  313,  282,  220,  189,  158,  996,  965,  934,  903,  872,  841, 
    810,  779,  748,  717,  686,  655,  624,  593,  562,  531,  500,  469,  438,  407,  376,  345, 
    314,  283,  252,  221,  190,  159,  997,  966,  935,  873,  842,  811,  749,  718,  687,  625, 
    594,  563,  501,  470,  439,  377,  346,  315,  253,  222,  191,  998,  967,  874,  843,  750, 
    719,  626,  595,  502,  471,  378,  347,  254,  223,  999,  875,  751,  627,  503,  379,  255, 
    904,  780,  656,  532,  408,  284,  936,  905,  812,  781,  688,  657,  564,  533,  440,  409, 
    316,  285,  968,  937,  906,  844,  813,  782,  720,  689,  658,  596,  565,  534,  472,  441, 
    410,  348,  317,  286, 1000,  969,  938,  907,  876,  845,  814,  783,  752,  721,  690,  659, 
    628,  597,  566,  535,  504,  473,  442,  411,  380,  349,  318,  287, 1001,  970,  939,  877, 
    846,  815,  753,  722,  691,  629,  598,  567,  505,  474,  443,  381,  350,  319, 1002,  971, 
    878,  847,  754,  723,  630,  599,  506,  475,  382,  351, 1003,  879,  755,  631,  507,  383, 
    908,  784,  660,  536,  412,  940,  909,  816,  785,  692,  661,  568,  537,  444,  413,  972, 
    941,  910,  848,  817,  786,  724,  693,  662,  600,  569,  538,  476,  445,  414, 1004,  973, 
    942,  911,  880,  849,  818,  787,  756,  725,  694,  663,  632,  601,  570,  539,  508,  477, 
    446,  415, 1005,  974,  943,  881,  850,  819,  757,  726,  695,  633,  602,  571,  509,  478, 
    447, 1006,  975,  882,  851,  758,  727,  634,  603,  510,  479, 1007,  883,  759,  635,  511, 
    912,  788,  664,  540,  944,  913,  820,  789,  696,  665,  572,  541,  976,  945,  914,  852, 
    821,  790,  728,  697,  666,  604,  573,  542, 1008,  977,  946,  915,  884,  853,  822,  791, 
    760,  729,  698,  667,  636,  605,  574,  543, 1009,  978,  947,  885,  854,  823,  761,  730, 
    699,  637,  606,  575, 1010,  979,  886,  855,  762,  731,  638,  607, 1011,  887,  763,  639, 
    916,  792,  668,  948,  917,  824,  793,  700,  669,  980,  949,  918,  856,  825,  794,  732, 
    701,  670, 1012,  981,  950,  919,  888,  857,  826,  795,  764,  733,  702,  671, 1013,  982, 
    951,  889,  858,  827,  765,  734,  703, 1014,  983,  890,  859,  766,  735, 1015,  891,  767, 
    920,  796,  952,  921,  828,  797,  984,  953,  922,  860,  829,  798, 1016,  985,  954,  923, 
    892,  861,  830,  799, 1017,  986,  955,  893,  862,  831, 1018,  987,  894,  863, 1019,  895, 
    924,  956,  925,  988,  957,  926, 1020,  989,  958,  927, 1021,  990,  959, 1022,  991, 1023
   };
   
/*
   THOR codec
public static final int[] ZIGZAG_SCAN_4x4 = new int[]
{
   0, 1, 5, 6, 2, 4, 7, 12, 3, 8, 11, 13, 9, 10, 14, 15
};

public static final int[] ZIGZAG_SCAN_8x8 = new int[]
{
   0,  1,  5,  6, 14, 15, 27, 28,  2,  4,  7, 13, 16, 26, 29, 42,
   3,  8, 12, 17, 25, 30, 41, 43,  9, 11, 18, 24, 31, 40, 44, 53,
  10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60,
  21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63
};

public static final int[] ZIGZAG_SCAN_16x16 = new int[]
{
    0,   1,   5,   6,  14,  15,  27,  28,  44,  45,  65,  66,  90,  91, 119, 120, 
    2,   4,   7,  13,  16,  26,  29,  43,  46,  64,  67,  89,  92, 118, 121, 150, 
    3,   8,  12,  17,  25,  30,  42,  47,  63,  68,  88,  93, 117, 122, 149, 151, 
    9,  11,  18,  24,  31,  41,  48,  62,  69,  87,  94, 116, 123, 148, 152, 177, 
   10,  19,  23,  32,  40,  49,  61,  70,  86,  95, 115, 124, 147, 153, 176, 178, 
   20,  22,  33,  39,  50,  60,  71,  85,  96, 114, 125, 146, 154, 175, 179, 200, 
   21,  34,  38,  51,  59,  72,  84,  97, 113, 126, 145, 155, 174, 180, 199, 201, 
   35,  37,  52,  58,  73,  83,  98, 112, 127, 144, 156, 173, 181, 198, 202, 219, 
   36,  53,  57,  74,  82,  99, 111, 128, 143, 157, 172, 182, 197, 203, 218, 220, 
   54,  56,  75,  81, 100, 110, 129, 142, 158, 171, 183, 196, 204, 217, 221, 234, 
   55,  76,  80, 101, 109, 130, 141, 159, 170, 184, 195, 205, 216, 222, 233, 235, 
   77,  79, 102, 108, 131, 140, 160, 169, 185, 194, 206, 215, 223, 232, 236, 245, 
   78, 103, 107, 132, 139, 161, 168, 186, 193, 207, 214, 224, 231, 237, 244, 246, 
  104, 106, 133, 138, 162, 167, 187, 192, 208, 213, 225, 230, 238, 243, 247, 252, 
  105, 134, 137, 163, 166, 188, 191, 209, 212, 226, 229, 239, 242, 248, 251, 253, 
  135, 136, 164, 165, 189, 190, 210, 211, 227, 228, 240, 241, 249, 250, 254, 255
}; 
   */   
   
   
   public static final int[] RASTER_SCAN_4x4 = new int[]
   {
      0, 1, 4, 5, 2, 3, 6, 7, 8, 9, 12, 13, 10, 11, 14, 15
   };
   

   public static final int[] RASTER_SCAN_8x8 = new int[]
   {
      0,  1,  2,  3,  8,  9, 10, 11, 16, 17, 18, 19, 24, 25, 26, 27,
      4,  5,  6,  7, 12, 13, 14, 15, 20, 21, 22, 23, 28, 29, 30, 31,
     32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 56, 57, 58, 59,
     36, 37, 38, 39, 44, 45, 46, 47, 52, 53, 54, 55, 60, 61, 62, 63      
   };


   public static final int[] RASTER_SCAN_16x16 = new int[]
   {
      0,   1,   2,   3,   4,   5,   6,   7,  16,  17,  18,  19,  20,  21,  22,  23,
     32,  33,  34,  35,  36,  37,  38,  39,  48,  49,  50,  51,  52,  53,  54,  55,
     64,  65,  66,  67,  68,  69,  70,  71,  80,  81,  82,  83,  84,  85,  86,  87,
     96,  97,  98,  99, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119,
      8,   9,  10,  11,  12,  13,  14,  15,  24,  25,  26,  27,  28,  29,  30,  31,
     40,  41,  42,  43,  44,  45,  46,  47,  56,  57,  58,  59,  60,  61,  62,  63,
     72,  73,  74,  75,  76,  77,  78,  79,  88,  89,  90,  91,  92,  93,  94,  95,
    104, 105, 106, 107, 108, 109, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127,
    128, 129, 130, 131, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151,
    160, 161, 162, 163, 164, 165, 166, 167, 176, 177, 178, 179, 180, 181, 182, 183,
    192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 210, 211, 212, 213, 214, 215,
    224, 225, 226, 227, 228, 229, 230, 231, 240, 241, 242, 243, 244, 245, 246, 247,
    136, 137, 138, 139, 140, 141, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159,
    168, 169, 170, 171, 172, 173, 174, 175, 184, 185, 186, 187, 188, 189, 190, 191,
    200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 218, 219, 220, 221, 222, 223,
    232, 233, 234, 235, 236, 237, 238, 239, 248, 249, 250, 251, 252, 253, 254, 255
   };
   
   
   public static final int[] RASTER_SCAN_32x32 = new int[]
   {
      0,    1,    2,    3,    4,    5,    6,    7,    8,    9,   10,   11,   12,   13,   14,   15,
     32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
     64,   65,   66,   67,   68,   69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
     96,   97,   98,   99,  100,  101,  102,  103,  104,  105,  106,  107,  108,  109,  110,  111,
    128,  129,  130,  131,  132,  133,  134,  135,  136,  137,  138,  139,  140,  141,  142,  143,
    160,  161,  162,  163,  164,  165,  166,  167,  168,  169,  170,  171,  172,  173,  174,  175,
    192,  193,  194,  195,  196,  197,  198,  199,  200,  201,  202,  203,  204,  205,  206,  207,
    224,  225,  226,  227,  228,  229,  230,  231,  232,  233,  234,  235,  236,  237,  238,  239,
    256,  257,  258,  259,  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
    288,  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,  302,  303,
    320,  321,  322,  323,  324,  325,  326,  327,  328,  329,  330,  331,  332,  333,  334,  335,
    352,  353,  354,  355,  356,  357,  358,  359,  360,  361,  362,  363,  364,  365,  366,  367,
    384,  385,  386,  387,  388,  389,  390,  391,  392,  393,  394,  395,  396,  397,  398,  399,
    416,  417,  418,  419,  420,  421,  422,  423,  424,  425,  426,  427,  428,  429,  430,  431,
    448,  449,  450,  451,  452,  453,  454,  455,  456,  457,  458,  459,  460,  461,  462,  463,
    480,  481,  482,  483,  484,  485,  486,  487,  488,  489,  490,  491,  492,  493,  494,  495,
     16,   17,   18,   19,   20,   21,   22,   23,   24,   25,   26,   27,   28,   29,   30,   31,
     48,   49,   50,   51,   52,   53,   54,   55,   56,   57,   58,   59,   60,   61,   62,   63,
     80,   81,   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,   92,   93,   94,   95,
    112,  113,  114,  115,  116,  117,  118,  119,  120,  121,  122,  123,  124,  125,  126,  127,
    144,  145,  146,  147,  148,  149,  150,  151,  152,  153,  154,  155,  156,  157,  158,  159,
    176,  177,  178,  179,  180,  181,  182,  183,  184,  185,  186,  187,  188,  189,  190,  191,
    208,  209,  210,  211,  212,  213,  214,  215,  216,  217,  218,  219,  220,  221,  222,  223,
    240,  241,  242,  243,  244,  245,  246,  247,  248,  249,  250,  251,  252,  253,  254,  255,
    272,  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,  287,
    304,  305,  306,  307,  308,  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
    336,  337,  338,  339,  340,  341,  342,  343,  344,  345,  346,  347,  348,  349,  350,  351,
    368,  369,  370,  371,  372,  373,  374,  375,  376,  377,  378,  379,  380,  381,  382,  383,
    400,  401,  402,  403,  404,  405,  406,  407,  408,  409,  410,  411,  412,  413,  414,  415,
    432,  433,  434,  435,  436,  437,  438,  439,  440,  441,  442,  443,  444,  445,  446,  447,
    464,  465,  466,  467,  468,  469,  470,  471,  472,  473,  474,  475,  476,  477,  478,  479,
    496,  497,  498,  499,  500,  501,  502,  503,  504,  505,  506,  507,  508,  509,  510,  511,
    512,  513,  514,  515,  516,  517,  518,  519,  520,  521,  522,  523,  524,  525,  526,  527,
    544,  545,  546,  547,  548,  549,  550,  551,  552,  553,  554,  555,  556,  557,  558,  559,
    576,  577,  578,  579,  580,  581,  582,  583,  584,  585,  586,  587,  588,  589,  590,  591,
    608,  609,  610,  611,  612,  613,  614,  615,  616,  617,  618,  619,  620,  621,  622,  623,
    640,  641,  642,  643,  644,  645,  646,  647,  648,  649,  650,  651,  652,  653,  654,  655,
    672,  673,  674,  675,  676,  677,  678,  679,  680,  681,  682,  683,  684,  685,  686,  687,
    704,  705,  706,  707,  708,  709,  710,  711,  712,  713,  714,  715,  716,  717,  718,  719,
    736,  737,  738,  739,  740,  741,  742,  743,  744,  745,  746,  747,  748,  749,  750,  751,
    768,  769,  770,  771,  772,  773,  774,  775,  776,  777,  778,  779,  780,  781,  782,  783,
    800,  801,  802,  803,  804,  805,  806,  807,  808,  809,  810,  811,  812,  813,  814,  815,
    832,  833,  834,  835,  836,  837,  838,  839,  840,  841,  842,  843,  844,  845,  846,  847,
    864,  865,  866,  867,  868,  869,  870,  871,  872,  873,  874,  875,  876,  877,  878,  879,
    896,  897,  898,  899,  900,  901,  902,  903,  904,  905,  906,  907,  908,  909,  910,  911,
    928,  929,  930,  931,  932,  933,  934,  935,  936,  937,  938,  939,  940,  941,  942,  943,
    960,  961,  962,  963,  964,  965,  966,  967,  968,  969,  970,  971,  972,  973,  974,  975,
    992,  993,  994,  995,  996,  997,  998,  999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
    528,  529,  530,  531,  532,  533,  534,  535,  536,  537,  538,  539,  540,  541,  542,  543,
    560,  561,  562,  563,  564,  565,  566,  567,  568,  569,  570,  571,  572,  573,  574,  575,
    592,  593,  594,  595,  596,  597,  598,  599,  600,  601,  602,  603,  604,  605,  606,  607,
    624,  625,  626,  627,  628,  629,  630,  631,  632,  633,  634,  635,  636,  637,  638,  639,
    656,  657,  658,  659,  660,  661,  662,  663,  664,  665,  666,  667,  668,  669,  670,  671,
    688,  689,  690,  691,  692,  693,  694,  695,  696,  697,  698,  699,  700,  701,  702,  703,
    720,  721,  722,  723,  724,  725,  726,  727,  728,  729,  730,  731,  732,  733,  734,  735,
    752,  753,  754,  755,  756,  757,  758,  759,  760,  761,  762,  763,  764,  765,  766,  767,
    784,  785,  786,  787,  788,  789,  790,  791,  792,  793,  794,  795,  796,  797,  798,  799,
    816,  817,  818,  819,  820,  821,  822,  823,  824,  825,  826,  827,  828,  829,  830,  831,
    848,  849,  850,  851,  852,  853,  854,  855,  856,  857,  858,  859,  860,  861,  862,  863,
    880,  881,  882,  883,  884,  885,  886,  887,  888,  889,  890,  891,  892,  893,  894,  895,
    912,  913,  914,  915,  916,  917,  918,  919,  920,  921,  922,  923,  924,  925,  926,  927,
    944,  945,  946,  947,  948,  949,  950,  951,  952,  953,  954,  955,  956,  957,  958,  959,
    976,  977,  978,  979,  980,  981,  982,  983,  984,  985,  986,  987,  988,  989,  990,  991,
   1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023
   };
      
   
   public static final int[] MORTON_SCAN_4x4 = new int[]
   {
      0, 1, 4, 5, 2, 3, 6, 7, 8, 9, 12, 13, 10, 11, 14, 15
   };
   

   public static final int[] MORTON_SCAN_8x8 = new int[]
   {
      0,  1,  8,  9,  2,  3, 10, 11, 16, 17, 24, 25, 18, 19, 26, 27,
      4,  5, 12, 13,  6,  7, 14, 15, 20, 21, 28, 29, 22, 23, 30, 31,
     32, 33, 40, 41, 34, 35, 42, 43, 48, 49, 56, 57, 50, 51, 58, 59,
     36, 37, 44, 45, 38, 39, 46, 47, 52, 53, 60, 61, 54, 55, 62, 63     
   };


   public static final int[] MORTON_SCAN_16x16 = new int[]
   {
      0,   1,  16,  17,   2,   3,  18,  19,  32,  33,  48,  49,  34,  35,  50,  51,
      4,   5,  20,  21,   6,   7,  22,  23,  36,  37,  52,  53,  38,  39,  54,  55,
     64,  65,  80,  81,  66,  67,  82,  83,  96,  97, 112, 113,  98,  99, 114, 115,
     68,  69,  84,  85,  70,  71,  86,  87, 100, 101, 116, 117, 102, 103, 118, 119,
      8,   9,  24,  25,  10,  11,  26,  27,  40,  41,  56,  57,  42,  43,  58,  59,
     12,  13,  28,  29,  14,  15,  30,  31,  44,  45,  60,  61,  46,  47,  62,  63,
     72,  73,  88,  89,  74,  75,  90,  91, 104, 105, 120, 121, 106, 107, 122, 123,
     76,  77,  92,  93,  78,  79,  94,  95, 108, 109, 124, 125, 110, 111, 126, 127,
    128, 129, 144, 145, 130, 131, 146, 147, 160, 161, 176, 177, 162, 163, 178, 179,
    132, 133, 148, 149, 134, 135, 150, 151, 164, 165, 180, 181, 166, 167, 182, 183,
    192, 193, 208, 209, 194, 195, 210, 211, 224, 225, 240, 241, 226, 227, 242, 243,
    196, 197, 212, 213, 198, 199, 214, 215, 228, 229, 244, 245, 230, 231, 246, 247,
    136, 137, 152, 153, 138, 139, 154, 155, 168, 169, 184, 185, 170, 171, 186, 187,
    140, 141, 156, 157, 142, 143, 158, 159, 172, 173, 188, 189, 174, 175, 190, 191,
    200, 201, 216, 217, 202, 203, 218, 219, 232, 233, 248, 249, 234, 235, 250, 251,
    204, 205, 220, 221, 206, 207, 222, 223, 236, 237, 252, 253, 238, 239, 254, 255
   };
   
   
   public static final int[] MORTON_SCAN_32x32 = new int[]
   {
      0,    1,   32,   33,    2,    3,   34,   35,   64,   65,   96,   97,   66,   67,   98,   99,
      4,    5,   36,   37,    6,    7,   38,   39,   68,   69,  100,  101,   70,   71,  102,  103,
    128,  129,  160,  161,  130,  131,  162,  163,  192,  193,  224,  225,  194,  195,  226,  227,
    132,  133,  164,  165,  134,  135,  166,  167,  196,  197,  228,  229,  198,  199,  230,  231,
      8,    9,   40,   41,   10,   11,   42,   43,   72,   73,  104,  105,   74,   75,  106,  107,
     12,   13,   44,   45,   14,   15,   46,   47,   76,   77,  108,  109,   78,   79,  110,  111,
    136,  137,  168,  169,  138,  139,  170,  171,  200,  201,  232,  233,  202,  203,  234,  235,
    140,  141,  172,  173,  142,  143,  174,  175,  204,  205,  236,  237,  206,  207,  238,  239,
    256,  257,  288,  289,  258,  259,  290,  291,  320,  321,  352,  353,  322,  323,  354,  355,
    260,  261,  292,  293,  262,  263,  294,  295,  324,  325,  356,  357,  326,  327,  358,  359,
    384,  385,  416,  417,  386,  387,  418,  419,  448,  449,  480,  481,  450,  451,  482,  483,
    388,  389,  420,  421,  390,  391,  422,  423,  452,  453,  484,  485,  454,  455,  486,  487,
    264,  265,  296,  297,  266,  267,  298,  299,  328,  329,  360,  361,  330,  331,  362,  363,
    268,  269,  300,  301,  270,  271,  302,  303,  332,  333,  364,  365,  334,  335,  366,  367,
    392,  393,  424,  425,  394,  395,  426,  427,  456,  457,  488,  489,  458,  459,  490,  491,
    396,  397,  428,  429,  398,  399,  430,  431,  460,  461,  492,  493,  462,  463,  494,  495,
     16,   17,   48,   49,   18,   19,   50,   51,   80,   81,  112,  113,   82,   83,  114,  115,
     20,   21,   52,   53,   22,   23,   54,   55,   84,   85,  116,  117,   86,   87,  118,  119,
    144,  145,  176,  177,  146,  147,  178,  179,  208,  209,  240,  241,  210,  211,  242,  243,
    148,  149,  180,  181,  150,  151,  182,  183,  212,  213,  244,  245,  214,  215,  246,  247,
     24,   25,   56,   57,   26,   27,   58,   59,   88,   89,  120,  121,   90,   91,  122,  123,
     28,   29,   60,   61,   30,   31,   62,   63,   92,   93,  124,  125,   94,   95,  126,  127,
    152,  153,  184,  185,  154,  155,  186,  187,  216,  217,  248,  249,  218,  219,  250,  251,
    156,  157,  188,  189,  158,  159,  190,  191,  220,  221,  252,  253,  222,  223,  254,  255,
    272,  273,  304,  305,  274,  275,  306,  307,  336,  337,  368,  369,  338,  339,  370,  371,
    276,  277,  308,  309,  278,  279,  310,  311,  340,  341,  372,  373,  342,  343,  374,  375,
    400,  401,  432,  433,  402,  403,  434,  435,  464,  465,  496,  497,  466,  467,  498,  499,
    404,  405,  436,  437,  406,  407,  438,  439,  468,  469,  500,  501,  470,  471,  502,  503,
    280,  281,  312,  313,  282,  283,  314,  315,  344,  345,  376,  377,  346,  347,  378,  379,
    284,  285,  316,  317,  286,  287,  318,  319,  348,  349,  380,  381,  350,  351,  382,  383,
    408,  409,  440,  441,  410,  411,  442,  443,  472,  473,  504,  505,  474,  475,  506,  507,
    412,  413,  444,  445,  414,  415,  446,  447,  476,  477,  508,  509,  478,  479,  510,  511,
    512,  513,  544,  545,  514,  515,  546,  547,  576,  577,  608,  609,  578,  579,  610,  611,
    516,  517,  548,  549,  518,  519,  550,  551,  580,  581,  612,  613,  582,  583,  614,  615,
    640,  641,  672,  673,  642,  643,  674,  675,  704,  705,  736,  737,  706,  707,  738,  739,
    644,  645,  676,  677,  646,  647,  678,  679,  708,  709,  740,  741,  710,  711,  742,  743,
    520,  521,  552,  553,  522,  523,  554,  555,  584,  585,  616,  617,  586,  587,  618,  619,
    524,  525,  556,  557,  526,  527,  558,  559,  588,  589,  620,  621,  590,  591,  622,  623,
    648,  649,  680,  681,  650,  651,  682,  683,  712,  713,  744,  745,  714,  715,  746,  747,
    652,  653,  684,  685,  654,  655,  686,  687,  716,  717,  748,  749,  718,  719,  750,  751,
    768,  769,  800,  801,  770,  771,  802,  803,  832,  833,  864,  865,  834,  835,  866,  867,
    772,  773,  804,  805,  774,  775,  806,  807,  836,  837,  868,  869,  838,  839,  870,  871,
    896,  897,  928,  929,  898,  899,  930,  931,  960,  961,  992,  993,  962,  963,  994,  995,
    900,  901,  932,  933,  902,  903,  934,  935,  964,  965,  996,  997,  966,  967,  998,  999,
    776,  777,  808,  809,  778,  779,  810,  811,  840,  841,  872,  873,  842,  843,  874,  875,
    780,  781,  812,  813,  782,  783,  814,  815,  844,  845,  876,  877,  846,  847,  878,  879,
    904,  905,  936,  937,  906,  907,  938,  939,  968,  969, 1000, 1001,  970,  971, 1002, 1003,
    908,  909,  940,  941,  910,  911,  942,  943,  972,  973, 1004, 1005,  974,  975, 1006, 1007,
    528,  529,  560,  561,  530,  531,  562,  563,  592,  593,  624,  625,  594,  595,  626,  627,
    532,  533,  564,  565,  534,  535,  566,  567,  596,  597,  628,  629,  598,  599,  630,  631,
    656,  657,  688,  689,  658,  659,  690,  691,  720,  721,  752,  753,  722,  723,  754,  755,
    660,  661,  692,  693,  662,  663,  694,  695,  724,  725,  756,  757,  726,  727,  758,  759,
    536,  537,  568,  569,  538,  539,  570,  571,  600,  601,  632,  633,  602,  603,  634,  635,
    540,  541,  572,  573,  542,  543,  574,  575,  604,  605,  636,  637,  606,  607,  638,  639,
    664,  665,  696,  697,  666,  667,  698,  699,  728,  729,  760,  761,  730,  731,  762,  763,
    668,  669,  700,  701,  670,  671,  702,  703,  732,  733,  764,  765,  734,  735,  766,  767,
    784,  785,  816,  817,  786,  787,  818,  819,  848,  849,  880,  881,  850,  851,  882,  883,
    788,  789,  820,  821,  790,  791,  822,  823,  852,  853,  884,  885,  854,  855,  886,  887,
    912,  913,  944,  945,  914,  915,  946,  947,  976,  977, 1008, 1009,  978,  979, 1010, 1011,
    916,  917,  948,  949,  918,  919,  950,  951,  980,  981, 1012, 1013,  982,  983, 1014, 1015,
    792,  793,  824,  825,  794,  795,  826,  827,  856,  857,  888,  889,  858,  859,  890,  891,
    796,  797,  828,  829,  798,  799,  830,  831,  860,  861,  892,  893,  862,  863,  894,  895,
    920,  921,  952,  953,  922,  923,  954,  955,  984,  985, 1016, 1017,  986,  987, 1018, 1019,
    924,  925,  956,  957,  926,  927,  958,  959,  988,  989, 1020, 1021,  990,  991, 1022, 1023
   };

   
   public static final int[] TREE_SCAN_4x4 = new int[]
   {
      0, 1, 2, 3, 6, 7, 4, 8, 9, 12, 13, 5, 10, 11, 14, 15
   };
   

   public static final int[] TREE_SCAN_8x8 = new int[]
   {
      0,    1,    2,    4,    5,   12,   13,    3,    6,    7,   14,   15,   10,   20,   21,   28,
     29,   11,   22,   23,   30,   31,    8,   16,   32,   33,   40,   41,   17,   34,   35,   42,
     43,   24,   48,   49,   56,   57,   25,   50,   51,   58,   59,    9,   18,   36,   37,   44,
     45,   19,   38,   39,   46,   47,   26,   52,   53,   60,   61,   27,   54,   55,   62,   63
   };


   public static final int[] TREE_SCAN_16x16 = new int[]
   {
      0,    1,    2,    4,    8,    9,   24,   25,    5,   10,   11,   26,   27,   20,   40,   41,
     56,   57,   21,   42,   43,   58,   59,    3,    6,   12,   13,   28,   29,    7,   14,   15,
     30,   31,   22,   44,   45,   60,   61,   23,   46,   47,   62,   63,   18,   36,   72,   73,
     88,   89,   37,   74,   75,   90,   91,   52,  104,  105,  120,  121,   53,  106,  107,  122,
    123,   19,   38,   76,   77,   92,   93,   39,   78,   79,   94,   95,   54,  108,  109,  124,
    125,   55,  110,  111,  126,  127,   16,   32,   64,  128,  129,  144,  145,   65,  130,  131,
    146,  147,   80,  160,  161,  176,  177,   81,  162,  163,  178,  179,   33,   66,  132,  133,
    148,  149,   67,  134,  135,  150,  151,   82,  164,  165,  180,  181,   83,  166,  167,  182,
    183,   48,   96,  192,  193,  208,  209,   97,  194,  195,  210,  211,  112,  224,  225,  240,
    241,  113,  226,  227,  242,  243,   49,   98,  196,  197,  212,  213,   99,  198,  199,  214,
    215,  114,  228,  229,  244,  245,  115,  230,  231,  246,  247,   17,   34,   68,  136,  137,
    152,  153,   69,  138,  139,  154,  155,   84,  168,  169,  184,  185,   85,  170,  171,  186,
    187,   35,   70,  140,  141,  156,  157,   71,  142,  143,  158,  159,   86,  172,  173,  188,
    189,   87,  174,  175,  190,  191,   50,  100,  200,  201,  216,  217,  101,  202,  203,  218,
    219,  116,  232,  233,  248,  249,  117,  234,  235,  250,  251,   51,  102,  204,  205,  220,
    221,  103,  206,  207,  222,  223,  118,  236,  237,  252,  253,  119,  238,  239,  254,  255   
   };
   
   
   public static final int[] TREE_SCAN_32x32 = new int[]
   {
      0,    1,    2,    4,    8,   16,   17,   48,   49,    9,   18,   19,   50,   51,   40,   80,
     81,  112,  113,   41,   82,   83,  114,  115,    5,   10,   20,   21,   52,   53,   11,   22,
     23,   54,   55,   42,   84,   85,  116,  117,   43,   86,   87,  118,  119,   36,   72,  144,
    145,  176,  177,   73,  146,  147,  178,  179,  104,  208,  209,  240,  241,  105,  210,  211,
    242,  243,   37,   74,  148,  149,  180,  181,   75,  150,  151,  182,  183,  106,  212,  213,
    244,  245,  107,  214,  215,  246,  247,    3,    6,   12,   24,   25,   56,   57,   13,   26,
     27,   58,   59,   44,   88,   89,  120,  121,   45,   90,   91,  122,  123,    7,   14,   28,
     29,   60,   61,   15,   30,   31,   62,   63,   46,   92,   93,  124,  125,   47,   94,   95,
    126,  127,   38,   76,  152,  153,  184,  185,   77,  154,  155,  186,  187,  108,  216,  217,
    248,  249,  109,  218,  219,  250,  251,   39,   78,  156,  157,  188,  189,   79,  158,  159,
    190,  191,  110,  220,  221,  252,  253,  111,  222,  223,  254,  255,   34,   68,  136,  272,
    273,  304,  305,  137,  274,  275,  306,  307,  168,  336,  337,  368,  369,  169,  338,  339,
    370,  371,   69,  138,  276,  277,  308,  309,  139,  278,  279,  310,  311,  170,  340,  341,
    372,  373,  171,  342,  343,  374,  375,  100,  200,  400,  401,  432,  433,  201,  402,  403,
    434,  435,  232,  464,  465,  496,  497,  233,  466,  467,  498,  499,  101,  202,  404,  405,
    436,  437,  203,  406,  407,  438,  439,  234,  468,  469,  500,  501,  235,  470,  471,  502,
    503,   35,   70,  140,  280,  281,  312,  313,  141,  282,  283,  314,  315,  172,  344,  345,
    376,  377,  173,  346,  347,  378,  379,   71,  142,  284,  285,  316,  317,  143,  286,  287,
    318,  319,  174,  348,  349,  380,  381,  175,  350,  351,  382,  383,  102,  204,  408,  409,
    440,  441,  205,  410,  411,  442,  443,  236,  472,  473,  504,  505,  237,  474,  475,  506,
    507,  103,  206,  412,  413,  444,  445,  207,  414,  415,  446,  447,  238,  476,  477,  508,
    509,  239,  478,  479,  510,  511,   32,   64,  128,  256,  512,  513,  544,  545,  257,  514,
    515,  546,  547,  288,  576,  577,  608,  609,  289,  578,  579,  610,  611,  129,  258,  516,
    517,  548,  549,  259,  518,  519,  550,  551,  290,  580,  581,  612,  613,  291,  582,  583,
    614,  615,  160,  320,  640,  641,  672,  673,  321,  642,  643,  674,  675,  352,  704,  705,
    736,  737,  353,  706,  707,  738,  739,  161,  322,  644,  645,  676,  677,  323,  646,  647,
    678,  679,  354,  708,  709,  740,  741,  355,  710,  711,  742,  743,   65,  130,  260,  520,
    521,  552,  553,  261,  522,  523,  554,  555,  292,  584,  585,  616,  617,  293,  586,  587,
    618,  619,  131,  262,  524,  525,  556,  557,  263,  526,  527,  558,  559,  294,  588,  589,
    620,  621,  295,  590,  591,  622,  623,  162,  324,  648,  649,  680,  681,  325,  650,  651,
    682,  683,  356,  712,  713,  744,  745,  357,  714,  715,  746,  747,  163,  326,  652,  653,
    684,  685,  327,  654,  655,  686,  687,  358,  716,  717,  748,  749,  359,  718,  719,  750,
    751,   96,  192,  384,  768,  769,  800,  801,  385,  770,  771,  802,  803,  416,  832,  833,
    864,  865,  417,  834,  835,  866,  867,  193,  386,  772,  773,  804,  805,  387,  774,  775,
    806,  807,  418,  836,  837,  868,  869,  419,  838,  839,  870,  871,  224,  448,  896,  897,
    928,  929,  449,  898,  899,  930,  931,  480,  960,  961,  992,  993,  481,  962,  963,  994,
    995,  225,  450,  900,  901,  932,  933,  451,  902,  903,  934,  935,  482,  964,  965,  996,
    997,  483,  966,  967,  998,  999,   97,  194,  388,  776,  777,  808,  809,  389,  778,  779,
    810,  811,  420,  840,  841,  872,  873,  421,  842,  843,  874,  875,  195,  390,  780,  781,
    812,  813,  391,  782,  783,  814,  815,  422,  844,  845,  876,  877,  423,  846,  847,  878,
    879,  226,  452,  904,  905,  936,  937,  453,  906,  907,  938,  939,  484,  968,  969, 1000,
   1001,  485,  970,  971, 1002, 1003,  227,  454,  908,  909,  940,  941,  455,  910,  911,  942,
    943,  486,  972,  973, 1004, 1005,  487,  974,  975, 1006, 1007,   33,   66,  132,  264,  528,
    529,  560,  561,  265,  530,  531,  562,  563,  296,  592,  593,  624,  625,  297,  594,  595,
    626,  627,  133,  266,  532,  533,  564,  565,  267,  534,  535,  566,  567,  298,  596,  597,
    628,  629,  299,  598,  599,  630,  631,  164,  328,  656,  657,  688,  689,  329,  658,  659,
    690,  691,  360,  720,  721,  752,  753,  361,  722,  723,  754,  755,  165,  330,  660,  661,
    692,  693,  331,  662,  663,  694,  695,  362,  724,  725,  756,  757,  363,  726,  727,  758,
    759,   67,  134,  268,  536,  537,  568,  569,  269,  538,  539,  570,  571,  300,  600,  601,
    632,  633,  301,  602,  603,  634,  635,  135,  270,  540,  541,  572,  573,  271,  542,  543,
    574,  575,  302,  604,  605,  636,  637,  303,  606,  607,  638,  639,  166,  332,  664,  665,
    696,  697,  333,  666,  667,  698,  699,  364,  728,  729,  760,  761,  365,  730,  731,  762,
    763,  167,  334,  668,  669,  700,  701,  335,  670,  671,  702,  703,  366,  732,  733,  764,
    765,  367,  734,  735,  766,  767,   98,  196,  392,  784,  785,  816,  817,  393,  786,  787,
    818,  819,  424,  848,  849,  880,  881,  425,  850,  851,  882,  883,  197,  394,  788,  789,
    820,  821,  395,  790,  791,  822,  823,  426,  852,  853,  884,  885,  427,  854,  855,  886,
    887,  228,  456,  912,  913,  944,  945,  457,  914,  915,  946,  947,  488,  976,  977, 1008,
   1009,  489,  978,  979, 1010, 1011,  229,  458,  916,  917,  948,  949,  459,  918,  919,  950,
    951,  490,  980,  981, 1012, 1013,  491,  982,  983, 1014, 1015,   99,  198,  396,  792,  793,
    824,  825,  397,  794,  795,  826,  827,  428,  856,  857,  888,  889,  429,  858,  859,  890,
    891,  199,  398,  796,  797,  828,  829,  399,  798,  799,  830,  831,  430,  860,  861,  892,
    893,  431,  862,  863,  894,  895,  230,  460,  920,  921,  952,  953,  461,  922,  923,  954,
    955,  492,  984,  985, 1016, 1017,  493,  986,  987, 1018, 1019,  231,  462,  924,  925,  956,
    957,  463,  926,  927,  958,  959,  494,  988,  989, 1020, 1021,  495,  990,  991, 1022, 1023
   };

   
   public enum ScanOrder
   {
      ZIG_ZAG,
      MORTON,
      TREE
   }
   
   public static int[] getScanTable(int dim, ScanOrder scan)
   {
      switch (dim) 
      {
         case 4 :
            if (scan == ScanOrder.ZIG_ZAG)
               return ZIGZAG_SCAN_4x4;
            if (scan == ScanOrder.MORTON)
               return MORTON_SCAN_4x4;

            return TREE_SCAN_4x4;

         case 8 :
            if (scan == ScanOrder.ZIG_ZAG)
               return ZIGZAG_SCAN_8x8;
            if (scan == ScanOrder.MORTON)
               return MORTON_SCAN_8x8;

            return TREE_SCAN_8x8;
            
         case 16 :
            if (scan == ScanOrder.ZIG_ZAG)
               return ZIGZAG_SCAN_16x16;
            if (scan == ScanOrder.MORTON)
               return MORTON_SCAN_16x16;

            return TREE_SCAN_16x16;
            
         case 32 :
            if (scan == ScanOrder.ZIG_ZAG)
               return ZIGZAG_SCAN_32x32;
            if (scan == ScanOrder.MORTON)
               return MORTON_SCAN_32x32;

            return TREE_SCAN_32x32;
            
         default :
            return null;      
      }
   }
}
