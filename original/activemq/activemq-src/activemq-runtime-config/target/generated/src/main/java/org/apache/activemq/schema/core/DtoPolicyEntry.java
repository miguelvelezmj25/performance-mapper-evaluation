//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.10-b140310.1920 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.09.17 at 02:16:08 PM EDT 
//


package org.apache.activemq.schema.core;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;choice>
 *           &lt;element name="deadLetterStrategy" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}discarding"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}individualDeadLetterStrategy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}sharedDeadLetterStrategy"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="destination" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}queue"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}tempQueue"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}tempTopic"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}topic"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="dispatchPolicy" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}priorityDispatchPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}priorityNetworkDispatchPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}roundRobinDispatchPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}simpleDispatchPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}strictOrderDispatchPolicy"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="messageEvictionStrategy" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}oldestMessageEvictionStrategy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}oldestMessageWithLowestPriorityEvictionStrategy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}uniquePropertyMessageEvictionStrategy"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="messageGroupMapFactory" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}cachedMessageGroupMapFactory"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}messageGroupHashBucketFactory"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}simpleMessageGroupMapFactory"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="networkBridgeFilterFactory" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}conditionalNetworkBridgeFilterFactory"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}defaultNetworkBridgeFilterFactory"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="pendingDurableSubscriberPolicy" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}fileDurableSubscriberCursor"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}storeDurableSubscriberCursor"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}vmDurableCursor"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="pendingMessageLimitStrategy" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}constantPendingMessageLimitStrategy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}prefetchRatePendingMessageLimitStrategy"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="pendingQueuePolicy" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}fileQueueCursor"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}storeCursor"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}vmQueueCursor"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="pendingSubscriberPolicy" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}fileCursor"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}vmCursor"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="slowConsumerStrategy" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}abortSlowAckConsumerStrategy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}abortSlowConsumerStrategy"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="subscriptionRecoveryPolicy" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;choice minOccurs="0">
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}fixedCountSubscriptionRecoveryPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}fixedSizedSubscriptionRecoveryPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}lastImageSubscriptionRecoveryPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}noSubscriptionRecoveryPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}queryBasedSubscriptionRecoveryPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}retainedMessageSubscriptionRecoveryPolicy"/>
 *                     &lt;element ref="{http://activemq.apache.org/schema/core}timedSubscriptionRecoveryPolicy"/>
 *                     &lt;any namespace='##other'/>
 *                   &lt;/choice>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;any namespace='##other' maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;/choice>
 *       &lt;/choice>
 *       &lt;attribute name="advisoryForConsumed" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="advisoryForDelivery" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="advisoryForDiscardingMessages" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="advisoryForFastProducers" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="advisoryForSlowConsumers" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="advisoryWhenFull" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="allConsumersExclusiveByDefault" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="alwaysRetroactive" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="blockedProducerWarningInterval" type="{http://www.w3.org/2001/XMLSchema}long" />
 *       &lt;attribute name="consumersBeforeDispatchStarts" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="cursorMemoryHighWaterMark" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="deadLetterStrategy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="destination" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="dispatchPolicy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="doOptimzeMessageStorage" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="durableTopicPrefetch" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="enableAudit" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="expireMessagesPeriod" type="{http://www.w3.org/2001/XMLSchema}long" />
 *       &lt;attribute name="gcInactiveDestinations" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="gcWithNetworkConsumers" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="inactiveTimeoutBeforeGC" type="{http://www.w3.org/2001/XMLSchema}long" />
 *       &lt;attribute name="inactiveTimoutBeforeGC" type="{http://www.w3.org/2001/XMLSchema}long" />
 *       &lt;attribute name="includeBodyForAdvisory" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="lazyDispatch" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="maxAuditDepth" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="maxBrowsePageSize" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="maxDestinations" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="maxExpirePageSize" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="maxPageSize" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="maxProducersToAudit" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="maxQueueAuditDepth" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="memoryLimit" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="messageEvictionStrategy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="messageGroupMapFactory" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="messageGroupMapFactoryType" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="minimumMessageSize" type="{http://www.w3.org/2001/XMLSchema}long" />
 *       &lt;attribute name="networkBridgeFilterFactory" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="optimizeMessageStoreInFlightLimit" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="optimizedDispatch" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="pendingDurableSubscriberPolicy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="pendingMessageLimitStrategy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="pendingQueuePolicy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="pendingSubscriberPolicy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="persistJMSRedelivered" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="prioritizedMessages" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="producerFlowControl" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="queue" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="queueBrowserPrefetch" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="queuePrefetch" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="reduceMemoryFootprint" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="sendAdvisoryIfNoConsumers" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="slowConsumerStrategy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="storeUsageHighWaterMark" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="strictOrderDispatch" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="subscriptionRecoveryPolicy" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="tempQueue" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="tempTopic" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="timeBeforeDispatchStarts" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="topic" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="topicPrefetch" type="{http://www.w3.org/2001/XMLSchema}integer" />
 *       &lt;attribute name="useCache" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="useConsumerPriority" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="usePrefetchExtension" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="useTopicSubscriptionInflightStats" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "deadLetterStrategyOrDestinationOrDispatchPolicy"
})
@XmlRootElement(name = "policyEntry")
public class DtoPolicyEntry implements Equals, HashCode, ToString
{

    @XmlElementRefs({
        @XmlElementRef(name = "subscriptionRecoveryPolicy", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "destination", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "dispatchPolicy", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "messageGroupMapFactory", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "networkBridgeFilterFactory", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "pendingMessageLimitStrategy", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "messageEvictionStrategy", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "pendingDurableSubscriberPolicy", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "pendingQueuePolicy", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "slowConsumerStrategy", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "pendingSubscriberPolicy", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "deadLetterStrategy", namespace = "http://activemq.apache.org/schema/core", type = JAXBElement.class, required = false)
    })
    @XmlAnyElement(lax = true)
    protected List<Object> deadLetterStrategyOrDestinationOrDispatchPolicy;
    @XmlAttribute(name = "advisoryForConsumed")
    protected Boolean advisoryForConsumed;
    @XmlAttribute(name = "advisoryForDelivery")
    protected Boolean advisoryForDelivery;
    @XmlAttribute(name = "advisoryForDiscardingMessages")
    protected Boolean advisoryForDiscardingMessages;
    @XmlAttribute(name = "advisoryForFastProducers")
    protected Boolean advisoryForFastProducers;
    @XmlAttribute(name = "advisoryForSlowConsumers")
    protected Boolean advisoryForSlowConsumers;
    @XmlAttribute(name = "advisoryWhenFull")
    protected Boolean advisoryWhenFull;
    @XmlAttribute(name = "allConsumersExclusiveByDefault")
    protected Boolean allConsumersExclusiveByDefault;
    @XmlAttribute(name = "alwaysRetroactive")
    protected Boolean alwaysRetroactive;
    @XmlAttribute(name = "blockedProducerWarningInterval")
    protected Long blockedProducerWarningInterval;
    @XmlAttribute(name = "consumersBeforeDispatchStarts")
    protected BigInteger consumersBeforeDispatchStarts;
    @XmlAttribute(name = "cursorMemoryHighWaterMark")
    protected BigInteger cursorMemoryHighWaterMark;
    @XmlAttribute(name = "deadLetterStrategy")
    protected String deadLetterStrategy;
    @XmlAttribute(name = "destination")
    protected String destination;
    @XmlAttribute(name = "dispatchPolicy")
    protected String dispatchPolicy;
    @XmlAttribute(name = "doOptimzeMessageStorage")
    protected Boolean doOptimzeMessageStorage;
    @XmlAttribute(name = "durableTopicPrefetch")
    protected BigInteger durableTopicPrefetch;
    @XmlAttribute(name = "enableAudit")
    protected Boolean enableAudit;
    @XmlAttribute(name = "expireMessagesPeriod")
    protected Long expireMessagesPeriod;
    @XmlAttribute(name = "gcInactiveDestinations")
    protected Boolean gcInactiveDestinations;
    @XmlAttribute(name = "gcWithNetworkConsumers")
    protected Boolean gcWithNetworkConsumers;
    @XmlAttribute(name = "inactiveTimeoutBeforeGC")
    protected Long inactiveTimeoutBeforeGC;
    @XmlAttribute(name = "inactiveTimoutBeforeGC")
    protected Long inactiveTimoutBeforeGC;
    @XmlAttribute(name = "includeBodyForAdvisory")
    protected Boolean includeBodyForAdvisory;
    @XmlAttribute(name = "lazyDispatch")
    protected Boolean lazyDispatch;
    @XmlAttribute(name = "maxAuditDepth")
    protected BigInteger maxAuditDepth;
    @XmlAttribute(name = "maxBrowsePageSize")
    protected BigInteger maxBrowsePageSize;
    @XmlAttribute(name = "maxDestinations")
    protected BigInteger maxDestinations;
    @XmlAttribute(name = "maxExpirePageSize")
    protected BigInteger maxExpirePageSize;
    @XmlAttribute(name = "maxPageSize")
    protected BigInteger maxPageSize;
    @XmlAttribute(name = "maxProducersToAudit")
    protected BigInteger maxProducersToAudit;
    @XmlAttribute(name = "maxQueueAuditDepth")
    protected BigInteger maxQueueAuditDepth;
    @XmlAttribute(name = "memoryLimit")
    protected String memoryLimit;
    @XmlAttribute(name = "messageEvictionStrategy")
    protected String messageEvictionStrategy;
    @XmlAttribute(name = "messageGroupMapFactory")
    protected String messageGroupMapFactory;
    @XmlAttribute(name = "messageGroupMapFactoryType")
    protected String messageGroupMapFactoryType;
    @XmlAttribute(name = "minimumMessageSize")
    protected Long minimumMessageSize;
    @XmlAttribute(name = "networkBridgeFilterFactory")
    protected String networkBridgeFilterFactory;
    @XmlAttribute(name = "optimizeMessageStoreInFlightLimit")
    protected BigInteger optimizeMessageStoreInFlightLimit;
    @XmlAttribute(name = "optimizedDispatch")
    protected Boolean optimizedDispatch;
    @XmlAttribute(name = "pendingDurableSubscriberPolicy")
    protected String pendingDurableSubscriberPolicy;
    @XmlAttribute(name = "pendingMessageLimitStrategy")
    protected String pendingMessageLimitStrategy;
    @XmlAttribute(name = "pendingQueuePolicy")
    protected String pendingQueuePolicy;
    @XmlAttribute(name = "pendingSubscriberPolicy")
    protected String pendingSubscriberPolicy;
    @XmlAttribute(name = "persistJMSRedelivered")
    protected Boolean persistJMSRedelivered;
    @XmlAttribute(name = "prioritizedMessages")
    protected Boolean prioritizedMessages;
    @XmlAttribute(name = "producerFlowControl")
    protected Boolean producerFlowControl;
    @XmlAttribute(name = "queue")
    protected String queue;
    @XmlAttribute(name = "queueBrowserPrefetch")
    protected BigInteger queueBrowserPrefetch;
    @XmlAttribute(name = "queuePrefetch")
    protected BigInteger queuePrefetch;
    @XmlAttribute(name = "reduceMemoryFootprint")
    protected Boolean reduceMemoryFootprint;
    @XmlAttribute(name = "sendAdvisoryIfNoConsumers")
    protected Boolean sendAdvisoryIfNoConsumers;
    @XmlAttribute(name = "slowConsumerStrategy")
    protected String slowConsumerStrategy;
    @XmlAttribute(name = "storeUsageHighWaterMark")
    protected BigInteger storeUsageHighWaterMark;
    @XmlAttribute(name = "strictOrderDispatch")
    protected Boolean strictOrderDispatch;
    @XmlAttribute(name = "subscriptionRecoveryPolicy")
    protected String subscriptionRecoveryPolicy;
    @XmlAttribute(name = "tempQueue")
    protected Boolean tempQueue;
    @XmlAttribute(name = "tempTopic")
    protected Boolean tempTopic;
    @XmlAttribute(name = "timeBeforeDispatchStarts")
    protected BigInteger timeBeforeDispatchStarts;
    @XmlAttribute(name = "topic")
    protected String topic;
    @XmlAttribute(name = "topicPrefetch")
    protected BigInteger topicPrefetch;
    @XmlAttribute(name = "useCache")
    protected Boolean useCache;
    @XmlAttribute(name = "useConsumerPriority")
    protected Boolean useConsumerPriority;
    @XmlAttribute(name = "usePrefetchExtension")
    protected Boolean usePrefetchExtension;
    @XmlAttribute(name = "useTopicSubscriptionInflightStats")
    protected Boolean useTopicSubscriptionInflightStats;
    @XmlAttribute(name = "id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the deadLetterStrategyOrDestinationOrDispatchPolicy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the deadLetterStrategyOrDestinationOrDispatchPolicy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDeadLetterStrategyOrDestinationOrDispatchPolicy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.SubscriptionRecoveryPolicy }{@code >}
     * {@link Object }
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.DispatchPolicy }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.MessageGroupMapFactory }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.NetworkBridgeFilterFactory }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.PendingMessageLimitStrategy }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.SlowConsumerStrategy }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.Destination }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.MessageEvictionStrategy }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.PendingDurableSubscriberPolicy }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.PendingQueuePolicy }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.PendingSubscriberPolicy }{@code >}
     * {@link JAXBElement }{@code <}{@link DtoPolicyEntry.DeadLetterStrategy }{@code >}
     * 
     * 
     */
    public List<Object> getDeadLetterStrategyOrDestinationOrDispatchPolicy() {
        if (deadLetterStrategyOrDestinationOrDispatchPolicy == null) {
            deadLetterStrategyOrDestinationOrDispatchPolicy = new ArrayList<Object>();
        }
        return this.deadLetterStrategyOrDestinationOrDispatchPolicy;
    }

    /**
     * Gets the value of the advisoryForConsumed property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAdvisoryForConsumed() {
        return advisoryForConsumed;
    }

    /**
     * Sets the value of the advisoryForConsumed property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAdvisoryForConsumed(Boolean value) {
        this.advisoryForConsumed = value;
    }

    /**
     * Gets the value of the advisoryForDelivery property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAdvisoryForDelivery() {
        return advisoryForDelivery;
    }

    /**
     * Sets the value of the advisoryForDelivery property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAdvisoryForDelivery(Boolean value) {
        this.advisoryForDelivery = value;
    }

    /**
     * Gets the value of the advisoryForDiscardingMessages property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAdvisoryForDiscardingMessages() {
        return advisoryForDiscardingMessages;
    }

    /**
     * Sets the value of the advisoryForDiscardingMessages property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAdvisoryForDiscardingMessages(Boolean value) {
        this.advisoryForDiscardingMessages = value;
    }

    /**
     * Gets the value of the advisoryForFastProducers property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAdvisoryForFastProducers() {
        return advisoryForFastProducers;
    }

    /**
     * Sets the value of the advisoryForFastProducers property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAdvisoryForFastProducers(Boolean value) {
        this.advisoryForFastProducers = value;
    }

    /**
     * Gets the value of the advisoryForSlowConsumers property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAdvisoryForSlowConsumers() {
        return advisoryForSlowConsumers;
    }

    /**
     * Sets the value of the advisoryForSlowConsumers property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAdvisoryForSlowConsumers(Boolean value) {
        this.advisoryForSlowConsumers = value;
    }

    /**
     * Gets the value of the advisoryWhenFull property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAdvisoryWhenFull() {
        return advisoryWhenFull;
    }

    /**
     * Sets the value of the advisoryWhenFull property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAdvisoryWhenFull(Boolean value) {
        this.advisoryWhenFull = value;
    }

    /**
     * Gets the value of the allConsumersExclusiveByDefault property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAllConsumersExclusiveByDefault() {
        return allConsumersExclusiveByDefault;
    }

    /**
     * Sets the value of the allConsumersExclusiveByDefault property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAllConsumersExclusiveByDefault(Boolean value) {
        this.allConsumersExclusiveByDefault = value;
    }

    /**
     * Gets the value of the alwaysRetroactive property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAlwaysRetroactive() {
        return alwaysRetroactive;
    }

    /**
     * Sets the value of the alwaysRetroactive property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAlwaysRetroactive(Boolean value) {
        this.alwaysRetroactive = value;
    }

    /**
     * Gets the value of the blockedProducerWarningInterval property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getBlockedProducerWarningInterval() {
        return blockedProducerWarningInterval;
    }

    /**
     * Sets the value of the blockedProducerWarningInterval property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setBlockedProducerWarningInterval(Long value) {
        this.blockedProducerWarningInterval = value;
    }

    /**
     * Gets the value of the consumersBeforeDispatchStarts property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getConsumersBeforeDispatchStarts() {
        return consumersBeforeDispatchStarts;
    }

    /**
     * Sets the value of the consumersBeforeDispatchStarts property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setConsumersBeforeDispatchStarts(BigInteger value) {
        this.consumersBeforeDispatchStarts = value;
    }

    /**
     * Gets the value of the cursorMemoryHighWaterMark property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getCursorMemoryHighWaterMark() {
        return cursorMemoryHighWaterMark;
    }

    /**
     * Sets the value of the cursorMemoryHighWaterMark property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setCursorMemoryHighWaterMark(BigInteger value) {
        this.cursorMemoryHighWaterMark = value;
    }

    /**
     * Gets the value of the deadLetterStrategy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDeadLetterStrategy() {
        return deadLetterStrategy;
    }

    /**
     * Sets the value of the deadLetterStrategy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDeadLetterStrategy(String value) {
        this.deadLetterStrategy = value;
    }

    /**
     * Gets the value of the destination property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDestination() {
        return destination;
    }

    /**
     * Sets the value of the destination property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDestination(String value) {
        this.destination = value;
    }

    /**
     * Gets the value of the dispatchPolicy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDispatchPolicy() {
        return dispatchPolicy;
    }

    /**
     * Sets the value of the dispatchPolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDispatchPolicy(String value) {
        this.dispatchPolicy = value;
    }

    /**
     * Gets the value of the doOptimzeMessageStorage property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDoOptimzeMessageStorage() {
        return doOptimzeMessageStorage;
    }

    /**
     * Sets the value of the doOptimzeMessageStorage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDoOptimzeMessageStorage(Boolean value) {
        this.doOptimzeMessageStorage = value;
    }

    /**
     * Gets the value of the durableTopicPrefetch property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDurableTopicPrefetch() {
        return durableTopicPrefetch;
    }

    /**
     * Sets the value of the durableTopicPrefetch property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDurableTopicPrefetch(BigInteger value) {
        this.durableTopicPrefetch = value;
    }

    /**
     * Gets the value of the enableAudit property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isEnableAudit() {
        return enableAudit;
    }

    /**
     * Sets the value of the enableAudit property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setEnableAudit(Boolean value) {
        this.enableAudit = value;
    }

    /**
     * Gets the value of the expireMessagesPeriod property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getExpireMessagesPeriod() {
        return expireMessagesPeriod;
    }

    /**
     * Sets the value of the expireMessagesPeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setExpireMessagesPeriod(Long value) {
        this.expireMessagesPeriod = value;
    }

    /**
     * Gets the value of the gcInactiveDestinations property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isGcInactiveDestinations() {
        return gcInactiveDestinations;
    }

    /**
     * Sets the value of the gcInactiveDestinations property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setGcInactiveDestinations(Boolean value) {
        this.gcInactiveDestinations = value;
    }

    /**
     * Gets the value of the gcWithNetworkConsumers property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isGcWithNetworkConsumers() {
        return gcWithNetworkConsumers;
    }

    /**
     * Sets the value of the gcWithNetworkConsumers property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setGcWithNetworkConsumers(Boolean value) {
        this.gcWithNetworkConsumers = value;
    }

    /**
     * Gets the value of the inactiveTimeoutBeforeGC property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getInactiveTimeoutBeforeGC() {
        return inactiveTimeoutBeforeGC;
    }

    /**
     * Sets the value of the inactiveTimeoutBeforeGC property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setInactiveTimeoutBeforeGC(Long value) {
        this.inactiveTimeoutBeforeGC = value;
    }

    /**
     * Gets the value of the inactiveTimoutBeforeGC property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getInactiveTimoutBeforeGC() {
        return inactiveTimoutBeforeGC;
    }

    /**
     * Sets the value of the inactiveTimoutBeforeGC property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setInactiveTimoutBeforeGC(Long value) {
        this.inactiveTimoutBeforeGC = value;
    }

    /**
     * Gets the value of the includeBodyForAdvisory property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIncludeBodyForAdvisory() {
        return includeBodyForAdvisory;
    }

    /**
     * Sets the value of the includeBodyForAdvisory property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIncludeBodyForAdvisory(Boolean value) {
        this.includeBodyForAdvisory = value;
    }

    /**
     * Gets the value of the lazyDispatch property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isLazyDispatch() {
        return lazyDispatch;
    }

    /**
     * Sets the value of the lazyDispatch property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setLazyDispatch(Boolean value) {
        this.lazyDispatch = value;
    }

    /**
     * Gets the value of the maxAuditDepth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxAuditDepth() {
        return maxAuditDepth;
    }

    /**
     * Sets the value of the maxAuditDepth property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxAuditDepth(BigInteger value) {
        this.maxAuditDepth = value;
    }

    /**
     * Gets the value of the maxBrowsePageSize property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxBrowsePageSize() {
        return maxBrowsePageSize;
    }

    /**
     * Sets the value of the maxBrowsePageSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxBrowsePageSize(BigInteger value) {
        this.maxBrowsePageSize = value;
    }

    /**
     * Gets the value of the maxDestinations property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxDestinations() {
        return maxDestinations;
    }

    /**
     * Sets the value of the maxDestinations property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxDestinations(BigInteger value) {
        this.maxDestinations = value;
    }

    /**
     * Gets the value of the maxExpirePageSize property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxExpirePageSize() {
        return maxExpirePageSize;
    }

    /**
     * Sets the value of the maxExpirePageSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxExpirePageSize(BigInteger value) {
        this.maxExpirePageSize = value;
    }

    /**
     * Gets the value of the maxPageSize property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxPageSize() {
        return maxPageSize;
    }

    /**
     * Sets the value of the maxPageSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxPageSize(BigInteger value) {
        this.maxPageSize = value;
    }

    /**
     * Gets the value of the maxProducersToAudit property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxProducersToAudit() {
        return maxProducersToAudit;
    }

    /**
     * Sets the value of the maxProducersToAudit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxProducersToAudit(BigInteger value) {
        this.maxProducersToAudit = value;
    }

    /**
     * Gets the value of the maxQueueAuditDepth property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxQueueAuditDepth() {
        return maxQueueAuditDepth;
    }

    /**
     * Sets the value of the maxQueueAuditDepth property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxQueueAuditDepth(BigInteger value) {
        this.maxQueueAuditDepth = value;
    }

    /**
     * Gets the value of the memoryLimit property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMemoryLimit() {
        return memoryLimit;
    }

    /**
     * Sets the value of the memoryLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMemoryLimit(String value) {
        this.memoryLimit = value;
    }

    /**
     * Gets the value of the messageEvictionStrategy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMessageEvictionStrategy() {
        return messageEvictionStrategy;
    }

    /**
     * Sets the value of the messageEvictionStrategy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMessageEvictionStrategy(String value) {
        this.messageEvictionStrategy = value;
    }

    /**
     * Gets the value of the messageGroupMapFactory property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMessageGroupMapFactory() {
        return messageGroupMapFactory;
    }

    /**
     * Sets the value of the messageGroupMapFactory property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMessageGroupMapFactory(String value) {
        this.messageGroupMapFactory = value;
    }

    /**
     * Gets the value of the messageGroupMapFactoryType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMessageGroupMapFactoryType() {
        return messageGroupMapFactoryType;
    }

    /**
     * Sets the value of the messageGroupMapFactoryType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMessageGroupMapFactoryType(String value) {
        this.messageGroupMapFactoryType = value;
    }

    /**
     * Gets the value of the minimumMessageSize property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getMinimumMessageSize() {
        return minimumMessageSize;
    }

    /**
     * Sets the value of the minimumMessageSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setMinimumMessageSize(Long value) {
        this.minimumMessageSize = value;
    }

    /**
     * Gets the value of the networkBridgeFilterFactory property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNetworkBridgeFilterFactory() {
        return networkBridgeFilterFactory;
    }

    /**
     * Sets the value of the networkBridgeFilterFactory property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNetworkBridgeFilterFactory(String value) {
        this.networkBridgeFilterFactory = value;
    }

    /**
     * Gets the value of the optimizeMessageStoreInFlightLimit property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getOptimizeMessageStoreInFlightLimit() {
        return optimizeMessageStoreInFlightLimit;
    }

    /**
     * Sets the value of the optimizeMessageStoreInFlightLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setOptimizeMessageStoreInFlightLimit(BigInteger value) {
        this.optimizeMessageStoreInFlightLimit = value;
    }

    /**
     * Gets the value of the optimizedDispatch property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isOptimizedDispatch() {
        return optimizedDispatch;
    }

    /**
     * Sets the value of the optimizedDispatch property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOptimizedDispatch(Boolean value) {
        this.optimizedDispatch = value;
    }

    /**
     * Gets the value of the pendingDurableSubscriberPolicy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPendingDurableSubscriberPolicy() {
        return pendingDurableSubscriberPolicy;
    }

    /**
     * Sets the value of the pendingDurableSubscriberPolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPendingDurableSubscriberPolicy(String value) {
        this.pendingDurableSubscriberPolicy = value;
    }

    /**
     * Gets the value of the pendingMessageLimitStrategy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPendingMessageLimitStrategy() {
        return pendingMessageLimitStrategy;
    }

    /**
     * Sets the value of the pendingMessageLimitStrategy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPendingMessageLimitStrategy(String value) {
        this.pendingMessageLimitStrategy = value;
    }

    /**
     * Gets the value of the pendingQueuePolicy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPendingQueuePolicy() {
        return pendingQueuePolicy;
    }

    /**
     * Sets the value of the pendingQueuePolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPendingQueuePolicy(String value) {
        this.pendingQueuePolicy = value;
    }

    /**
     * Gets the value of the pendingSubscriberPolicy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPendingSubscriberPolicy() {
        return pendingSubscriberPolicy;
    }

    /**
     * Sets the value of the pendingSubscriberPolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPendingSubscriberPolicy(String value) {
        this.pendingSubscriberPolicy = value;
    }

    /**
     * Gets the value of the persistJMSRedelivered property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isPersistJMSRedelivered() {
        return persistJMSRedelivered;
    }

    /**
     * Sets the value of the persistJMSRedelivered property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPersistJMSRedelivered(Boolean value) {
        this.persistJMSRedelivered = value;
    }

    /**
     * Gets the value of the prioritizedMessages property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isPrioritizedMessages() {
        return prioritizedMessages;
    }

    /**
     * Sets the value of the prioritizedMessages property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setPrioritizedMessages(Boolean value) {
        this.prioritizedMessages = value;
    }

    /**
     * Gets the value of the producerFlowControl property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isProducerFlowControl() {
        return producerFlowControl;
    }

    /**
     * Sets the value of the producerFlowControl property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setProducerFlowControl(Boolean value) {
        this.producerFlowControl = value;
    }

    /**
     * Gets the value of the queue property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getQueue() {
        return queue;
    }

    /**
     * Sets the value of the queue property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setQueue(String value) {
        this.queue = value;
    }

    /**
     * Gets the value of the queueBrowserPrefetch property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getQueueBrowserPrefetch() {
        return queueBrowserPrefetch;
    }

    /**
     * Sets the value of the queueBrowserPrefetch property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setQueueBrowserPrefetch(BigInteger value) {
        this.queueBrowserPrefetch = value;
    }

    /**
     * Gets the value of the queuePrefetch property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getQueuePrefetch() {
        return queuePrefetch;
    }

    /**
     * Sets the value of the queuePrefetch property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setQueuePrefetch(BigInteger value) {
        this.queuePrefetch = value;
    }

    /**
     * Gets the value of the reduceMemoryFootprint property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isReduceMemoryFootprint() {
        return reduceMemoryFootprint;
    }

    /**
     * Sets the value of the reduceMemoryFootprint property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setReduceMemoryFootprint(Boolean value) {
        this.reduceMemoryFootprint = value;
    }

    /**
     * Gets the value of the sendAdvisoryIfNoConsumers property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isSendAdvisoryIfNoConsumers() {
        return sendAdvisoryIfNoConsumers;
    }

    /**
     * Sets the value of the sendAdvisoryIfNoConsumers property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setSendAdvisoryIfNoConsumers(Boolean value) {
        this.sendAdvisoryIfNoConsumers = value;
    }

    /**
     * Gets the value of the slowConsumerStrategy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSlowConsumerStrategy() {
        return slowConsumerStrategy;
    }

    /**
     * Sets the value of the slowConsumerStrategy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSlowConsumerStrategy(String value) {
        this.slowConsumerStrategy = value;
    }

    /**
     * Gets the value of the storeUsageHighWaterMark property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getStoreUsageHighWaterMark() {
        return storeUsageHighWaterMark;
    }

    /**
     * Sets the value of the storeUsageHighWaterMark property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setStoreUsageHighWaterMark(BigInteger value) {
        this.storeUsageHighWaterMark = value;
    }

    /**
     * Gets the value of the strictOrderDispatch property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isStrictOrderDispatch() {
        return strictOrderDispatch;
    }

    /**
     * Sets the value of the strictOrderDispatch property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setStrictOrderDispatch(Boolean value) {
        this.strictOrderDispatch = value;
    }

    /**
     * Gets the value of the subscriptionRecoveryPolicy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubscriptionRecoveryPolicy() {
        return subscriptionRecoveryPolicy;
    }

    /**
     * Sets the value of the subscriptionRecoveryPolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubscriptionRecoveryPolicy(String value) {
        this.subscriptionRecoveryPolicy = value;
    }

    /**
     * Gets the value of the tempQueue property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTempQueue() {
        return tempQueue;
    }

    /**
     * Sets the value of the tempQueue property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTempQueue(Boolean value) {
        this.tempQueue = value;
    }

    /**
     * Gets the value of the tempTopic property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTempTopic() {
        return tempTopic;
    }

    /**
     * Sets the value of the tempTopic property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTempTopic(Boolean value) {
        this.tempTopic = value;
    }

    /**
     * Gets the value of the timeBeforeDispatchStarts property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getTimeBeforeDispatchStarts() {
        return timeBeforeDispatchStarts;
    }

    /**
     * Sets the value of the timeBeforeDispatchStarts property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTimeBeforeDispatchStarts(BigInteger value) {
        this.timeBeforeDispatchStarts = value;
    }

    /**
     * Gets the value of the topic property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTopic() {
        return topic;
    }

    /**
     * Sets the value of the topic property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTopic(String value) {
        this.topic = value;
    }

    /**
     * Gets the value of the topicPrefetch property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getTopicPrefetch() {
        return topicPrefetch;
    }

    /**
     * Sets the value of the topicPrefetch property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTopicPrefetch(BigInteger value) {
        this.topicPrefetch = value;
    }

    /**
     * Gets the value of the useCache property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUseCache() {
        return useCache;
    }

    /**
     * Sets the value of the useCache property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUseCache(Boolean value) {
        this.useCache = value;
    }

    /**
     * Gets the value of the useConsumerPriority property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUseConsumerPriority() {
        return useConsumerPriority;
    }

    /**
     * Sets the value of the useConsumerPriority property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUseConsumerPriority(Boolean value) {
        this.useConsumerPriority = value;
    }

    /**
     * Gets the value of the usePrefetchExtension property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUsePrefetchExtension() {
        return usePrefetchExtension;
    }

    /**
     * Sets the value of the usePrefetchExtension property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUsePrefetchExtension(Boolean value) {
        this.usePrefetchExtension = value;
    }

    /**
     * Gets the value of the useTopicSubscriptionInflightStats property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isUseTopicSubscriptionInflightStats() {
        return useTopicSubscriptionInflightStats;
    }

    /**
     * Sets the value of the useTopicSubscriptionInflightStats property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUseTopicSubscriptionInflightStats(Boolean value) {
        this.useTopicSubscriptionInflightStats = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<Object> theDeadLetterStrategyOrDestinationOrDispatchPolicy;
            theDeadLetterStrategyOrDestinationOrDispatchPolicy = (((this.deadLetterStrategyOrDestinationOrDispatchPolicy!= null)&&(!this.deadLetterStrategyOrDestinationOrDispatchPolicy.isEmpty()))?this.getDeadLetterStrategyOrDestinationOrDispatchPolicy():null);
            strategy.appendField(locator, this, "deadLetterStrategyOrDestinationOrDispatchPolicy", buffer, theDeadLetterStrategyOrDestinationOrDispatchPolicy);
        }
        {
            Boolean theAdvisoryForConsumed;
            theAdvisoryForConsumed = this.isAdvisoryForConsumed();
            strategy.appendField(locator, this, "advisoryForConsumed", buffer, theAdvisoryForConsumed);
        }
        {
            Boolean theAdvisoryForDelivery;
            theAdvisoryForDelivery = this.isAdvisoryForDelivery();
            strategy.appendField(locator, this, "advisoryForDelivery", buffer, theAdvisoryForDelivery);
        }
        {
            Boolean theAdvisoryForDiscardingMessages;
            theAdvisoryForDiscardingMessages = this.isAdvisoryForDiscardingMessages();
            strategy.appendField(locator, this, "advisoryForDiscardingMessages", buffer, theAdvisoryForDiscardingMessages);
        }
        {
            Boolean theAdvisoryForFastProducers;
            theAdvisoryForFastProducers = this.isAdvisoryForFastProducers();
            strategy.appendField(locator, this, "advisoryForFastProducers", buffer, theAdvisoryForFastProducers);
        }
        {
            Boolean theAdvisoryForSlowConsumers;
            theAdvisoryForSlowConsumers = this.isAdvisoryForSlowConsumers();
            strategy.appendField(locator, this, "advisoryForSlowConsumers", buffer, theAdvisoryForSlowConsumers);
        }
        {
            Boolean theAdvisoryWhenFull;
            theAdvisoryWhenFull = this.isAdvisoryWhenFull();
            strategy.appendField(locator, this, "advisoryWhenFull", buffer, theAdvisoryWhenFull);
        }
        {
            Boolean theAllConsumersExclusiveByDefault;
            theAllConsumersExclusiveByDefault = this.isAllConsumersExclusiveByDefault();
            strategy.appendField(locator, this, "allConsumersExclusiveByDefault", buffer, theAllConsumersExclusiveByDefault);
        }
        {
            Boolean theAlwaysRetroactive;
            theAlwaysRetroactive = this.isAlwaysRetroactive();
            strategy.appendField(locator, this, "alwaysRetroactive", buffer, theAlwaysRetroactive);
        }
        {
            Long theBlockedProducerWarningInterval;
            theBlockedProducerWarningInterval = this.getBlockedProducerWarningInterval();
            strategy.appendField(locator, this, "blockedProducerWarningInterval", buffer, theBlockedProducerWarningInterval);
        }
        {
            BigInteger theConsumersBeforeDispatchStarts;
            theConsumersBeforeDispatchStarts = this.getConsumersBeforeDispatchStarts();
            strategy.appendField(locator, this, "consumersBeforeDispatchStarts", buffer, theConsumersBeforeDispatchStarts);
        }
        {
            BigInteger theCursorMemoryHighWaterMark;
            theCursorMemoryHighWaterMark = this.getCursorMemoryHighWaterMark();
            strategy.appendField(locator, this, "cursorMemoryHighWaterMark", buffer, theCursorMemoryHighWaterMark);
        }
        {
            String theDeadLetterStrategy;
            theDeadLetterStrategy = this.getDeadLetterStrategy();
            strategy.appendField(locator, this, "deadLetterStrategy", buffer, theDeadLetterStrategy);
        }
        {
            String theDestination;
            theDestination = this.getDestination();
            strategy.appendField(locator, this, "destination", buffer, theDestination);
        }
        {
            String theDispatchPolicy;
            theDispatchPolicy = this.getDispatchPolicy();
            strategy.appendField(locator, this, "dispatchPolicy", buffer, theDispatchPolicy);
        }
        {
            Boolean theDoOptimzeMessageStorage;
            theDoOptimzeMessageStorage = this.isDoOptimzeMessageStorage();
            strategy.appendField(locator, this, "doOptimzeMessageStorage", buffer, theDoOptimzeMessageStorage);
        }
        {
            BigInteger theDurableTopicPrefetch;
            theDurableTopicPrefetch = this.getDurableTopicPrefetch();
            strategy.appendField(locator, this, "durableTopicPrefetch", buffer, theDurableTopicPrefetch);
        }
        {
            Boolean theEnableAudit;
            theEnableAudit = this.isEnableAudit();
            strategy.appendField(locator, this, "enableAudit", buffer, theEnableAudit);
        }
        {
            Long theExpireMessagesPeriod;
            theExpireMessagesPeriod = this.getExpireMessagesPeriod();
            strategy.appendField(locator, this, "expireMessagesPeriod", buffer, theExpireMessagesPeriod);
        }
        {
            Boolean theGcInactiveDestinations;
            theGcInactiveDestinations = this.isGcInactiveDestinations();
            strategy.appendField(locator, this, "gcInactiveDestinations", buffer, theGcInactiveDestinations);
        }
        {
            Boolean theGcWithNetworkConsumers;
            theGcWithNetworkConsumers = this.isGcWithNetworkConsumers();
            strategy.appendField(locator, this, "gcWithNetworkConsumers", buffer, theGcWithNetworkConsumers);
        }
        {
            Long theInactiveTimeoutBeforeGC;
            theInactiveTimeoutBeforeGC = this.getInactiveTimeoutBeforeGC();
            strategy.appendField(locator, this, "inactiveTimeoutBeforeGC", buffer, theInactiveTimeoutBeforeGC);
        }
        {
            Long theInactiveTimoutBeforeGC;
            theInactiveTimoutBeforeGC = this.getInactiveTimoutBeforeGC();
            strategy.appendField(locator, this, "inactiveTimoutBeforeGC", buffer, theInactiveTimoutBeforeGC);
        }
        {
            Boolean theIncludeBodyForAdvisory;
            theIncludeBodyForAdvisory = this.isIncludeBodyForAdvisory();
            strategy.appendField(locator, this, "includeBodyForAdvisory", buffer, theIncludeBodyForAdvisory);
        }
        {
            Boolean theLazyDispatch;
            theLazyDispatch = this.isLazyDispatch();
            strategy.appendField(locator, this, "lazyDispatch", buffer, theLazyDispatch);
        }
        {
            BigInteger theMaxAuditDepth;
            theMaxAuditDepth = this.getMaxAuditDepth();
            strategy.appendField(locator, this, "maxAuditDepth", buffer, theMaxAuditDepth);
        }
        {
            BigInteger theMaxBrowsePageSize;
            theMaxBrowsePageSize = this.getMaxBrowsePageSize();
            strategy.appendField(locator, this, "maxBrowsePageSize", buffer, theMaxBrowsePageSize);
        }
        {
            BigInteger theMaxDestinations;
            theMaxDestinations = this.getMaxDestinations();
            strategy.appendField(locator, this, "maxDestinations", buffer, theMaxDestinations);
        }
        {
            BigInteger theMaxExpirePageSize;
            theMaxExpirePageSize = this.getMaxExpirePageSize();
            strategy.appendField(locator, this, "maxExpirePageSize", buffer, theMaxExpirePageSize);
        }
        {
            BigInteger theMaxPageSize;
            theMaxPageSize = this.getMaxPageSize();
            strategy.appendField(locator, this, "maxPageSize", buffer, theMaxPageSize);
        }
        {
            BigInteger theMaxProducersToAudit;
            theMaxProducersToAudit = this.getMaxProducersToAudit();
            strategy.appendField(locator, this, "maxProducersToAudit", buffer, theMaxProducersToAudit);
        }
        {
            BigInteger theMaxQueueAuditDepth;
            theMaxQueueAuditDepth = this.getMaxQueueAuditDepth();
            strategy.appendField(locator, this, "maxQueueAuditDepth", buffer, theMaxQueueAuditDepth);
        }
        {
            String theMemoryLimit;
            theMemoryLimit = this.getMemoryLimit();
            strategy.appendField(locator, this, "memoryLimit", buffer, theMemoryLimit);
        }
        {
            String theMessageEvictionStrategy;
            theMessageEvictionStrategy = this.getMessageEvictionStrategy();
            strategy.appendField(locator, this, "messageEvictionStrategy", buffer, theMessageEvictionStrategy);
        }
        {
            String theMessageGroupMapFactory;
            theMessageGroupMapFactory = this.getMessageGroupMapFactory();
            strategy.appendField(locator, this, "messageGroupMapFactory", buffer, theMessageGroupMapFactory);
        }
        {
            String theMessageGroupMapFactoryType;
            theMessageGroupMapFactoryType = this.getMessageGroupMapFactoryType();
            strategy.appendField(locator, this, "messageGroupMapFactoryType", buffer, theMessageGroupMapFactoryType);
        }
        {
            Long theMinimumMessageSize;
            theMinimumMessageSize = this.getMinimumMessageSize();
            strategy.appendField(locator, this, "minimumMessageSize", buffer, theMinimumMessageSize);
        }
        {
            String theNetworkBridgeFilterFactory;
            theNetworkBridgeFilterFactory = this.getNetworkBridgeFilterFactory();
            strategy.appendField(locator, this, "networkBridgeFilterFactory", buffer, theNetworkBridgeFilterFactory);
        }
        {
            BigInteger theOptimizeMessageStoreInFlightLimit;
            theOptimizeMessageStoreInFlightLimit = this.getOptimizeMessageStoreInFlightLimit();
            strategy.appendField(locator, this, "optimizeMessageStoreInFlightLimit", buffer, theOptimizeMessageStoreInFlightLimit);
        }
        {
            Boolean theOptimizedDispatch;
            theOptimizedDispatch = this.isOptimizedDispatch();
            strategy.appendField(locator, this, "optimizedDispatch", buffer, theOptimizedDispatch);
        }
        {
            String thePendingDurableSubscriberPolicy;
            thePendingDurableSubscriberPolicy = this.getPendingDurableSubscriberPolicy();
            strategy.appendField(locator, this, "pendingDurableSubscriberPolicy", buffer, thePendingDurableSubscriberPolicy);
        }
        {
            String thePendingMessageLimitStrategy;
            thePendingMessageLimitStrategy = this.getPendingMessageLimitStrategy();
            strategy.appendField(locator, this, "pendingMessageLimitStrategy", buffer, thePendingMessageLimitStrategy);
        }
        {
            String thePendingQueuePolicy;
            thePendingQueuePolicy = this.getPendingQueuePolicy();
            strategy.appendField(locator, this, "pendingQueuePolicy", buffer, thePendingQueuePolicy);
        }
        {
            String thePendingSubscriberPolicy;
            thePendingSubscriberPolicy = this.getPendingSubscriberPolicy();
            strategy.appendField(locator, this, "pendingSubscriberPolicy", buffer, thePendingSubscriberPolicy);
        }
        {
            Boolean thePersistJMSRedelivered;
            thePersistJMSRedelivered = this.isPersistJMSRedelivered();
            strategy.appendField(locator, this, "persistJMSRedelivered", buffer, thePersistJMSRedelivered);
        }
        {
            Boolean thePrioritizedMessages;
            thePrioritizedMessages = this.isPrioritizedMessages();
            strategy.appendField(locator, this, "prioritizedMessages", buffer, thePrioritizedMessages);
        }
        {
            Boolean theProducerFlowControl;
            theProducerFlowControl = this.isProducerFlowControl();
            strategy.appendField(locator, this, "producerFlowControl", buffer, theProducerFlowControl);
        }
        {
            String theQueue;
            theQueue = this.getQueue();
            strategy.appendField(locator, this, "queue", buffer, theQueue);
        }
        {
            BigInteger theQueueBrowserPrefetch;
            theQueueBrowserPrefetch = this.getQueueBrowserPrefetch();
            strategy.appendField(locator, this, "queueBrowserPrefetch", buffer, theQueueBrowserPrefetch);
        }
        {
            BigInteger theQueuePrefetch;
            theQueuePrefetch = this.getQueuePrefetch();
            strategy.appendField(locator, this, "queuePrefetch", buffer, theQueuePrefetch);
        }
        {
            Boolean theReduceMemoryFootprint;
            theReduceMemoryFootprint = this.isReduceMemoryFootprint();
            strategy.appendField(locator, this, "reduceMemoryFootprint", buffer, theReduceMemoryFootprint);
        }
        {
            Boolean theSendAdvisoryIfNoConsumers;
            theSendAdvisoryIfNoConsumers = this.isSendAdvisoryIfNoConsumers();
            strategy.appendField(locator, this, "sendAdvisoryIfNoConsumers", buffer, theSendAdvisoryIfNoConsumers);
        }
        {
            String theSlowConsumerStrategy;
            theSlowConsumerStrategy = this.getSlowConsumerStrategy();
            strategy.appendField(locator, this, "slowConsumerStrategy", buffer, theSlowConsumerStrategy);
        }
        {
            BigInteger theStoreUsageHighWaterMark;
            theStoreUsageHighWaterMark = this.getStoreUsageHighWaterMark();
            strategy.appendField(locator, this, "storeUsageHighWaterMark", buffer, theStoreUsageHighWaterMark);
        }
        {
            Boolean theStrictOrderDispatch;
            theStrictOrderDispatch = this.isStrictOrderDispatch();
            strategy.appendField(locator, this, "strictOrderDispatch", buffer, theStrictOrderDispatch);
        }
        {
            String theSubscriptionRecoveryPolicy;
            theSubscriptionRecoveryPolicy = this.getSubscriptionRecoveryPolicy();
            strategy.appendField(locator, this, "subscriptionRecoveryPolicy", buffer, theSubscriptionRecoveryPolicy);
        }
        {
            Boolean theTempQueue;
            theTempQueue = this.isTempQueue();
            strategy.appendField(locator, this, "tempQueue", buffer, theTempQueue);
        }
        {
            Boolean theTempTopic;
            theTempTopic = this.isTempTopic();
            strategy.appendField(locator, this, "tempTopic", buffer, theTempTopic);
        }
        {
            BigInteger theTimeBeforeDispatchStarts;
            theTimeBeforeDispatchStarts = this.getTimeBeforeDispatchStarts();
            strategy.appendField(locator, this, "timeBeforeDispatchStarts", buffer, theTimeBeforeDispatchStarts);
        }
        {
            String theTopic;
            theTopic = this.getTopic();
            strategy.appendField(locator, this, "topic", buffer, theTopic);
        }
        {
            BigInteger theTopicPrefetch;
            theTopicPrefetch = this.getTopicPrefetch();
            strategy.appendField(locator, this, "topicPrefetch", buffer, theTopicPrefetch);
        }
        {
            Boolean theUseCache;
            theUseCache = this.isUseCache();
            strategy.appendField(locator, this, "useCache", buffer, theUseCache);
        }
        {
            Boolean theUseConsumerPriority;
            theUseConsumerPriority = this.isUseConsumerPriority();
            strategy.appendField(locator, this, "useConsumerPriority", buffer, theUseConsumerPriority);
        }
        {
            Boolean theUsePrefetchExtension;
            theUsePrefetchExtension = this.isUsePrefetchExtension();
            strategy.appendField(locator, this, "usePrefetchExtension", buffer, theUsePrefetchExtension);
        }
        {
            Boolean theUseTopicSubscriptionInflightStats;
            theUseTopicSubscriptionInflightStats = this.isUseTopicSubscriptionInflightStats();
            strategy.appendField(locator, this, "useTopicSubscriptionInflightStats", buffer, theUseTopicSubscriptionInflightStats);
        }
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        return buffer;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<Object> theDeadLetterStrategyOrDestinationOrDispatchPolicy;
            theDeadLetterStrategyOrDestinationOrDispatchPolicy = (((this.deadLetterStrategyOrDestinationOrDispatchPolicy!= null)&&(!this.deadLetterStrategyOrDestinationOrDispatchPolicy.isEmpty()))?this.getDeadLetterStrategyOrDestinationOrDispatchPolicy():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deadLetterStrategyOrDestinationOrDispatchPolicy", theDeadLetterStrategyOrDestinationOrDispatchPolicy), currentHashCode, theDeadLetterStrategyOrDestinationOrDispatchPolicy);
        }
        {
            Boolean theAdvisoryForConsumed;
            theAdvisoryForConsumed = this.isAdvisoryForConsumed();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "advisoryForConsumed", theAdvisoryForConsumed), currentHashCode, theAdvisoryForConsumed);
        }
        {
            Boolean theAdvisoryForDelivery;
            theAdvisoryForDelivery = this.isAdvisoryForDelivery();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "advisoryForDelivery", theAdvisoryForDelivery), currentHashCode, theAdvisoryForDelivery);
        }
        {
            Boolean theAdvisoryForDiscardingMessages;
            theAdvisoryForDiscardingMessages = this.isAdvisoryForDiscardingMessages();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "advisoryForDiscardingMessages", theAdvisoryForDiscardingMessages), currentHashCode, theAdvisoryForDiscardingMessages);
        }
        {
            Boolean theAdvisoryForFastProducers;
            theAdvisoryForFastProducers = this.isAdvisoryForFastProducers();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "advisoryForFastProducers", theAdvisoryForFastProducers), currentHashCode, theAdvisoryForFastProducers);
        }
        {
            Boolean theAdvisoryForSlowConsumers;
            theAdvisoryForSlowConsumers = this.isAdvisoryForSlowConsumers();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "advisoryForSlowConsumers", theAdvisoryForSlowConsumers), currentHashCode, theAdvisoryForSlowConsumers);
        }
        {
            Boolean theAdvisoryWhenFull;
            theAdvisoryWhenFull = this.isAdvisoryWhenFull();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "advisoryWhenFull", theAdvisoryWhenFull), currentHashCode, theAdvisoryWhenFull);
        }
        {
            Boolean theAllConsumersExclusiveByDefault;
            theAllConsumersExclusiveByDefault = this.isAllConsumersExclusiveByDefault();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "allConsumersExclusiveByDefault", theAllConsumersExclusiveByDefault), currentHashCode, theAllConsumersExclusiveByDefault);
        }
        {
            Boolean theAlwaysRetroactive;
            theAlwaysRetroactive = this.isAlwaysRetroactive();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "alwaysRetroactive", theAlwaysRetroactive), currentHashCode, theAlwaysRetroactive);
        }
        {
            Long theBlockedProducerWarningInterval;
            theBlockedProducerWarningInterval = this.getBlockedProducerWarningInterval();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "blockedProducerWarningInterval", theBlockedProducerWarningInterval), currentHashCode, theBlockedProducerWarningInterval);
        }
        {
            BigInteger theConsumersBeforeDispatchStarts;
            theConsumersBeforeDispatchStarts = this.getConsumersBeforeDispatchStarts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "consumersBeforeDispatchStarts", theConsumersBeforeDispatchStarts), currentHashCode, theConsumersBeforeDispatchStarts);
        }
        {
            BigInteger theCursorMemoryHighWaterMark;
            theCursorMemoryHighWaterMark = this.getCursorMemoryHighWaterMark();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cursorMemoryHighWaterMark", theCursorMemoryHighWaterMark), currentHashCode, theCursorMemoryHighWaterMark);
        }
        {
            String theDeadLetterStrategy;
            theDeadLetterStrategy = this.getDeadLetterStrategy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deadLetterStrategy", theDeadLetterStrategy), currentHashCode, theDeadLetterStrategy);
        }
        {
            String theDestination;
            theDestination = this.getDestination();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "destination", theDestination), currentHashCode, theDestination);
        }
        {
            String theDispatchPolicy;
            theDispatchPolicy = this.getDispatchPolicy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dispatchPolicy", theDispatchPolicy), currentHashCode, theDispatchPolicy);
        }
        {
            Boolean theDoOptimzeMessageStorage;
            theDoOptimzeMessageStorage = this.isDoOptimzeMessageStorage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "doOptimzeMessageStorage", theDoOptimzeMessageStorage), currentHashCode, theDoOptimzeMessageStorage);
        }
        {
            BigInteger theDurableTopicPrefetch;
            theDurableTopicPrefetch = this.getDurableTopicPrefetch();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "durableTopicPrefetch", theDurableTopicPrefetch), currentHashCode, theDurableTopicPrefetch);
        }
        {
            Boolean theEnableAudit;
            theEnableAudit = this.isEnableAudit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enableAudit", theEnableAudit), currentHashCode, theEnableAudit);
        }
        {
            Long theExpireMessagesPeriod;
            theExpireMessagesPeriod = this.getExpireMessagesPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expireMessagesPeriod", theExpireMessagesPeriod), currentHashCode, theExpireMessagesPeriod);
        }
        {
            Boolean theGcInactiveDestinations;
            theGcInactiveDestinations = this.isGcInactiveDestinations();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gcInactiveDestinations", theGcInactiveDestinations), currentHashCode, theGcInactiveDestinations);
        }
        {
            Boolean theGcWithNetworkConsumers;
            theGcWithNetworkConsumers = this.isGcWithNetworkConsumers();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gcWithNetworkConsumers", theGcWithNetworkConsumers), currentHashCode, theGcWithNetworkConsumers);
        }
        {
            Long theInactiveTimeoutBeforeGC;
            theInactiveTimeoutBeforeGC = this.getInactiveTimeoutBeforeGC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inactiveTimeoutBeforeGC", theInactiveTimeoutBeforeGC), currentHashCode, theInactiveTimeoutBeforeGC);
        }
        {
            Long theInactiveTimoutBeforeGC;
            theInactiveTimoutBeforeGC = this.getInactiveTimoutBeforeGC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inactiveTimoutBeforeGC", theInactiveTimoutBeforeGC), currentHashCode, theInactiveTimoutBeforeGC);
        }
        {
            Boolean theIncludeBodyForAdvisory;
            theIncludeBodyForAdvisory = this.isIncludeBodyForAdvisory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "includeBodyForAdvisory", theIncludeBodyForAdvisory), currentHashCode, theIncludeBodyForAdvisory);
        }
        {
            Boolean theLazyDispatch;
            theLazyDispatch = this.isLazyDispatch();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lazyDispatch", theLazyDispatch), currentHashCode, theLazyDispatch);
        }
        {
            BigInteger theMaxAuditDepth;
            theMaxAuditDepth = this.getMaxAuditDepth();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxAuditDepth", theMaxAuditDepth), currentHashCode, theMaxAuditDepth);
        }
        {
            BigInteger theMaxBrowsePageSize;
            theMaxBrowsePageSize = this.getMaxBrowsePageSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxBrowsePageSize", theMaxBrowsePageSize), currentHashCode, theMaxBrowsePageSize);
        }
        {
            BigInteger theMaxDestinations;
            theMaxDestinations = this.getMaxDestinations();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxDestinations", theMaxDestinations), currentHashCode, theMaxDestinations);
        }
        {
            BigInteger theMaxExpirePageSize;
            theMaxExpirePageSize = this.getMaxExpirePageSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxExpirePageSize", theMaxExpirePageSize), currentHashCode, theMaxExpirePageSize);
        }
        {
            BigInteger theMaxPageSize;
            theMaxPageSize = this.getMaxPageSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxPageSize", theMaxPageSize), currentHashCode, theMaxPageSize);
        }
        {
            BigInteger theMaxProducersToAudit;
            theMaxProducersToAudit = this.getMaxProducersToAudit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxProducersToAudit", theMaxProducersToAudit), currentHashCode, theMaxProducersToAudit);
        }
        {
            BigInteger theMaxQueueAuditDepth;
            theMaxQueueAuditDepth = this.getMaxQueueAuditDepth();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maxQueueAuditDepth", theMaxQueueAuditDepth), currentHashCode, theMaxQueueAuditDepth);
        }
        {
            String theMemoryLimit;
            theMemoryLimit = this.getMemoryLimit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "memoryLimit", theMemoryLimit), currentHashCode, theMemoryLimit);
        }
        {
            String theMessageEvictionStrategy;
            theMessageEvictionStrategy = this.getMessageEvictionStrategy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageEvictionStrategy", theMessageEvictionStrategy), currentHashCode, theMessageEvictionStrategy);
        }
        {
            String theMessageGroupMapFactory;
            theMessageGroupMapFactory = this.getMessageGroupMapFactory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageGroupMapFactory", theMessageGroupMapFactory), currentHashCode, theMessageGroupMapFactory);
        }
        {
            String theMessageGroupMapFactoryType;
            theMessageGroupMapFactoryType = this.getMessageGroupMapFactoryType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageGroupMapFactoryType", theMessageGroupMapFactoryType), currentHashCode, theMessageGroupMapFactoryType);
        }
        {
            Long theMinimumMessageSize;
            theMinimumMessageSize = this.getMinimumMessageSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "minimumMessageSize", theMinimumMessageSize), currentHashCode, theMinimumMessageSize);
        }
        {
            String theNetworkBridgeFilterFactory;
            theNetworkBridgeFilterFactory = this.getNetworkBridgeFilterFactory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "networkBridgeFilterFactory", theNetworkBridgeFilterFactory), currentHashCode, theNetworkBridgeFilterFactory);
        }
        {
            BigInteger theOptimizeMessageStoreInFlightLimit;
            theOptimizeMessageStoreInFlightLimit = this.getOptimizeMessageStoreInFlightLimit();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "optimizeMessageStoreInFlightLimit", theOptimizeMessageStoreInFlightLimit), currentHashCode, theOptimizeMessageStoreInFlightLimit);
        }
        {
            Boolean theOptimizedDispatch;
            theOptimizedDispatch = this.isOptimizedDispatch();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "optimizedDispatch", theOptimizedDispatch), currentHashCode, theOptimizedDispatch);
        }
        {
            String thePendingDurableSubscriberPolicy;
            thePendingDurableSubscriberPolicy = this.getPendingDurableSubscriberPolicy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pendingDurableSubscriberPolicy", thePendingDurableSubscriberPolicy), currentHashCode, thePendingDurableSubscriberPolicy);
        }
        {
            String thePendingMessageLimitStrategy;
            thePendingMessageLimitStrategy = this.getPendingMessageLimitStrategy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pendingMessageLimitStrategy", thePendingMessageLimitStrategy), currentHashCode, thePendingMessageLimitStrategy);
        }
        {
            String thePendingQueuePolicy;
            thePendingQueuePolicy = this.getPendingQueuePolicy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pendingQueuePolicy", thePendingQueuePolicy), currentHashCode, thePendingQueuePolicy);
        }
        {
            String thePendingSubscriberPolicy;
            thePendingSubscriberPolicy = this.getPendingSubscriberPolicy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pendingSubscriberPolicy", thePendingSubscriberPolicy), currentHashCode, thePendingSubscriberPolicy);
        }
        {
            Boolean thePersistJMSRedelivered;
            thePersistJMSRedelivered = this.isPersistJMSRedelivered();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "persistJMSRedelivered", thePersistJMSRedelivered), currentHashCode, thePersistJMSRedelivered);
        }
        {
            Boolean thePrioritizedMessages;
            thePrioritizedMessages = this.isPrioritizedMessages();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "prioritizedMessages", thePrioritizedMessages), currentHashCode, thePrioritizedMessages);
        }
        {
            Boolean theProducerFlowControl;
            theProducerFlowControl = this.isProducerFlowControl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "producerFlowControl", theProducerFlowControl), currentHashCode, theProducerFlowControl);
        }
        {
            String theQueue;
            theQueue = this.getQueue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "queue", theQueue), currentHashCode, theQueue);
        }
        {
            BigInteger theQueueBrowserPrefetch;
            theQueueBrowserPrefetch = this.getQueueBrowserPrefetch();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "queueBrowserPrefetch", theQueueBrowserPrefetch), currentHashCode, theQueueBrowserPrefetch);
        }
        {
            BigInteger theQueuePrefetch;
            theQueuePrefetch = this.getQueuePrefetch();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "queuePrefetch", theQueuePrefetch), currentHashCode, theQueuePrefetch);
        }
        {
            Boolean theReduceMemoryFootprint;
            theReduceMemoryFootprint = this.isReduceMemoryFootprint();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reduceMemoryFootprint", theReduceMemoryFootprint), currentHashCode, theReduceMemoryFootprint);
        }
        {
            Boolean theSendAdvisoryIfNoConsumers;
            theSendAdvisoryIfNoConsumers = this.isSendAdvisoryIfNoConsumers();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sendAdvisoryIfNoConsumers", theSendAdvisoryIfNoConsumers), currentHashCode, theSendAdvisoryIfNoConsumers);
        }
        {
            String theSlowConsumerStrategy;
            theSlowConsumerStrategy = this.getSlowConsumerStrategy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "slowConsumerStrategy", theSlowConsumerStrategy), currentHashCode, theSlowConsumerStrategy);
        }
        {
            BigInteger theStoreUsageHighWaterMark;
            theStoreUsageHighWaterMark = this.getStoreUsageHighWaterMark();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "storeUsageHighWaterMark", theStoreUsageHighWaterMark), currentHashCode, theStoreUsageHighWaterMark);
        }
        {
            Boolean theStrictOrderDispatch;
            theStrictOrderDispatch = this.isStrictOrderDispatch();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "strictOrderDispatch", theStrictOrderDispatch), currentHashCode, theStrictOrderDispatch);
        }
        {
            String theSubscriptionRecoveryPolicy;
            theSubscriptionRecoveryPolicy = this.getSubscriptionRecoveryPolicy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subscriptionRecoveryPolicy", theSubscriptionRecoveryPolicy), currentHashCode, theSubscriptionRecoveryPolicy);
        }
        {
            Boolean theTempQueue;
            theTempQueue = this.isTempQueue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tempQueue", theTempQueue), currentHashCode, theTempQueue);
        }
        {
            Boolean theTempTopic;
            theTempTopic = this.isTempTopic();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tempTopic", theTempTopic), currentHashCode, theTempTopic);
        }
        {
            BigInteger theTimeBeforeDispatchStarts;
            theTimeBeforeDispatchStarts = this.getTimeBeforeDispatchStarts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timeBeforeDispatchStarts", theTimeBeforeDispatchStarts), currentHashCode, theTimeBeforeDispatchStarts);
        }
        {
            String theTopic;
            theTopic = this.getTopic();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topic", theTopic), currentHashCode, theTopic);
        }
        {
            BigInteger theTopicPrefetch;
            theTopicPrefetch = this.getTopicPrefetch();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topicPrefetch", theTopicPrefetch), currentHashCode, theTopicPrefetch);
        }
        {
            Boolean theUseCache;
            theUseCache = this.isUseCache();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "useCache", theUseCache), currentHashCode, theUseCache);
        }
        {
            Boolean theUseConsumerPriority;
            theUseConsumerPriority = this.isUseConsumerPriority();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "useConsumerPriority", theUseConsumerPriority), currentHashCode, theUseConsumerPriority);
        }
        {
            Boolean theUsePrefetchExtension;
            theUsePrefetchExtension = this.isUsePrefetchExtension();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "usePrefetchExtension", theUsePrefetchExtension), currentHashCode, theUsePrefetchExtension);
        }
        {
            Boolean theUseTopicSubscriptionInflightStats;
            theUseTopicSubscriptionInflightStats = this.isUseTopicSubscriptionInflightStats();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "useTopicSubscriptionInflightStats", theUseTopicSubscriptionInflightStats), currentHashCode, theUseTopicSubscriptionInflightStats);
        }
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DtoPolicyEntry)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DtoPolicyEntry that = ((DtoPolicyEntry) object);
        {
            List<Object> lhsDeadLetterStrategyOrDestinationOrDispatchPolicy;
            lhsDeadLetterStrategyOrDestinationOrDispatchPolicy = (((this.deadLetterStrategyOrDestinationOrDispatchPolicy!= null)&&(!this.deadLetterStrategyOrDestinationOrDispatchPolicy.isEmpty()))?this.getDeadLetterStrategyOrDestinationOrDispatchPolicy():null);
            List<Object> rhsDeadLetterStrategyOrDestinationOrDispatchPolicy;
            rhsDeadLetterStrategyOrDestinationOrDispatchPolicy = (((that.deadLetterStrategyOrDestinationOrDispatchPolicy!= null)&&(!that.deadLetterStrategyOrDestinationOrDispatchPolicy.isEmpty()))?that.getDeadLetterStrategyOrDestinationOrDispatchPolicy():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deadLetterStrategyOrDestinationOrDispatchPolicy", lhsDeadLetterStrategyOrDestinationOrDispatchPolicy), LocatorUtils.property(thatLocator, "deadLetterStrategyOrDestinationOrDispatchPolicy", rhsDeadLetterStrategyOrDestinationOrDispatchPolicy), lhsDeadLetterStrategyOrDestinationOrDispatchPolicy, rhsDeadLetterStrategyOrDestinationOrDispatchPolicy)) {
                return false;
            }
        }
        {
            Boolean lhsAdvisoryForConsumed;
            lhsAdvisoryForConsumed = this.isAdvisoryForConsumed();
            Boolean rhsAdvisoryForConsumed;
            rhsAdvisoryForConsumed = that.isAdvisoryForConsumed();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "advisoryForConsumed", lhsAdvisoryForConsumed), LocatorUtils.property(thatLocator, "advisoryForConsumed", rhsAdvisoryForConsumed), lhsAdvisoryForConsumed, rhsAdvisoryForConsumed)) {
                return false;
            }
        }
        {
            Boolean lhsAdvisoryForDelivery;
            lhsAdvisoryForDelivery = this.isAdvisoryForDelivery();
            Boolean rhsAdvisoryForDelivery;
            rhsAdvisoryForDelivery = that.isAdvisoryForDelivery();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "advisoryForDelivery", lhsAdvisoryForDelivery), LocatorUtils.property(thatLocator, "advisoryForDelivery", rhsAdvisoryForDelivery), lhsAdvisoryForDelivery, rhsAdvisoryForDelivery)) {
                return false;
            }
        }
        {
            Boolean lhsAdvisoryForDiscardingMessages;
            lhsAdvisoryForDiscardingMessages = this.isAdvisoryForDiscardingMessages();
            Boolean rhsAdvisoryForDiscardingMessages;
            rhsAdvisoryForDiscardingMessages = that.isAdvisoryForDiscardingMessages();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "advisoryForDiscardingMessages", lhsAdvisoryForDiscardingMessages), LocatorUtils.property(thatLocator, "advisoryForDiscardingMessages", rhsAdvisoryForDiscardingMessages), lhsAdvisoryForDiscardingMessages, rhsAdvisoryForDiscardingMessages)) {
                return false;
            }
        }
        {
            Boolean lhsAdvisoryForFastProducers;
            lhsAdvisoryForFastProducers = this.isAdvisoryForFastProducers();
            Boolean rhsAdvisoryForFastProducers;
            rhsAdvisoryForFastProducers = that.isAdvisoryForFastProducers();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "advisoryForFastProducers", lhsAdvisoryForFastProducers), LocatorUtils.property(thatLocator, "advisoryForFastProducers", rhsAdvisoryForFastProducers), lhsAdvisoryForFastProducers, rhsAdvisoryForFastProducers)) {
                return false;
            }
        }
        {
            Boolean lhsAdvisoryForSlowConsumers;
            lhsAdvisoryForSlowConsumers = this.isAdvisoryForSlowConsumers();
            Boolean rhsAdvisoryForSlowConsumers;
            rhsAdvisoryForSlowConsumers = that.isAdvisoryForSlowConsumers();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "advisoryForSlowConsumers", lhsAdvisoryForSlowConsumers), LocatorUtils.property(thatLocator, "advisoryForSlowConsumers", rhsAdvisoryForSlowConsumers), lhsAdvisoryForSlowConsumers, rhsAdvisoryForSlowConsumers)) {
                return false;
            }
        }
        {
            Boolean lhsAdvisoryWhenFull;
            lhsAdvisoryWhenFull = this.isAdvisoryWhenFull();
            Boolean rhsAdvisoryWhenFull;
            rhsAdvisoryWhenFull = that.isAdvisoryWhenFull();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "advisoryWhenFull", lhsAdvisoryWhenFull), LocatorUtils.property(thatLocator, "advisoryWhenFull", rhsAdvisoryWhenFull), lhsAdvisoryWhenFull, rhsAdvisoryWhenFull)) {
                return false;
            }
        }
        {
            Boolean lhsAllConsumersExclusiveByDefault;
            lhsAllConsumersExclusiveByDefault = this.isAllConsumersExclusiveByDefault();
            Boolean rhsAllConsumersExclusiveByDefault;
            rhsAllConsumersExclusiveByDefault = that.isAllConsumersExclusiveByDefault();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "allConsumersExclusiveByDefault", lhsAllConsumersExclusiveByDefault), LocatorUtils.property(thatLocator, "allConsumersExclusiveByDefault", rhsAllConsumersExclusiveByDefault), lhsAllConsumersExclusiveByDefault, rhsAllConsumersExclusiveByDefault)) {
                return false;
            }
        }
        {
            Boolean lhsAlwaysRetroactive;
            lhsAlwaysRetroactive = this.isAlwaysRetroactive();
            Boolean rhsAlwaysRetroactive;
            rhsAlwaysRetroactive = that.isAlwaysRetroactive();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "alwaysRetroactive", lhsAlwaysRetroactive), LocatorUtils.property(thatLocator, "alwaysRetroactive", rhsAlwaysRetroactive), lhsAlwaysRetroactive, rhsAlwaysRetroactive)) {
                return false;
            }
        }
        {
            Long lhsBlockedProducerWarningInterval;
            lhsBlockedProducerWarningInterval = this.getBlockedProducerWarningInterval();
            Long rhsBlockedProducerWarningInterval;
            rhsBlockedProducerWarningInterval = that.getBlockedProducerWarningInterval();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "blockedProducerWarningInterval", lhsBlockedProducerWarningInterval), LocatorUtils.property(thatLocator, "blockedProducerWarningInterval", rhsBlockedProducerWarningInterval), lhsBlockedProducerWarningInterval, rhsBlockedProducerWarningInterval)) {
                return false;
            }
        }
        {
            BigInteger lhsConsumersBeforeDispatchStarts;
            lhsConsumersBeforeDispatchStarts = this.getConsumersBeforeDispatchStarts();
            BigInteger rhsConsumersBeforeDispatchStarts;
            rhsConsumersBeforeDispatchStarts = that.getConsumersBeforeDispatchStarts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "consumersBeforeDispatchStarts", lhsConsumersBeforeDispatchStarts), LocatorUtils.property(thatLocator, "consumersBeforeDispatchStarts", rhsConsumersBeforeDispatchStarts), lhsConsumersBeforeDispatchStarts, rhsConsumersBeforeDispatchStarts)) {
                return false;
            }
        }
        {
            BigInteger lhsCursorMemoryHighWaterMark;
            lhsCursorMemoryHighWaterMark = this.getCursorMemoryHighWaterMark();
            BigInteger rhsCursorMemoryHighWaterMark;
            rhsCursorMemoryHighWaterMark = that.getCursorMemoryHighWaterMark();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cursorMemoryHighWaterMark", lhsCursorMemoryHighWaterMark), LocatorUtils.property(thatLocator, "cursorMemoryHighWaterMark", rhsCursorMemoryHighWaterMark), lhsCursorMemoryHighWaterMark, rhsCursorMemoryHighWaterMark)) {
                return false;
            }
        }
        {
            String lhsDeadLetterStrategy;
            lhsDeadLetterStrategy = this.getDeadLetterStrategy();
            String rhsDeadLetterStrategy;
            rhsDeadLetterStrategy = that.getDeadLetterStrategy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deadLetterStrategy", lhsDeadLetterStrategy), LocatorUtils.property(thatLocator, "deadLetterStrategy", rhsDeadLetterStrategy), lhsDeadLetterStrategy, rhsDeadLetterStrategy)) {
                return false;
            }
        }
        {
            String lhsDestination;
            lhsDestination = this.getDestination();
            String rhsDestination;
            rhsDestination = that.getDestination();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "destination", lhsDestination), LocatorUtils.property(thatLocator, "destination", rhsDestination), lhsDestination, rhsDestination)) {
                return false;
            }
        }
        {
            String lhsDispatchPolicy;
            lhsDispatchPolicy = this.getDispatchPolicy();
            String rhsDispatchPolicy;
            rhsDispatchPolicy = that.getDispatchPolicy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dispatchPolicy", lhsDispatchPolicy), LocatorUtils.property(thatLocator, "dispatchPolicy", rhsDispatchPolicy), lhsDispatchPolicy, rhsDispatchPolicy)) {
                return false;
            }
        }
        {
            Boolean lhsDoOptimzeMessageStorage;
            lhsDoOptimzeMessageStorage = this.isDoOptimzeMessageStorage();
            Boolean rhsDoOptimzeMessageStorage;
            rhsDoOptimzeMessageStorage = that.isDoOptimzeMessageStorage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "doOptimzeMessageStorage", lhsDoOptimzeMessageStorage), LocatorUtils.property(thatLocator, "doOptimzeMessageStorage", rhsDoOptimzeMessageStorage), lhsDoOptimzeMessageStorage, rhsDoOptimzeMessageStorage)) {
                return false;
            }
        }
        {
            BigInteger lhsDurableTopicPrefetch;
            lhsDurableTopicPrefetch = this.getDurableTopicPrefetch();
            BigInteger rhsDurableTopicPrefetch;
            rhsDurableTopicPrefetch = that.getDurableTopicPrefetch();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "durableTopicPrefetch", lhsDurableTopicPrefetch), LocatorUtils.property(thatLocator, "durableTopicPrefetch", rhsDurableTopicPrefetch), lhsDurableTopicPrefetch, rhsDurableTopicPrefetch)) {
                return false;
            }
        }
        {
            Boolean lhsEnableAudit;
            lhsEnableAudit = this.isEnableAudit();
            Boolean rhsEnableAudit;
            rhsEnableAudit = that.isEnableAudit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enableAudit", lhsEnableAudit), LocatorUtils.property(thatLocator, "enableAudit", rhsEnableAudit), lhsEnableAudit, rhsEnableAudit)) {
                return false;
            }
        }
        {
            Long lhsExpireMessagesPeriod;
            lhsExpireMessagesPeriod = this.getExpireMessagesPeriod();
            Long rhsExpireMessagesPeriod;
            rhsExpireMessagesPeriod = that.getExpireMessagesPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expireMessagesPeriod", lhsExpireMessagesPeriod), LocatorUtils.property(thatLocator, "expireMessagesPeriod", rhsExpireMessagesPeriod), lhsExpireMessagesPeriod, rhsExpireMessagesPeriod)) {
                return false;
            }
        }
        {
            Boolean lhsGcInactiveDestinations;
            lhsGcInactiveDestinations = this.isGcInactiveDestinations();
            Boolean rhsGcInactiveDestinations;
            rhsGcInactiveDestinations = that.isGcInactiveDestinations();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gcInactiveDestinations", lhsGcInactiveDestinations), LocatorUtils.property(thatLocator, "gcInactiveDestinations", rhsGcInactiveDestinations), lhsGcInactiveDestinations, rhsGcInactiveDestinations)) {
                return false;
            }
        }
        {
            Boolean lhsGcWithNetworkConsumers;
            lhsGcWithNetworkConsumers = this.isGcWithNetworkConsumers();
            Boolean rhsGcWithNetworkConsumers;
            rhsGcWithNetworkConsumers = that.isGcWithNetworkConsumers();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gcWithNetworkConsumers", lhsGcWithNetworkConsumers), LocatorUtils.property(thatLocator, "gcWithNetworkConsumers", rhsGcWithNetworkConsumers), lhsGcWithNetworkConsumers, rhsGcWithNetworkConsumers)) {
                return false;
            }
        }
        {
            Long lhsInactiveTimeoutBeforeGC;
            lhsInactiveTimeoutBeforeGC = this.getInactiveTimeoutBeforeGC();
            Long rhsInactiveTimeoutBeforeGC;
            rhsInactiveTimeoutBeforeGC = that.getInactiveTimeoutBeforeGC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inactiveTimeoutBeforeGC", lhsInactiveTimeoutBeforeGC), LocatorUtils.property(thatLocator, "inactiveTimeoutBeforeGC", rhsInactiveTimeoutBeforeGC), lhsInactiveTimeoutBeforeGC, rhsInactiveTimeoutBeforeGC)) {
                return false;
            }
        }
        {
            Long lhsInactiveTimoutBeforeGC;
            lhsInactiveTimoutBeforeGC = this.getInactiveTimoutBeforeGC();
            Long rhsInactiveTimoutBeforeGC;
            rhsInactiveTimoutBeforeGC = that.getInactiveTimoutBeforeGC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inactiveTimoutBeforeGC", lhsInactiveTimoutBeforeGC), LocatorUtils.property(thatLocator, "inactiveTimoutBeforeGC", rhsInactiveTimoutBeforeGC), lhsInactiveTimoutBeforeGC, rhsInactiveTimoutBeforeGC)) {
                return false;
            }
        }
        {
            Boolean lhsIncludeBodyForAdvisory;
            lhsIncludeBodyForAdvisory = this.isIncludeBodyForAdvisory();
            Boolean rhsIncludeBodyForAdvisory;
            rhsIncludeBodyForAdvisory = that.isIncludeBodyForAdvisory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "includeBodyForAdvisory", lhsIncludeBodyForAdvisory), LocatorUtils.property(thatLocator, "includeBodyForAdvisory", rhsIncludeBodyForAdvisory), lhsIncludeBodyForAdvisory, rhsIncludeBodyForAdvisory)) {
                return false;
            }
        }
        {
            Boolean lhsLazyDispatch;
            lhsLazyDispatch = this.isLazyDispatch();
            Boolean rhsLazyDispatch;
            rhsLazyDispatch = that.isLazyDispatch();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lazyDispatch", lhsLazyDispatch), LocatorUtils.property(thatLocator, "lazyDispatch", rhsLazyDispatch), lhsLazyDispatch, rhsLazyDispatch)) {
                return false;
            }
        }
        {
            BigInteger lhsMaxAuditDepth;
            lhsMaxAuditDepth = this.getMaxAuditDepth();
            BigInteger rhsMaxAuditDepth;
            rhsMaxAuditDepth = that.getMaxAuditDepth();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxAuditDepth", lhsMaxAuditDepth), LocatorUtils.property(thatLocator, "maxAuditDepth", rhsMaxAuditDepth), lhsMaxAuditDepth, rhsMaxAuditDepth)) {
                return false;
            }
        }
        {
            BigInteger lhsMaxBrowsePageSize;
            lhsMaxBrowsePageSize = this.getMaxBrowsePageSize();
            BigInteger rhsMaxBrowsePageSize;
            rhsMaxBrowsePageSize = that.getMaxBrowsePageSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxBrowsePageSize", lhsMaxBrowsePageSize), LocatorUtils.property(thatLocator, "maxBrowsePageSize", rhsMaxBrowsePageSize), lhsMaxBrowsePageSize, rhsMaxBrowsePageSize)) {
                return false;
            }
        }
        {
            BigInteger lhsMaxDestinations;
            lhsMaxDestinations = this.getMaxDestinations();
            BigInteger rhsMaxDestinations;
            rhsMaxDestinations = that.getMaxDestinations();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxDestinations", lhsMaxDestinations), LocatorUtils.property(thatLocator, "maxDestinations", rhsMaxDestinations), lhsMaxDestinations, rhsMaxDestinations)) {
                return false;
            }
        }
        {
            BigInteger lhsMaxExpirePageSize;
            lhsMaxExpirePageSize = this.getMaxExpirePageSize();
            BigInteger rhsMaxExpirePageSize;
            rhsMaxExpirePageSize = that.getMaxExpirePageSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxExpirePageSize", lhsMaxExpirePageSize), LocatorUtils.property(thatLocator, "maxExpirePageSize", rhsMaxExpirePageSize), lhsMaxExpirePageSize, rhsMaxExpirePageSize)) {
                return false;
            }
        }
        {
            BigInteger lhsMaxPageSize;
            lhsMaxPageSize = this.getMaxPageSize();
            BigInteger rhsMaxPageSize;
            rhsMaxPageSize = that.getMaxPageSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxPageSize", lhsMaxPageSize), LocatorUtils.property(thatLocator, "maxPageSize", rhsMaxPageSize), lhsMaxPageSize, rhsMaxPageSize)) {
                return false;
            }
        }
        {
            BigInteger lhsMaxProducersToAudit;
            lhsMaxProducersToAudit = this.getMaxProducersToAudit();
            BigInteger rhsMaxProducersToAudit;
            rhsMaxProducersToAudit = that.getMaxProducersToAudit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxProducersToAudit", lhsMaxProducersToAudit), LocatorUtils.property(thatLocator, "maxProducersToAudit", rhsMaxProducersToAudit), lhsMaxProducersToAudit, rhsMaxProducersToAudit)) {
                return false;
            }
        }
        {
            BigInteger lhsMaxQueueAuditDepth;
            lhsMaxQueueAuditDepth = this.getMaxQueueAuditDepth();
            BigInteger rhsMaxQueueAuditDepth;
            rhsMaxQueueAuditDepth = that.getMaxQueueAuditDepth();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maxQueueAuditDepth", lhsMaxQueueAuditDepth), LocatorUtils.property(thatLocator, "maxQueueAuditDepth", rhsMaxQueueAuditDepth), lhsMaxQueueAuditDepth, rhsMaxQueueAuditDepth)) {
                return false;
            }
        }
        {
            String lhsMemoryLimit;
            lhsMemoryLimit = this.getMemoryLimit();
            String rhsMemoryLimit;
            rhsMemoryLimit = that.getMemoryLimit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "memoryLimit", lhsMemoryLimit), LocatorUtils.property(thatLocator, "memoryLimit", rhsMemoryLimit), lhsMemoryLimit, rhsMemoryLimit)) {
                return false;
            }
        }
        {
            String lhsMessageEvictionStrategy;
            lhsMessageEvictionStrategy = this.getMessageEvictionStrategy();
            String rhsMessageEvictionStrategy;
            rhsMessageEvictionStrategy = that.getMessageEvictionStrategy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messageEvictionStrategy", lhsMessageEvictionStrategy), LocatorUtils.property(thatLocator, "messageEvictionStrategy", rhsMessageEvictionStrategy), lhsMessageEvictionStrategy, rhsMessageEvictionStrategy)) {
                return false;
            }
        }
        {
            String lhsMessageGroupMapFactory;
            lhsMessageGroupMapFactory = this.getMessageGroupMapFactory();
            String rhsMessageGroupMapFactory;
            rhsMessageGroupMapFactory = that.getMessageGroupMapFactory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messageGroupMapFactory", lhsMessageGroupMapFactory), LocatorUtils.property(thatLocator, "messageGroupMapFactory", rhsMessageGroupMapFactory), lhsMessageGroupMapFactory, rhsMessageGroupMapFactory)) {
                return false;
            }
        }
        {
            String lhsMessageGroupMapFactoryType;
            lhsMessageGroupMapFactoryType = this.getMessageGroupMapFactoryType();
            String rhsMessageGroupMapFactoryType;
            rhsMessageGroupMapFactoryType = that.getMessageGroupMapFactoryType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "messageGroupMapFactoryType", lhsMessageGroupMapFactoryType), LocatorUtils.property(thatLocator, "messageGroupMapFactoryType", rhsMessageGroupMapFactoryType), lhsMessageGroupMapFactoryType, rhsMessageGroupMapFactoryType)) {
                return false;
            }
        }
        {
            Long lhsMinimumMessageSize;
            lhsMinimumMessageSize = this.getMinimumMessageSize();
            Long rhsMinimumMessageSize;
            rhsMinimumMessageSize = that.getMinimumMessageSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "minimumMessageSize", lhsMinimumMessageSize), LocatorUtils.property(thatLocator, "minimumMessageSize", rhsMinimumMessageSize), lhsMinimumMessageSize, rhsMinimumMessageSize)) {
                return false;
            }
        }
        {
            String lhsNetworkBridgeFilterFactory;
            lhsNetworkBridgeFilterFactory = this.getNetworkBridgeFilterFactory();
            String rhsNetworkBridgeFilterFactory;
            rhsNetworkBridgeFilterFactory = that.getNetworkBridgeFilterFactory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "networkBridgeFilterFactory", lhsNetworkBridgeFilterFactory), LocatorUtils.property(thatLocator, "networkBridgeFilterFactory", rhsNetworkBridgeFilterFactory), lhsNetworkBridgeFilterFactory, rhsNetworkBridgeFilterFactory)) {
                return false;
            }
        }
        {
            BigInteger lhsOptimizeMessageStoreInFlightLimit;
            lhsOptimizeMessageStoreInFlightLimit = this.getOptimizeMessageStoreInFlightLimit();
            BigInteger rhsOptimizeMessageStoreInFlightLimit;
            rhsOptimizeMessageStoreInFlightLimit = that.getOptimizeMessageStoreInFlightLimit();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "optimizeMessageStoreInFlightLimit", lhsOptimizeMessageStoreInFlightLimit), LocatorUtils.property(thatLocator, "optimizeMessageStoreInFlightLimit", rhsOptimizeMessageStoreInFlightLimit), lhsOptimizeMessageStoreInFlightLimit, rhsOptimizeMessageStoreInFlightLimit)) {
                return false;
            }
        }
        {
            Boolean lhsOptimizedDispatch;
            lhsOptimizedDispatch = this.isOptimizedDispatch();
            Boolean rhsOptimizedDispatch;
            rhsOptimizedDispatch = that.isOptimizedDispatch();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "optimizedDispatch", lhsOptimizedDispatch), LocatorUtils.property(thatLocator, "optimizedDispatch", rhsOptimizedDispatch), lhsOptimizedDispatch, rhsOptimizedDispatch)) {
                return false;
            }
        }
        {
            String lhsPendingDurableSubscriberPolicy;
            lhsPendingDurableSubscriberPolicy = this.getPendingDurableSubscriberPolicy();
            String rhsPendingDurableSubscriberPolicy;
            rhsPendingDurableSubscriberPolicy = that.getPendingDurableSubscriberPolicy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pendingDurableSubscriberPolicy", lhsPendingDurableSubscriberPolicy), LocatorUtils.property(thatLocator, "pendingDurableSubscriberPolicy", rhsPendingDurableSubscriberPolicy), lhsPendingDurableSubscriberPolicy, rhsPendingDurableSubscriberPolicy)) {
                return false;
            }
        }
        {
            String lhsPendingMessageLimitStrategy;
            lhsPendingMessageLimitStrategy = this.getPendingMessageLimitStrategy();
            String rhsPendingMessageLimitStrategy;
            rhsPendingMessageLimitStrategy = that.getPendingMessageLimitStrategy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pendingMessageLimitStrategy", lhsPendingMessageLimitStrategy), LocatorUtils.property(thatLocator, "pendingMessageLimitStrategy", rhsPendingMessageLimitStrategy), lhsPendingMessageLimitStrategy, rhsPendingMessageLimitStrategy)) {
                return false;
            }
        }
        {
            String lhsPendingQueuePolicy;
            lhsPendingQueuePolicy = this.getPendingQueuePolicy();
            String rhsPendingQueuePolicy;
            rhsPendingQueuePolicy = that.getPendingQueuePolicy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pendingQueuePolicy", lhsPendingQueuePolicy), LocatorUtils.property(thatLocator, "pendingQueuePolicy", rhsPendingQueuePolicy), lhsPendingQueuePolicy, rhsPendingQueuePolicy)) {
                return false;
            }
        }
        {
            String lhsPendingSubscriberPolicy;
            lhsPendingSubscriberPolicy = this.getPendingSubscriberPolicy();
            String rhsPendingSubscriberPolicy;
            rhsPendingSubscriberPolicy = that.getPendingSubscriberPolicy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "pendingSubscriberPolicy", lhsPendingSubscriberPolicy), LocatorUtils.property(thatLocator, "pendingSubscriberPolicy", rhsPendingSubscriberPolicy), lhsPendingSubscriberPolicy, rhsPendingSubscriberPolicy)) {
                return false;
            }
        }
        {
            Boolean lhsPersistJMSRedelivered;
            lhsPersistJMSRedelivered = this.isPersistJMSRedelivered();
            Boolean rhsPersistJMSRedelivered;
            rhsPersistJMSRedelivered = that.isPersistJMSRedelivered();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "persistJMSRedelivered", lhsPersistJMSRedelivered), LocatorUtils.property(thatLocator, "persistJMSRedelivered", rhsPersistJMSRedelivered), lhsPersistJMSRedelivered, rhsPersistJMSRedelivered)) {
                return false;
            }
        }
        {
            Boolean lhsPrioritizedMessages;
            lhsPrioritizedMessages = this.isPrioritizedMessages();
            Boolean rhsPrioritizedMessages;
            rhsPrioritizedMessages = that.isPrioritizedMessages();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "prioritizedMessages", lhsPrioritizedMessages), LocatorUtils.property(thatLocator, "prioritizedMessages", rhsPrioritizedMessages), lhsPrioritizedMessages, rhsPrioritizedMessages)) {
                return false;
            }
        }
        {
            Boolean lhsProducerFlowControl;
            lhsProducerFlowControl = this.isProducerFlowControl();
            Boolean rhsProducerFlowControl;
            rhsProducerFlowControl = that.isProducerFlowControl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "producerFlowControl", lhsProducerFlowControl), LocatorUtils.property(thatLocator, "producerFlowControl", rhsProducerFlowControl), lhsProducerFlowControl, rhsProducerFlowControl)) {
                return false;
            }
        }
        {
            String lhsQueue;
            lhsQueue = this.getQueue();
            String rhsQueue;
            rhsQueue = that.getQueue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "queue", lhsQueue), LocatorUtils.property(thatLocator, "queue", rhsQueue), lhsQueue, rhsQueue)) {
                return false;
            }
        }
        {
            BigInteger lhsQueueBrowserPrefetch;
            lhsQueueBrowserPrefetch = this.getQueueBrowserPrefetch();
            BigInteger rhsQueueBrowserPrefetch;
            rhsQueueBrowserPrefetch = that.getQueueBrowserPrefetch();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "queueBrowserPrefetch", lhsQueueBrowserPrefetch), LocatorUtils.property(thatLocator, "queueBrowserPrefetch", rhsQueueBrowserPrefetch), lhsQueueBrowserPrefetch, rhsQueueBrowserPrefetch)) {
                return false;
            }
        }
        {
            BigInteger lhsQueuePrefetch;
            lhsQueuePrefetch = this.getQueuePrefetch();
            BigInteger rhsQueuePrefetch;
            rhsQueuePrefetch = that.getQueuePrefetch();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "queuePrefetch", lhsQueuePrefetch), LocatorUtils.property(thatLocator, "queuePrefetch", rhsQueuePrefetch), lhsQueuePrefetch, rhsQueuePrefetch)) {
                return false;
            }
        }
        {
            Boolean lhsReduceMemoryFootprint;
            lhsReduceMemoryFootprint = this.isReduceMemoryFootprint();
            Boolean rhsReduceMemoryFootprint;
            rhsReduceMemoryFootprint = that.isReduceMemoryFootprint();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reduceMemoryFootprint", lhsReduceMemoryFootprint), LocatorUtils.property(thatLocator, "reduceMemoryFootprint", rhsReduceMemoryFootprint), lhsReduceMemoryFootprint, rhsReduceMemoryFootprint)) {
                return false;
            }
        }
        {
            Boolean lhsSendAdvisoryIfNoConsumers;
            lhsSendAdvisoryIfNoConsumers = this.isSendAdvisoryIfNoConsumers();
            Boolean rhsSendAdvisoryIfNoConsumers;
            rhsSendAdvisoryIfNoConsumers = that.isSendAdvisoryIfNoConsumers();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sendAdvisoryIfNoConsumers", lhsSendAdvisoryIfNoConsumers), LocatorUtils.property(thatLocator, "sendAdvisoryIfNoConsumers", rhsSendAdvisoryIfNoConsumers), lhsSendAdvisoryIfNoConsumers, rhsSendAdvisoryIfNoConsumers)) {
                return false;
            }
        }
        {
            String lhsSlowConsumerStrategy;
            lhsSlowConsumerStrategy = this.getSlowConsumerStrategy();
            String rhsSlowConsumerStrategy;
            rhsSlowConsumerStrategy = that.getSlowConsumerStrategy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "slowConsumerStrategy", lhsSlowConsumerStrategy), LocatorUtils.property(thatLocator, "slowConsumerStrategy", rhsSlowConsumerStrategy), lhsSlowConsumerStrategy, rhsSlowConsumerStrategy)) {
                return false;
            }
        }
        {
            BigInteger lhsStoreUsageHighWaterMark;
            lhsStoreUsageHighWaterMark = this.getStoreUsageHighWaterMark();
            BigInteger rhsStoreUsageHighWaterMark;
            rhsStoreUsageHighWaterMark = that.getStoreUsageHighWaterMark();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "storeUsageHighWaterMark", lhsStoreUsageHighWaterMark), LocatorUtils.property(thatLocator, "storeUsageHighWaterMark", rhsStoreUsageHighWaterMark), lhsStoreUsageHighWaterMark, rhsStoreUsageHighWaterMark)) {
                return false;
            }
        }
        {
            Boolean lhsStrictOrderDispatch;
            lhsStrictOrderDispatch = this.isStrictOrderDispatch();
            Boolean rhsStrictOrderDispatch;
            rhsStrictOrderDispatch = that.isStrictOrderDispatch();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "strictOrderDispatch", lhsStrictOrderDispatch), LocatorUtils.property(thatLocator, "strictOrderDispatch", rhsStrictOrderDispatch), lhsStrictOrderDispatch, rhsStrictOrderDispatch)) {
                return false;
            }
        }
        {
            String lhsSubscriptionRecoveryPolicy;
            lhsSubscriptionRecoveryPolicy = this.getSubscriptionRecoveryPolicy();
            String rhsSubscriptionRecoveryPolicy;
            rhsSubscriptionRecoveryPolicy = that.getSubscriptionRecoveryPolicy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subscriptionRecoveryPolicy", lhsSubscriptionRecoveryPolicy), LocatorUtils.property(thatLocator, "subscriptionRecoveryPolicy", rhsSubscriptionRecoveryPolicy), lhsSubscriptionRecoveryPolicy, rhsSubscriptionRecoveryPolicy)) {
                return false;
            }
        }
        {
            Boolean lhsTempQueue;
            lhsTempQueue = this.isTempQueue();
            Boolean rhsTempQueue;
            rhsTempQueue = that.isTempQueue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tempQueue", lhsTempQueue), LocatorUtils.property(thatLocator, "tempQueue", rhsTempQueue), lhsTempQueue, rhsTempQueue)) {
                return false;
            }
        }
        {
            Boolean lhsTempTopic;
            lhsTempTopic = this.isTempTopic();
            Boolean rhsTempTopic;
            rhsTempTopic = that.isTempTopic();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tempTopic", lhsTempTopic), LocatorUtils.property(thatLocator, "tempTopic", rhsTempTopic), lhsTempTopic, rhsTempTopic)) {
                return false;
            }
        }
        {
            BigInteger lhsTimeBeforeDispatchStarts;
            lhsTimeBeforeDispatchStarts = this.getTimeBeforeDispatchStarts();
            BigInteger rhsTimeBeforeDispatchStarts;
            rhsTimeBeforeDispatchStarts = that.getTimeBeforeDispatchStarts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timeBeforeDispatchStarts", lhsTimeBeforeDispatchStarts), LocatorUtils.property(thatLocator, "timeBeforeDispatchStarts", rhsTimeBeforeDispatchStarts), lhsTimeBeforeDispatchStarts, rhsTimeBeforeDispatchStarts)) {
                return false;
            }
        }
        {
            String lhsTopic;
            lhsTopic = this.getTopic();
            String rhsTopic;
            rhsTopic = that.getTopic();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topic", lhsTopic), LocatorUtils.property(thatLocator, "topic", rhsTopic), lhsTopic, rhsTopic)) {
                return false;
            }
        }
        {
            BigInteger lhsTopicPrefetch;
            lhsTopicPrefetch = this.getTopicPrefetch();
            BigInteger rhsTopicPrefetch;
            rhsTopicPrefetch = that.getTopicPrefetch();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "topicPrefetch", lhsTopicPrefetch), LocatorUtils.property(thatLocator, "topicPrefetch", rhsTopicPrefetch), lhsTopicPrefetch, rhsTopicPrefetch)) {
                return false;
            }
        }
        {
            Boolean lhsUseCache;
            lhsUseCache = this.isUseCache();
            Boolean rhsUseCache;
            rhsUseCache = that.isUseCache();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "useCache", lhsUseCache), LocatorUtils.property(thatLocator, "useCache", rhsUseCache), lhsUseCache, rhsUseCache)) {
                return false;
            }
        }
        {
            Boolean lhsUseConsumerPriority;
            lhsUseConsumerPriority = this.isUseConsumerPriority();
            Boolean rhsUseConsumerPriority;
            rhsUseConsumerPriority = that.isUseConsumerPriority();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "useConsumerPriority", lhsUseConsumerPriority), LocatorUtils.property(thatLocator, "useConsumerPriority", rhsUseConsumerPriority), lhsUseConsumerPriority, rhsUseConsumerPriority)) {
                return false;
            }
        }
        {
            Boolean lhsUsePrefetchExtension;
            lhsUsePrefetchExtension = this.isUsePrefetchExtension();
            Boolean rhsUsePrefetchExtension;
            rhsUsePrefetchExtension = that.isUsePrefetchExtension();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "usePrefetchExtension", lhsUsePrefetchExtension), LocatorUtils.property(thatLocator, "usePrefetchExtension", rhsUsePrefetchExtension), lhsUsePrefetchExtension, rhsUsePrefetchExtension)) {
                return false;
            }
        }
        {
            Boolean lhsUseTopicSubscriptionInflightStats;
            lhsUseTopicSubscriptionInflightStats = this.isUseTopicSubscriptionInflightStats();
            Boolean rhsUseTopicSubscriptionInflightStats;
            rhsUseTopicSubscriptionInflightStats = that.isUseTopicSubscriptionInflightStats();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "useTopicSubscriptionInflightStats", lhsUseTopicSubscriptionInflightStats), LocatorUtils.property(thatLocator, "useTopicSubscriptionInflightStats", rhsUseTopicSubscriptionInflightStats), lhsUseTopicSubscriptionInflightStats, rhsUseTopicSubscriptionInflightStats)) {
                return false;
            }
        }
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
        return equals(null, null, object, strategy);
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}discarding"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}individualDeadLetterStrategy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}sharedDeadLetterStrategy"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "discarding",
        "individualDeadLetterStrategy",
        "sharedDeadLetterStrategy",
        "any"
    })
    public static class DeadLetterStrategy
        implements Equals, HashCode, ToString
    {

        protected DtoDiscarding discarding;
        protected DtoIndividualDeadLetterStrategy individualDeadLetterStrategy;
        protected DtoSharedDeadLetterStrategy sharedDeadLetterStrategy;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the discarding property.
         * 
         * @return
         *     possible object is
         *     {@link DtoDiscarding }
         *     
         */
        public DtoDiscarding getDiscarding() {
            return discarding;
        }

        /**
         * Sets the value of the discarding property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoDiscarding }
         *     
         */
        public void setDiscarding(DtoDiscarding value) {
            this.discarding = value;
        }

        /**
         * Gets the value of the individualDeadLetterStrategy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoIndividualDeadLetterStrategy }
         *     
         */
        public DtoIndividualDeadLetterStrategy getIndividualDeadLetterStrategy() {
            return individualDeadLetterStrategy;
        }

        /**
         * Sets the value of the individualDeadLetterStrategy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoIndividualDeadLetterStrategy }
         *     
         */
        public void setIndividualDeadLetterStrategy(DtoIndividualDeadLetterStrategy value) {
            this.individualDeadLetterStrategy = value;
        }

        /**
         * Gets the value of the sharedDeadLetterStrategy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoSharedDeadLetterStrategy }
         *     
         */
        public DtoSharedDeadLetterStrategy getSharedDeadLetterStrategy() {
            return sharedDeadLetterStrategy;
        }

        /**
         * Sets the value of the sharedDeadLetterStrategy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoSharedDeadLetterStrategy }
         *     
         */
        public void setSharedDeadLetterStrategy(DtoSharedDeadLetterStrategy value) {
            this.sharedDeadLetterStrategy = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoDiscarding theDiscarding;
                theDiscarding = this.getDiscarding();
                strategy.appendField(locator, this, "discarding", buffer, theDiscarding);
            }
            {
                DtoIndividualDeadLetterStrategy theIndividualDeadLetterStrategy;
                theIndividualDeadLetterStrategy = this.getIndividualDeadLetterStrategy();
                strategy.appendField(locator, this, "individualDeadLetterStrategy", buffer, theIndividualDeadLetterStrategy);
            }
            {
                DtoSharedDeadLetterStrategy theSharedDeadLetterStrategy;
                theSharedDeadLetterStrategy = this.getSharedDeadLetterStrategy();
                strategy.appendField(locator, this, "sharedDeadLetterStrategy", buffer, theSharedDeadLetterStrategy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoDiscarding theDiscarding;
                theDiscarding = this.getDiscarding();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "discarding", theDiscarding), currentHashCode, theDiscarding);
            }
            {
                DtoIndividualDeadLetterStrategy theIndividualDeadLetterStrategy;
                theIndividualDeadLetterStrategy = this.getIndividualDeadLetterStrategy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "individualDeadLetterStrategy", theIndividualDeadLetterStrategy), currentHashCode, theIndividualDeadLetterStrategy);
            }
            {
                DtoSharedDeadLetterStrategy theSharedDeadLetterStrategy;
                theSharedDeadLetterStrategy = this.getSharedDeadLetterStrategy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sharedDeadLetterStrategy", theSharedDeadLetterStrategy), currentHashCode, theSharedDeadLetterStrategy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.DeadLetterStrategy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.DeadLetterStrategy that = ((DtoPolicyEntry.DeadLetterStrategy) object);
            {
                DtoDiscarding lhsDiscarding;
                lhsDiscarding = this.getDiscarding();
                DtoDiscarding rhsDiscarding;
                rhsDiscarding = that.getDiscarding();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "discarding", lhsDiscarding), LocatorUtils.property(thatLocator, "discarding", rhsDiscarding), lhsDiscarding, rhsDiscarding)) {
                    return false;
                }
            }
            {
                DtoIndividualDeadLetterStrategy lhsIndividualDeadLetterStrategy;
                lhsIndividualDeadLetterStrategy = this.getIndividualDeadLetterStrategy();
                DtoIndividualDeadLetterStrategy rhsIndividualDeadLetterStrategy;
                rhsIndividualDeadLetterStrategy = that.getIndividualDeadLetterStrategy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "individualDeadLetterStrategy", lhsIndividualDeadLetterStrategy), LocatorUtils.property(thatLocator, "individualDeadLetterStrategy", rhsIndividualDeadLetterStrategy), lhsIndividualDeadLetterStrategy, rhsIndividualDeadLetterStrategy)) {
                    return false;
                }
            }
            {
                DtoSharedDeadLetterStrategy lhsSharedDeadLetterStrategy;
                lhsSharedDeadLetterStrategy = this.getSharedDeadLetterStrategy();
                DtoSharedDeadLetterStrategy rhsSharedDeadLetterStrategy;
                rhsSharedDeadLetterStrategy = that.getSharedDeadLetterStrategy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "sharedDeadLetterStrategy", lhsSharedDeadLetterStrategy), LocatorUtils.property(thatLocator, "sharedDeadLetterStrategy", rhsSharedDeadLetterStrategy), lhsSharedDeadLetterStrategy, rhsSharedDeadLetterStrategy)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}queue"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}tempQueue"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}tempTopic"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}topic"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "queue",
        "tempQueue",
        "tempTopic",
        "topic",
        "any"
    })
    public static class Destination
        implements Equals, HashCode, ToString
    {

        protected DtoQueue queue;
        protected DtoTempQueue tempQueue;
        protected DtoTempTopic tempTopic;
        protected DtoTopic topic;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the queue property.
         * 
         * @return
         *     possible object is
         *     {@link DtoQueue }
         *     
         */
        public DtoQueue getQueue() {
            return queue;
        }

        /**
         * Sets the value of the queue property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoQueue }
         *     
         */
        public void setQueue(DtoQueue value) {
            this.queue = value;
        }

        /**
         * Gets the value of the tempQueue property.
         * 
         * @return
         *     possible object is
         *     {@link DtoTempQueue }
         *     
         */
        public DtoTempQueue getTempQueue() {
            return tempQueue;
        }

        /**
         * Sets the value of the tempQueue property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoTempQueue }
         *     
         */
        public void setTempQueue(DtoTempQueue value) {
            this.tempQueue = value;
        }

        /**
         * Gets the value of the tempTopic property.
         * 
         * @return
         *     possible object is
         *     {@link DtoTempTopic }
         *     
         */
        public DtoTempTopic getTempTopic() {
            return tempTopic;
        }

        /**
         * Sets the value of the tempTopic property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoTempTopic }
         *     
         */
        public void setTempTopic(DtoTempTopic value) {
            this.tempTopic = value;
        }

        /**
         * Gets the value of the topic property.
         * 
         * @return
         *     possible object is
         *     {@link DtoTopic }
         *     
         */
        public DtoTopic getTopic() {
            return topic;
        }

        /**
         * Sets the value of the topic property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoTopic }
         *     
         */
        public void setTopic(DtoTopic value) {
            this.topic = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoQueue theQueue;
                theQueue = this.getQueue();
                strategy.appendField(locator, this, "queue", buffer, theQueue);
            }
            {
                DtoTempQueue theTempQueue;
                theTempQueue = this.getTempQueue();
                strategy.appendField(locator, this, "tempQueue", buffer, theTempQueue);
            }
            {
                DtoTempTopic theTempTopic;
                theTempTopic = this.getTempTopic();
                strategy.appendField(locator, this, "tempTopic", buffer, theTempTopic);
            }
            {
                DtoTopic theTopic;
                theTopic = this.getTopic();
                strategy.appendField(locator, this, "topic", buffer, theTopic);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoQueue theQueue;
                theQueue = this.getQueue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "queue", theQueue), currentHashCode, theQueue);
            }
            {
                DtoTempQueue theTempQueue;
                theTempQueue = this.getTempQueue();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tempQueue", theTempQueue), currentHashCode, theTempQueue);
            }
            {
                DtoTempTopic theTempTopic;
                theTempTopic = this.getTempTopic();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tempTopic", theTempTopic), currentHashCode, theTempTopic);
            }
            {
                DtoTopic theTopic;
                theTopic = this.getTopic();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "topic", theTopic), currentHashCode, theTopic);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.Destination)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.Destination that = ((DtoPolicyEntry.Destination) object);
            {
                DtoQueue lhsQueue;
                lhsQueue = this.getQueue();
                DtoQueue rhsQueue;
                rhsQueue = that.getQueue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "queue", lhsQueue), LocatorUtils.property(thatLocator, "queue", rhsQueue), lhsQueue, rhsQueue)) {
                    return false;
                }
            }
            {
                DtoTempQueue lhsTempQueue;
                lhsTempQueue = this.getTempQueue();
                DtoTempQueue rhsTempQueue;
                rhsTempQueue = that.getTempQueue();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "tempQueue", lhsTempQueue), LocatorUtils.property(thatLocator, "tempQueue", rhsTempQueue), lhsTempQueue, rhsTempQueue)) {
                    return false;
                }
            }
            {
                DtoTempTopic lhsTempTopic;
                lhsTempTopic = this.getTempTopic();
                DtoTempTopic rhsTempTopic;
                rhsTempTopic = that.getTempTopic();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "tempTopic", lhsTempTopic), LocatorUtils.property(thatLocator, "tempTopic", rhsTempTopic), lhsTempTopic, rhsTempTopic)) {
                    return false;
                }
            }
            {
                DtoTopic lhsTopic;
                lhsTopic = this.getTopic();
                DtoTopic rhsTopic;
                rhsTopic = that.getTopic();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "topic", lhsTopic), LocatorUtils.property(thatLocator, "topic", rhsTopic), lhsTopic, rhsTopic)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}priorityDispatchPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}priorityNetworkDispatchPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}roundRobinDispatchPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}simpleDispatchPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}strictOrderDispatchPolicy"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "priorityDispatchPolicy",
        "priorityNetworkDispatchPolicy",
        "roundRobinDispatchPolicy",
        "simpleDispatchPolicy",
        "strictOrderDispatchPolicy",
        "any"
    })
    public static class DispatchPolicy
        implements Equals, HashCode, ToString
    {

        protected DtoPriorityDispatchPolicy priorityDispatchPolicy;
        protected DtoPriorityNetworkDispatchPolicy priorityNetworkDispatchPolicy;
        protected DtoRoundRobinDispatchPolicy roundRobinDispatchPolicy;
        protected DtoSimpleDispatchPolicy simpleDispatchPolicy;
        protected DtoStrictOrderDispatchPolicy strictOrderDispatchPolicy;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the priorityDispatchPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoPriorityDispatchPolicy }
         *     
         */
        public DtoPriorityDispatchPolicy getPriorityDispatchPolicy() {
            return priorityDispatchPolicy;
        }

        /**
         * Sets the value of the priorityDispatchPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoPriorityDispatchPolicy }
         *     
         */
        public void setPriorityDispatchPolicy(DtoPriorityDispatchPolicy value) {
            this.priorityDispatchPolicy = value;
        }

        /**
         * Gets the value of the priorityNetworkDispatchPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoPriorityNetworkDispatchPolicy }
         *     
         */
        public DtoPriorityNetworkDispatchPolicy getPriorityNetworkDispatchPolicy() {
            return priorityNetworkDispatchPolicy;
        }

        /**
         * Sets the value of the priorityNetworkDispatchPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoPriorityNetworkDispatchPolicy }
         *     
         */
        public void setPriorityNetworkDispatchPolicy(DtoPriorityNetworkDispatchPolicy value) {
            this.priorityNetworkDispatchPolicy = value;
        }

        /**
         * Gets the value of the roundRobinDispatchPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoRoundRobinDispatchPolicy }
         *     
         */
        public DtoRoundRobinDispatchPolicy getRoundRobinDispatchPolicy() {
            return roundRobinDispatchPolicy;
        }

        /**
         * Sets the value of the roundRobinDispatchPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoRoundRobinDispatchPolicy }
         *     
         */
        public void setRoundRobinDispatchPolicy(DtoRoundRobinDispatchPolicy value) {
            this.roundRobinDispatchPolicy = value;
        }

        /**
         * Gets the value of the simpleDispatchPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoSimpleDispatchPolicy }
         *     
         */
        public DtoSimpleDispatchPolicy getSimpleDispatchPolicy() {
            return simpleDispatchPolicy;
        }

        /**
         * Sets the value of the simpleDispatchPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoSimpleDispatchPolicy }
         *     
         */
        public void setSimpleDispatchPolicy(DtoSimpleDispatchPolicy value) {
            this.simpleDispatchPolicy = value;
        }

        /**
         * Gets the value of the strictOrderDispatchPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoStrictOrderDispatchPolicy }
         *     
         */
        public DtoStrictOrderDispatchPolicy getStrictOrderDispatchPolicy() {
            return strictOrderDispatchPolicy;
        }

        /**
         * Sets the value of the strictOrderDispatchPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoStrictOrderDispatchPolicy }
         *     
         */
        public void setStrictOrderDispatchPolicy(DtoStrictOrderDispatchPolicy value) {
            this.strictOrderDispatchPolicy = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoPriorityDispatchPolicy thePriorityDispatchPolicy;
                thePriorityDispatchPolicy = this.getPriorityDispatchPolicy();
                strategy.appendField(locator, this, "priorityDispatchPolicy", buffer, thePriorityDispatchPolicy);
            }
            {
                DtoPriorityNetworkDispatchPolicy thePriorityNetworkDispatchPolicy;
                thePriorityNetworkDispatchPolicy = this.getPriorityNetworkDispatchPolicy();
                strategy.appendField(locator, this, "priorityNetworkDispatchPolicy", buffer, thePriorityNetworkDispatchPolicy);
            }
            {
                DtoRoundRobinDispatchPolicy theRoundRobinDispatchPolicy;
                theRoundRobinDispatchPolicy = this.getRoundRobinDispatchPolicy();
                strategy.appendField(locator, this, "roundRobinDispatchPolicy", buffer, theRoundRobinDispatchPolicy);
            }
            {
                DtoSimpleDispatchPolicy theSimpleDispatchPolicy;
                theSimpleDispatchPolicy = this.getSimpleDispatchPolicy();
                strategy.appendField(locator, this, "simpleDispatchPolicy", buffer, theSimpleDispatchPolicy);
            }
            {
                DtoStrictOrderDispatchPolicy theStrictOrderDispatchPolicy;
                theStrictOrderDispatchPolicy = this.getStrictOrderDispatchPolicy();
                strategy.appendField(locator, this, "strictOrderDispatchPolicy", buffer, theStrictOrderDispatchPolicy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoPriorityDispatchPolicy thePriorityDispatchPolicy;
                thePriorityDispatchPolicy = this.getPriorityDispatchPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "priorityDispatchPolicy", thePriorityDispatchPolicy), currentHashCode, thePriorityDispatchPolicy);
            }
            {
                DtoPriorityNetworkDispatchPolicy thePriorityNetworkDispatchPolicy;
                thePriorityNetworkDispatchPolicy = this.getPriorityNetworkDispatchPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "priorityNetworkDispatchPolicy", thePriorityNetworkDispatchPolicy), currentHashCode, thePriorityNetworkDispatchPolicy);
            }
            {
                DtoRoundRobinDispatchPolicy theRoundRobinDispatchPolicy;
                theRoundRobinDispatchPolicy = this.getRoundRobinDispatchPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "roundRobinDispatchPolicy", theRoundRobinDispatchPolicy), currentHashCode, theRoundRobinDispatchPolicy);
            }
            {
                DtoSimpleDispatchPolicy theSimpleDispatchPolicy;
                theSimpleDispatchPolicy = this.getSimpleDispatchPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "simpleDispatchPolicy", theSimpleDispatchPolicy), currentHashCode, theSimpleDispatchPolicy);
            }
            {
                DtoStrictOrderDispatchPolicy theStrictOrderDispatchPolicy;
                theStrictOrderDispatchPolicy = this.getStrictOrderDispatchPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "strictOrderDispatchPolicy", theStrictOrderDispatchPolicy), currentHashCode, theStrictOrderDispatchPolicy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.DispatchPolicy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.DispatchPolicy that = ((DtoPolicyEntry.DispatchPolicy) object);
            {
                DtoPriorityDispatchPolicy lhsPriorityDispatchPolicy;
                lhsPriorityDispatchPolicy = this.getPriorityDispatchPolicy();
                DtoPriorityDispatchPolicy rhsPriorityDispatchPolicy;
                rhsPriorityDispatchPolicy = that.getPriorityDispatchPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "priorityDispatchPolicy", lhsPriorityDispatchPolicy), LocatorUtils.property(thatLocator, "priorityDispatchPolicy", rhsPriorityDispatchPolicy), lhsPriorityDispatchPolicy, rhsPriorityDispatchPolicy)) {
                    return false;
                }
            }
            {
                DtoPriorityNetworkDispatchPolicy lhsPriorityNetworkDispatchPolicy;
                lhsPriorityNetworkDispatchPolicy = this.getPriorityNetworkDispatchPolicy();
                DtoPriorityNetworkDispatchPolicy rhsPriorityNetworkDispatchPolicy;
                rhsPriorityNetworkDispatchPolicy = that.getPriorityNetworkDispatchPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "priorityNetworkDispatchPolicy", lhsPriorityNetworkDispatchPolicy), LocatorUtils.property(thatLocator, "priorityNetworkDispatchPolicy", rhsPriorityNetworkDispatchPolicy), lhsPriorityNetworkDispatchPolicy, rhsPriorityNetworkDispatchPolicy)) {
                    return false;
                }
            }
            {
                DtoRoundRobinDispatchPolicy lhsRoundRobinDispatchPolicy;
                lhsRoundRobinDispatchPolicy = this.getRoundRobinDispatchPolicy();
                DtoRoundRobinDispatchPolicy rhsRoundRobinDispatchPolicy;
                rhsRoundRobinDispatchPolicy = that.getRoundRobinDispatchPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "roundRobinDispatchPolicy", lhsRoundRobinDispatchPolicy), LocatorUtils.property(thatLocator, "roundRobinDispatchPolicy", rhsRoundRobinDispatchPolicy), lhsRoundRobinDispatchPolicy, rhsRoundRobinDispatchPolicy)) {
                    return false;
                }
            }
            {
                DtoSimpleDispatchPolicy lhsSimpleDispatchPolicy;
                lhsSimpleDispatchPolicy = this.getSimpleDispatchPolicy();
                DtoSimpleDispatchPolicy rhsSimpleDispatchPolicy;
                rhsSimpleDispatchPolicy = that.getSimpleDispatchPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "simpleDispatchPolicy", lhsSimpleDispatchPolicy), LocatorUtils.property(thatLocator, "simpleDispatchPolicy", rhsSimpleDispatchPolicy), lhsSimpleDispatchPolicy, rhsSimpleDispatchPolicy)) {
                    return false;
                }
            }
            {
                DtoStrictOrderDispatchPolicy lhsStrictOrderDispatchPolicy;
                lhsStrictOrderDispatchPolicy = this.getStrictOrderDispatchPolicy();
                DtoStrictOrderDispatchPolicy rhsStrictOrderDispatchPolicy;
                rhsStrictOrderDispatchPolicy = that.getStrictOrderDispatchPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "strictOrderDispatchPolicy", lhsStrictOrderDispatchPolicy), LocatorUtils.property(thatLocator, "strictOrderDispatchPolicy", rhsStrictOrderDispatchPolicy), lhsStrictOrderDispatchPolicy, rhsStrictOrderDispatchPolicy)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}oldestMessageEvictionStrategy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}oldestMessageWithLowestPriorityEvictionStrategy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}uniquePropertyMessageEvictionStrategy"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "oldestMessageEvictionStrategy",
        "oldestMessageWithLowestPriorityEvictionStrategy",
        "uniquePropertyMessageEvictionStrategy",
        "any"
    })
    public static class MessageEvictionStrategy
        implements Equals, HashCode, ToString
    {

        protected DtoOldestMessageEvictionStrategy oldestMessageEvictionStrategy;
        protected DtoOldestMessageWithLowestPriorityEvictionStrategy oldestMessageWithLowestPriorityEvictionStrategy;
        protected DtoUniquePropertyMessageEvictionStrategy uniquePropertyMessageEvictionStrategy;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the oldestMessageEvictionStrategy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoOldestMessageEvictionStrategy }
         *     
         */
        public DtoOldestMessageEvictionStrategy getOldestMessageEvictionStrategy() {
            return oldestMessageEvictionStrategy;
        }

        /**
         * Sets the value of the oldestMessageEvictionStrategy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoOldestMessageEvictionStrategy }
         *     
         */
        public void setOldestMessageEvictionStrategy(DtoOldestMessageEvictionStrategy value) {
            this.oldestMessageEvictionStrategy = value;
        }

        /**
         * Gets the value of the oldestMessageWithLowestPriorityEvictionStrategy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoOldestMessageWithLowestPriorityEvictionStrategy }
         *     
         */
        public DtoOldestMessageWithLowestPriorityEvictionStrategy getOldestMessageWithLowestPriorityEvictionStrategy() {
            return oldestMessageWithLowestPriorityEvictionStrategy;
        }

        /**
         * Sets the value of the oldestMessageWithLowestPriorityEvictionStrategy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoOldestMessageWithLowestPriorityEvictionStrategy }
         *     
         */
        public void setOldestMessageWithLowestPriorityEvictionStrategy(DtoOldestMessageWithLowestPriorityEvictionStrategy value) {
            this.oldestMessageWithLowestPriorityEvictionStrategy = value;
        }

        /**
         * Gets the value of the uniquePropertyMessageEvictionStrategy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoUniquePropertyMessageEvictionStrategy }
         *     
         */
        public DtoUniquePropertyMessageEvictionStrategy getUniquePropertyMessageEvictionStrategy() {
            return uniquePropertyMessageEvictionStrategy;
        }

        /**
         * Sets the value of the uniquePropertyMessageEvictionStrategy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoUniquePropertyMessageEvictionStrategy }
         *     
         */
        public void setUniquePropertyMessageEvictionStrategy(DtoUniquePropertyMessageEvictionStrategy value) {
            this.uniquePropertyMessageEvictionStrategy = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoOldestMessageEvictionStrategy theOldestMessageEvictionStrategy;
                theOldestMessageEvictionStrategy = this.getOldestMessageEvictionStrategy();
                strategy.appendField(locator, this, "oldestMessageEvictionStrategy", buffer, theOldestMessageEvictionStrategy);
            }
            {
                DtoOldestMessageWithLowestPriorityEvictionStrategy theOldestMessageWithLowestPriorityEvictionStrategy;
                theOldestMessageWithLowestPriorityEvictionStrategy = this.getOldestMessageWithLowestPriorityEvictionStrategy();
                strategy.appendField(locator, this, "oldestMessageWithLowestPriorityEvictionStrategy", buffer, theOldestMessageWithLowestPriorityEvictionStrategy);
            }
            {
                DtoUniquePropertyMessageEvictionStrategy theUniquePropertyMessageEvictionStrategy;
                theUniquePropertyMessageEvictionStrategy = this.getUniquePropertyMessageEvictionStrategy();
                strategy.appendField(locator, this, "uniquePropertyMessageEvictionStrategy", buffer, theUniquePropertyMessageEvictionStrategy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoOldestMessageEvictionStrategy theOldestMessageEvictionStrategy;
                theOldestMessageEvictionStrategy = this.getOldestMessageEvictionStrategy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oldestMessageEvictionStrategy", theOldestMessageEvictionStrategy), currentHashCode, theOldestMessageEvictionStrategy);
            }
            {
                DtoOldestMessageWithLowestPriorityEvictionStrategy theOldestMessageWithLowestPriorityEvictionStrategy;
                theOldestMessageWithLowestPriorityEvictionStrategy = this.getOldestMessageWithLowestPriorityEvictionStrategy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oldestMessageWithLowestPriorityEvictionStrategy", theOldestMessageWithLowestPriorityEvictionStrategy), currentHashCode, theOldestMessageWithLowestPriorityEvictionStrategy);
            }
            {
                DtoUniquePropertyMessageEvictionStrategy theUniquePropertyMessageEvictionStrategy;
                theUniquePropertyMessageEvictionStrategy = this.getUniquePropertyMessageEvictionStrategy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uniquePropertyMessageEvictionStrategy", theUniquePropertyMessageEvictionStrategy), currentHashCode, theUniquePropertyMessageEvictionStrategy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.MessageEvictionStrategy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.MessageEvictionStrategy that = ((DtoPolicyEntry.MessageEvictionStrategy) object);
            {
                DtoOldestMessageEvictionStrategy lhsOldestMessageEvictionStrategy;
                lhsOldestMessageEvictionStrategy = this.getOldestMessageEvictionStrategy();
                DtoOldestMessageEvictionStrategy rhsOldestMessageEvictionStrategy;
                rhsOldestMessageEvictionStrategy = that.getOldestMessageEvictionStrategy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "oldestMessageEvictionStrategy", lhsOldestMessageEvictionStrategy), LocatorUtils.property(thatLocator, "oldestMessageEvictionStrategy", rhsOldestMessageEvictionStrategy), lhsOldestMessageEvictionStrategy, rhsOldestMessageEvictionStrategy)) {
                    return false;
                }
            }
            {
                DtoOldestMessageWithLowestPriorityEvictionStrategy lhsOldestMessageWithLowestPriorityEvictionStrategy;
                lhsOldestMessageWithLowestPriorityEvictionStrategy = this.getOldestMessageWithLowestPriorityEvictionStrategy();
                DtoOldestMessageWithLowestPriorityEvictionStrategy rhsOldestMessageWithLowestPriorityEvictionStrategy;
                rhsOldestMessageWithLowestPriorityEvictionStrategy = that.getOldestMessageWithLowestPriorityEvictionStrategy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "oldestMessageWithLowestPriorityEvictionStrategy", lhsOldestMessageWithLowestPriorityEvictionStrategy), LocatorUtils.property(thatLocator, "oldestMessageWithLowestPriorityEvictionStrategy", rhsOldestMessageWithLowestPriorityEvictionStrategy), lhsOldestMessageWithLowestPriorityEvictionStrategy, rhsOldestMessageWithLowestPriorityEvictionStrategy)) {
                    return false;
                }
            }
            {
                DtoUniquePropertyMessageEvictionStrategy lhsUniquePropertyMessageEvictionStrategy;
                lhsUniquePropertyMessageEvictionStrategy = this.getUniquePropertyMessageEvictionStrategy();
                DtoUniquePropertyMessageEvictionStrategy rhsUniquePropertyMessageEvictionStrategy;
                rhsUniquePropertyMessageEvictionStrategy = that.getUniquePropertyMessageEvictionStrategy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "uniquePropertyMessageEvictionStrategy", lhsUniquePropertyMessageEvictionStrategy), LocatorUtils.property(thatLocator, "uniquePropertyMessageEvictionStrategy", rhsUniquePropertyMessageEvictionStrategy), lhsUniquePropertyMessageEvictionStrategy, rhsUniquePropertyMessageEvictionStrategy)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}cachedMessageGroupMapFactory"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}messageGroupHashBucketFactory"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}simpleMessageGroupMapFactory"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "cachedMessageGroupMapFactory",
        "messageGroupHashBucketFactory",
        "simpleMessageGroupMapFactory",
        "any"
    })
    public static class MessageGroupMapFactory
        implements Equals, HashCode, ToString
    {

        protected DtoCachedMessageGroupMapFactory cachedMessageGroupMapFactory;
        protected DtoMessageGroupHashBucketFactory messageGroupHashBucketFactory;
        protected DtoSimpleMessageGroupMapFactory simpleMessageGroupMapFactory;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the cachedMessageGroupMapFactory property.
         * 
         * @return
         *     possible object is
         *     {@link DtoCachedMessageGroupMapFactory }
         *     
         */
        public DtoCachedMessageGroupMapFactory getCachedMessageGroupMapFactory() {
            return cachedMessageGroupMapFactory;
        }

        /**
         * Sets the value of the cachedMessageGroupMapFactory property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoCachedMessageGroupMapFactory }
         *     
         */
        public void setCachedMessageGroupMapFactory(DtoCachedMessageGroupMapFactory value) {
            this.cachedMessageGroupMapFactory = value;
        }

        /**
         * Gets the value of the messageGroupHashBucketFactory property.
         * 
         * @return
         *     possible object is
         *     {@link DtoMessageGroupHashBucketFactory }
         *     
         */
        public DtoMessageGroupHashBucketFactory getMessageGroupHashBucketFactory() {
            return messageGroupHashBucketFactory;
        }

        /**
         * Sets the value of the messageGroupHashBucketFactory property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoMessageGroupHashBucketFactory }
         *     
         */
        public void setMessageGroupHashBucketFactory(DtoMessageGroupHashBucketFactory value) {
            this.messageGroupHashBucketFactory = value;
        }

        /**
         * Gets the value of the simpleMessageGroupMapFactory property.
         * 
         * @return
         *     possible object is
         *     {@link DtoSimpleMessageGroupMapFactory }
         *     
         */
        public DtoSimpleMessageGroupMapFactory getSimpleMessageGroupMapFactory() {
            return simpleMessageGroupMapFactory;
        }

        /**
         * Sets the value of the simpleMessageGroupMapFactory property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoSimpleMessageGroupMapFactory }
         *     
         */
        public void setSimpleMessageGroupMapFactory(DtoSimpleMessageGroupMapFactory value) {
            this.simpleMessageGroupMapFactory = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoCachedMessageGroupMapFactory theCachedMessageGroupMapFactory;
                theCachedMessageGroupMapFactory = this.getCachedMessageGroupMapFactory();
                strategy.appendField(locator, this, "cachedMessageGroupMapFactory", buffer, theCachedMessageGroupMapFactory);
            }
            {
                DtoMessageGroupHashBucketFactory theMessageGroupHashBucketFactory;
                theMessageGroupHashBucketFactory = this.getMessageGroupHashBucketFactory();
                strategy.appendField(locator, this, "messageGroupHashBucketFactory", buffer, theMessageGroupHashBucketFactory);
            }
            {
                DtoSimpleMessageGroupMapFactory theSimpleMessageGroupMapFactory;
                theSimpleMessageGroupMapFactory = this.getSimpleMessageGroupMapFactory();
                strategy.appendField(locator, this, "simpleMessageGroupMapFactory", buffer, theSimpleMessageGroupMapFactory);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoCachedMessageGroupMapFactory theCachedMessageGroupMapFactory;
                theCachedMessageGroupMapFactory = this.getCachedMessageGroupMapFactory();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cachedMessageGroupMapFactory", theCachedMessageGroupMapFactory), currentHashCode, theCachedMessageGroupMapFactory);
            }
            {
                DtoMessageGroupHashBucketFactory theMessageGroupHashBucketFactory;
                theMessageGroupHashBucketFactory = this.getMessageGroupHashBucketFactory();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "messageGroupHashBucketFactory", theMessageGroupHashBucketFactory), currentHashCode, theMessageGroupHashBucketFactory);
            }
            {
                DtoSimpleMessageGroupMapFactory theSimpleMessageGroupMapFactory;
                theSimpleMessageGroupMapFactory = this.getSimpleMessageGroupMapFactory();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "simpleMessageGroupMapFactory", theSimpleMessageGroupMapFactory), currentHashCode, theSimpleMessageGroupMapFactory);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.MessageGroupMapFactory)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.MessageGroupMapFactory that = ((DtoPolicyEntry.MessageGroupMapFactory) object);
            {
                DtoCachedMessageGroupMapFactory lhsCachedMessageGroupMapFactory;
                lhsCachedMessageGroupMapFactory = this.getCachedMessageGroupMapFactory();
                DtoCachedMessageGroupMapFactory rhsCachedMessageGroupMapFactory;
                rhsCachedMessageGroupMapFactory = that.getCachedMessageGroupMapFactory();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "cachedMessageGroupMapFactory", lhsCachedMessageGroupMapFactory), LocatorUtils.property(thatLocator, "cachedMessageGroupMapFactory", rhsCachedMessageGroupMapFactory), lhsCachedMessageGroupMapFactory, rhsCachedMessageGroupMapFactory)) {
                    return false;
                }
            }
            {
                DtoMessageGroupHashBucketFactory lhsMessageGroupHashBucketFactory;
                lhsMessageGroupHashBucketFactory = this.getMessageGroupHashBucketFactory();
                DtoMessageGroupHashBucketFactory rhsMessageGroupHashBucketFactory;
                rhsMessageGroupHashBucketFactory = that.getMessageGroupHashBucketFactory();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "messageGroupHashBucketFactory", lhsMessageGroupHashBucketFactory), LocatorUtils.property(thatLocator, "messageGroupHashBucketFactory", rhsMessageGroupHashBucketFactory), lhsMessageGroupHashBucketFactory, rhsMessageGroupHashBucketFactory)) {
                    return false;
                }
            }
            {
                DtoSimpleMessageGroupMapFactory lhsSimpleMessageGroupMapFactory;
                lhsSimpleMessageGroupMapFactory = this.getSimpleMessageGroupMapFactory();
                DtoSimpleMessageGroupMapFactory rhsSimpleMessageGroupMapFactory;
                rhsSimpleMessageGroupMapFactory = that.getSimpleMessageGroupMapFactory();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "simpleMessageGroupMapFactory", lhsSimpleMessageGroupMapFactory), LocatorUtils.property(thatLocator, "simpleMessageGroupMapFactory", rhsSimpleMessageGroupMapFactory), lhsSimpleMessageGroupMapFactory, rhsSimpleMessageGroupMapFactory)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}conditionalNetworkBridgeFilterFactory"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}defaultNetworkBridgeFilterFactory"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "conditionalNetworkBridgeFilterFactory",
        "defaultNetworkBridgeFilterFactory",
        "any"
    })
    public static class NetworkBridgeFilterFactory
        implements Equals, HashCode, ToString
    {

        protected DtoConditionalNetworkBridgeFilterFactory conditionalNetworkBridgeFilterFactory;
        protected DtoDefaultNetworkBridgeFilterFactory defaultNetworkBridgeFilterFactory;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the conditionalNetworkBridgeFilterFactory property.
         * 
         * @return
         *     possible object is
         *     {@link DtoConditionalNetworkBridgeFilterFactory }
         *     
         */
        public DtoConditionalNetworkBridgeFilterFactory getConditionalNetworkBridgeFilterFactory() {
            return conditionalNetworkBridgeFilterFactory;
        }

        /**
         * Sets the value of the conditionalNetworkBridgeFilterFactory property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoConditionalNetworkBridgeFilterFactory }
         *     
         */
        public void setConditionalNetworkBridgeFilterFactory(DtoConditionalNetworkBridgeFilterFactory value) {
            this.conditionalNetworkBridgeFilterFactory = value;
        }

        /**
         * Gets the value of the defaultNetworkBridgeFilterFactory property.
         * 
         * @return
         *     possible object is
         *     {@link DtoDefaultNetworkBridgeFilterFactory }
         *     
         */
        public DtoDefaultNetworkBridgeFilterFactory getDefaultNetworkBridgeFilterFactory() {
            return defaultNetworkBridgeFilterFactory;
        }

        /**
         * Sets the value of the defaultNetworkBridgeFilterFactory property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoDefaultNetworkBridgeFilterFactory }
         *     
         */
        public void setDefaultNetworkBridgeFilterFactory(DtoDefaultNetworkBridgeFilterFactory value) {
            this.defaultNetworkBridgeFilterFactory = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoConditionalNetworkBridgeFilterFactory theConditionalNetworkBridgeFilterFactory;
                theConditionalNetworkBridgeFilterFactory = this.getConditionalNetworkBridgeFilterFactory();
                strategy.appendField(locator, this, "conditionalNetworkBridgeFilterFactory", buffer, theConditionalNetworkBridgeFilterFactory);
            }
            {
                DtoDefaultNetworkBridgeFilterFactory theDefaultNetworkBridgeFilterFactory;
                theDefaultNetworkBridgeFilterFactory = this.getDefaultNetworkBridgeFilterFactory();
                strategy.appendField(locator, this, "defaultNetworkBridgeFilterFactory", buffer, theDefaultNetworkBridgeFilterFactory);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoConditionalNetworkBridgeFilterFactory theConditionalNetworkBridgeFilterFactory;
                theConditionalNetworkBridgeFilterFactory = this.getConditionalNetworkBridgeFilterFactory();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "conditionalNetworkBridgeFilterFactory", theConditionalNetworkBridgeFilterFactory), currentHashCode, theConditionalNetworkBridgeFilterFactory);
            }
            {
                DtoDefaultNetworkBridgeFilterFactory theDefaultNetworkBridgeFilterFactory;
                theDefaultNetworkBridgeFilterFactory = this.getDefaultNetworkBridgeFilterFactory();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "defaultNetworkBridgeFilterFactory", theDefaultNetworkBridgeFilterFactory), currentHashCode, theDefaultNetworkBridgeFilterFactory);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.NetworkBridgeFilterFactory)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.NetworkBridgeFilterFactory that = ((DtoPolicyEntry.NetworkBridgeFilterFactory) object);
            {
                DtoConditionalNetworkBridgeFilterFactory lhsConditionalNetworkBridgeFilterFactory;
                lhsConditionalNetworkBridgeFilterFactory = this.getConditionalNetworkBridgeFilterFactory();
                DtoConditionalNetworkBridgeFilterFactory rhsConditionalNetworkBridgeFilterFactory;
                rhsConditionalNetworkBridgeFilterFactory = that.getConditionalNetworkBridgeFilterFactory();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "conditionalNetworkBridgeFilterFactory", lhsConditionalNetworkBridgeFilterFactory), LocatorUtils.property(thatLocator, "conditionalNetworkBridgeFilterFactory", rhsConditionalNetworkBridgeFilterFactory), lhsConditionalNetworkBridgeFilterFactory, rhsConditionalNetworkBridgeFilterFactory)) {
                    return false;
                }
            }
            {
                DtoDefaultNetworkBridgeFilterFactory lhsDefaultNetworkBridgeFilterFactory;
                lhsDefaultNetworkBridgeFilterFactory = this.getDefaultNetworkBridgeFilterFactory();
                DtoDefaultNetworkBridgeFilterFactory rhsDefaultNetworkBridgeFilterFactory;
                rhsDefaultNetworkBridgeFilterFactory = that.getDefaultNetworkBridgeFilterFactory();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "defaultNetworkBridgeFilterFactory", lhsDefaultNetworkBridgeFilterFactory), LocatorUtils.property(thatLocator, "defaultNetworkBridgeFilterFactory", rhsDefaultNetworkBridgeFilterFactory), lhsDefaultNetworkBridgeFilterFactory, rhsDefaultNetworkBridgeFilterFactory)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}fileDurableSubscriberCursor"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}storeDurableSubscriberCursor"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}vmDurableCursor"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "fileDurableSubscriberCursor",
        "storeDurableSubscriberCursor",
        "vmDurableCursor",
        "any"
    })
    public static class PendingDurableSubscriberPolicy
        implements Equals, HashCode, ToString
    {

        protected DtoFileDurableSubscriberCursor fileDurableSubscriberCursor;
        protected DtoStoreDurableSubscriberCursor storeDurableSubscriberCursor;
        protected DtoVmDurableCursor vmDurableCursor;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the fileDurableSubscriberCursor property.
         * 
         * @return
         *     possible object is
         *     {@link DtoFileDurableSubscriberCursor }
         *     
         */
        public DtoFileDurableSubscriberCursor getFileDurableSubscriberCursor() {
            return fileDurableSubscriberCursor;
        }

        /**
         * Sets the value of the fileDurableSubscriberCursor property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoFileDurableSubscriberCursor }
         *     
         */
        public void setFileDurableSubscriberCursor(DtoFileDurableSubscriberCursor value) {
            this.fileDurableSubscriberCursor = value;
        }

        /**
         * Gets the value of the storeDurableSubscriberCursor property.
         * 
         * @return
         *     possible object is
         *     {@link DtoStoreDurableSubscriberCursor }
         *     
         */
        public DtoStoreDurableSubscriberCursor getStoreDurableSubscriberCursor() {
            return storeDurableSubscriberCursor;
        }

        /**
         * Sets the value of the storeDurableSubscriberCursor property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoStoreDurableSubscriberCursor }
         *     
         */
        public void setStoreDurableSubscriberCursor(DtoStoreDurableSubscriberCursor value) {
            this.storeDurableSubscriberCursor = value;
        }

        /**
         * Gets the value of the vmDurableCursor property.
         * 
         * @return
         *     possible object is
         *     {@link DtoVmDurableCursor }
         *     
         */
        public DtoVmDurableCursor getVmDurableCursor() {
            return vmDurableCursor;
        }

        /**
         * Sets the value of the vmDurableCursor property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoVmDurableCursor }
         *     
         */
        public void setVmDurableCursor(DtoVmDurableCursor value) {
            this.vmDurableCursor = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoFileDurableSubscriberCursor theFileDurableSubscriberCursor;
                theFileDurableSubscriberCursor = this.getFileDurableSubscriberCursor();
                strategy.appendField(locator, this, "fileDurableSubscriberCursor", buffer, theFileDurableSubscriberCursor);
            }
            {
                DtoStoreDurableSubscriberCursor theStoreDurableSubscriberCursor;
                theStoreDurableSubscriberCursor = this.getStoreDurableSubscriberCursor();
                strategy.appendField(locator, this, "storeDurableSubscriberCursor", buffer, theStoreDurableSubscriberCursor);
            }
            {
                DtoVmDurableCursor theVmDurableCursor;
                theVmDurableCursor = this.getVmDurableCursor();
                strategy.appendField(locator, this, "vmDurableCursor", buffer, theVmDurableCursor);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoFileDurableSubscriberCursor theFileDurableSubscriberCursor;
                theFileDurableSubscriberCursor = this.getFileDurableSubscriberCursor();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fileDurableSubscriberCursor", theFileDurableSubscriberCursor), currentHashCode, theFileDurableSubscriberCursor);
            }
            {
                DtoStoreDurableSubscriberCursor theStoreDurableSubscriberCursor;
                theStoreDurableSubscriberCursor = this.getStoreDurableSubscriberCursor();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "storeDurableSubscriberCursor", theStoreDurableSubscriberCursor), currentHashCode, theStoreDurableSubscriberCursor);
            }
            {
                DtoVmDurableCursor theVmDurableCursor;
                theVmDurableCursor = this.getVmDurableCursor();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vmDurableCursor", theVmDurableCursor), currentHashCode, theVmDurableCursor);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.PendingDurableSubscriberPolicy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.PendingDurableSubscriberPolicy that = ((DtoPolicyEntry.PendingDurableSubscriberPolicy) object);
            {
                DtoFileDurableSubscriberCursor lhsFileDurableSubscriberCursor;
                lhsFileDurableSubscriberCursor = this.getFileDurableSubscriberCursor();
                DtoFileDurableSubscriberCursor rhsFileDurableSubscriberCursor;
                rhsFileDurableSubscriberCursor = that.getFileDurableSubscriberCursor();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "fileDurableSubscriberCursor", lhsFileDurableSubscriberCursor), LocatorUtils.property(thatLocator, "fileDurableSubscriberCursor", rhsFileDurableSubscriberCursor), lhsFileDurableSubscriberCursor, rhsFileDurableSubscriberCursor)) {
                    return false;
                }
            }
            {
                DtoStoreDurableSubscriberCursor lhsStoreDurableSubscriberCursor;
                lhsStoreDurableSubscriberCursor = this.getStoreDurableSubscriberCursor();
                DtoStoreDurableSubscriberCursor rhsStoreDurableSubscriberCursor;
                rhsStoreDurableSubscriberCursor = that.getStoreDurableSubscriberCursor();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "storeDurableSubscriberCursor", lhsStoreDurableSubscriberCursor), LocatorUtils.property(thatLocator, "storeDurableSubscriberCursor", rhsStoreDurableSubscriberCursor), lhsStoreDurableSubscriberCursor, rhsStoreDurableSubscriberCursor)) {
                    return false;
                }
            }
            {
                DtoVmDurableCursor lhsVmDurableCursor;
                lhsVmDurableCursor = this.getVmDurableCursor();
                DtoVmDurableCursor rhsVmDurableCursor;
                rhsVmDurableCursor = that.getVmDurableCursor();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "vmDurableCursor", lhsVmDurableCursor), LocatorUtils.property(thatLocator, "vmDurableCursor", rhsVmDurableCursor), lhsVmDurableCursor, rhsVmDurableCursor)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}constantPendingMessageLimitStrategy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}prefetchRatePendingMessageLimitStrategy"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "constantPendingMessageLimitStrategy",
        "prefetchRatePendingMessageLimitStrategy",
        "any"
    })
    public static class PendingMessageLimitStrategy
        implements Equals, HashCode, ToString
    {

        protected DtoConstantPendingMessageLimitStrategy constantPendingMessageLimitStrategy;
        protected DtoPrefetchRatePendingMessageLimitStrategy prefetchRatePendingMessageLimitStrategy;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the constantPendingMessageLimitStrategy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoConstantPendingMessageLimitStrategy }
         *     
         */
        public DtoConstantPendingMessageLimitStrategy getConstantPendingMessageLimitStrategy() {
            return constantPendingMessageLimitStrategy;
        }

        /**
         * Sets the value of the constantPendingMessageLimitStrategy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoConstantPendingMessageLimitStrategy }
         *     
         */
        public void setConstantPendingMessageLimitStrategy(DtoConstantPendingMessageLimitStrategy value) {
            this.constantPendingMessageLimitStrategy = value;
        }

        /**
         * Gets the value of the prefetchRatePendingMessageLimitStrategy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoPrefetchRatePendingMessageLimitStrategy }
         *     
         */
        public DtoPrefetchRatePendingMessageLimitStrategy getPrefetchRatePendingMessageLimitStrategy() {
            return prefetchRatePendingMessageLimitStrategy;
        }

        /**
         * Sets the value of the prefetchRatePendingMessageLimitStrategy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoPrefetchRatePendingMessageLimitStrategy }
         *     
         */
        public void setPrefetchRatePendingMessageLimitStrategy(DtoPrefetchRatePendingMessageLimitStrategy value) {
            this.prefetchRatePendingMessageLimitStrategy = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoConstantPendingMessageLimitStrategy theConstantPendingMessageLimitStrategy;
                theConstantPendingMessageLimitStrategy = this.getConstantPendingMessageLimitStrategy();
                strategy.appendField(locator, this, "constantPendingMessageLimitStrategy", buffer, theConstantPendingMessageLimitStrategy);
            }
            {
                DtoPrefetchRatePendingMessageLimitStrategy thePrefetchRatePendingMessageLimitStrategy;
                thePrefetchRatePendingMessageLimitStrategy = this.getPrefetchRatePendingMessageLimitStrategy();
                strategy.appendField(locator, this, "prefetchRatePendingMessageLimitStrategy", buffer, thePrefetchRatePendingMessageLimitStrategy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoConstantPendingMessageLimitStrategy theConstantPendingMessageLimitStrategy;
                theConstantPendingMessageLimitStrategy = this.getConstantPendingMessageLimitStrategy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "constantPendingMessageLimitStrategy", theConstantPendingMessageLimitStrategy), currentHashCode, theConstantPendingMessageLimitStrategy);
            }
            {
                DtoPrefetchRatePendingMessageLimitStrategy thePrefetchRatePendingMessageLimitStrategy;
                thePrefetchRatePendingMessageLimitStrategy = this.getPrefetchRatePendingMessageLimitStrategy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "prefetchRatePendingMessageLimitStrategy", thePrefetchRatePendingMessageLimitStrategy), currentHashCode, thePrefetchRatePendingMessageLimitStrategy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.PendingMessageLimitStrategy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.PendingMessageLimitStrategy that = ((DtoPolicyEntry.PendingMessageLimitStrategy) object);
            {
                DtoConstantPendingMessageLimitStrategy lhsConstantPendingMessageLimitStrategy;
                lhsConstantPendingMessageLimitStrategy = this.getConstantPendingMessageLimitStrategy();
                DtoConstantPendingMessageLimitStrategy rhsConstantPendingMessageLimitStrategy;
                rhsConstantPendingMessageLimitStrategy = that.getConstantPendingMessageLimitStrategy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "constantPendingMessageLimitStrategy", lhsConstantPendingMessageLimitStrategy), LocatorUtils.property(thatLocator, "constantPendingMessageLimitStrategy", rhsConstantPendingMessageLimitStrategy), lhsConstantPendingMessageLimitStrategy, rhsConstantPendingMessageLimitStrategy)) {
                    return false;
                }
            }
            {
                DtoPrefetchRatePendingMessageLimitStrategy lhsPrefetchRatePendingMessageLimitStrategy;
                lhsPrefetchRatePendingMessageLimitStrategy = this.getPrefetchRatePendingMessageLimitStrategy();
                DtoPrefetchRatePendingMessageLimitStrategy rhsPrefetchRatePendingMessageLimitStrategy;
                rhsPrefetchRatePendingMessageLimitStrategy = that.getPrefetchRatePendingMessageLimitStrategy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "prefetchRatePendingMessageLimitStrategy", lhsPrefetchRatePendingMessageLimitStrategy), LocatorUtils.property(thatLocator, "prefetchRatePendingMessageLimitStrategy", rhsPrefetchRatePendingMessageLimitStrategy), lhsPrefetchRatePendingMessageLimitStrategy, rhsPrefetchRatePendingMessageLimitStrategy)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}fileQueueCursor"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}storeCursor"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}vmQueueCursor"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "fileQueueCursor",
        "storeCursor",
        "vmQueueCursor",
        "any"
    })
    public static class PendingQueuePolicy
        implements Equals, HashCode, ToString
    {

        protected DtoFileQueueCursor fileQueueCursor;
        protected DtoStoreCursor storeCursor;
        protected DtoVmQueueCursor vmQueueCursor;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the fileQueueCursor property.
         * 
         * @return
         *     possible object is
         *     {@link DtoFileQueueCursor }
         *     
         */
        public DtoFileQueueCursor getFileQueueCursor() {
            return fileQueueCursor;
        }

        /**
         * Sets the value of the fileQueueCursor property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoFileQueueCursor }
         *     
         */
        public void setFileQueueCursor(DtoFileQueueCursor value) {
            this.fileQueueCursor = value;
        }

        /**
         * Gets the value of the storeCursor property.
         * 
         * @return
         *     possible object is
         *     {@link DtoStoreCursor }
         *     
         */
        public DtoStoreCursor getStoreCursor() {
            return storeCursor;
        }

        /**
         * Sets the value of the storeCursor property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoStoreCursor }
         *     
         */
        public void setStoreCursor(DtoStoreCursor value) {
            this.storeCursor = value;
        }

        /**
         * Gets the value of the vmQueueCursor property.
         * 
         * @return
         *     possible object is
         *     {@link DtoVmQueueCursor }
         *     
         */
        public DtoVmQueueCursor getVmQueueCursor() {
            return vmQueueCursor;
        }

        /**
         * Sets the value of the vmQueueCursor property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoVmQueueCursor }
         *     
         */
        public void setVmQueueCursor(DtoVmQueueCursor value) {
            this.vmQueueCursor = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoFileQueueCursor theFileQueueCursor;
                theFileQueueCursor = this.getFileQueueCursor();
                strategy.appendField(locator, this, "fileQueueCursor", buffer, theFileQueueCursor);
            }
            {
                DtoStoreCursor theStoreCursor;
                theStoreCursor = this.getStoreCursor();
                strategy.appendField(locator, this, "storeCursor", buffer, theStoreCursor);
            }
            {
                DtoVmQueueCursor theVmQueueCursor;
                theVmQueueCursor = this.getVmQueueCursor();
                strategy.appendField(locator, this, "vmQueueCursor", buffer, theVmQueueCursor);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoFileQueueCursor theFileQueueCursor;
                theFileQueueCursor = this.getFileQueueCursor();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fileQueueCursor", theFileQueueCursor), currentHashCode, theFileQueueCursor);
            }
            {
                DtoStoreCursor theStoreCursor;
                theStoreCursor = this.getStoreCursor();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "storeCursor", theStoreCursor), currentHashCode, theStoreCursor);
            }
            {
                DtoVmQueueCursor theVmQueueCursor;
                theVmQueueCursor = this.getVmQueueCursor();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vmQueueCursor", theVmQueueCursor), currentHashCode, theVmQueueCursor);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.PendingQueuePolicy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.PendingQueuePolicy that = ((DtoPolicyEntry.PendingQueuePolicy) object);
            {
                DtoFileQueueCursor lhsFileQueueCursor;
                lhsFileQueueCursor = this.getFileQueueCursor();
                DtoFileQueueCursor rhsFileQueueCursor;
                rhsFileQueueCursor = that.getFileQueueCursor();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "fileQueueCursor", lhsFileQueueCursor), LocatorUtils.property(thatLocator, "fileQueueCursor", rhsFileQueueCursor), lhsFileQueueCursor, rhsFileQueueCursor)) {
                    return false;
                }
            }
            {
                DtoStoreCursor lhsStoreCursor;
                lhsStoreCursor = this.getStoreCursor();
                DtoStoreCursor rhsStoreCursor;
                rhsStoreCursor = that.getStoreCursor();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "storeCursor", lhsStoreCursor), LocatorUtils.property(thatLocator, "storeCursor", rhsStoreCursor), lhsStoreCursor, rhsStoreCursor)) {
                    return false;
                }
            }
            {
                DtoVmQueueCursor lhsVmQueueCursor;
                lhsVmQueueCursor = this.getVmQueueCursor();
                DtoVmQueueCursor rhsVmQueueCursor;
                rhsVmQueueCursor = that.getVmQueueCursor();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "vmQueueCursor", lhsVmQueueCursor), LocatorUtils.property(thatLocator, "vmQueueCursor", rhsVmQueueCursor), lhsVmQueueCursor, rhsVmQueueCursor)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}fileCursor"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}vmCursor"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "fileCursor",
        "vmCursor",
        "any"
    })
    public static class PendingSubscriberPolicy
        implements Equals, HashCode, ToString
    {

        protected DtoFileCursor fileCursor;
        protected DtoVmCursor vmCursor;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the fileCursor property.
         * 
         * @return
         *     possible object is
         *     {@link DtoFileCursor }
         *     
         */
        public DtoFileCursor getFileCursor() {
            return fileCursor;
        }

        /**
         * Sets the value of the fileCursor property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoFileCursor }
         *     
         */
        public void setFileCursor(DtoFileCursor value) {
            this.fileCursor = value;
        }

        /**
         * Gets the value of the vmCursor property.
         * 
         * @return
         *     possible object is
         *     {@link DtoVmCursor }
         *     
         */
        public DtoVmCursor getVmCursor() {
            return vmCursor;
        }

        /**
         * Sets the value of the vmCursor property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoVmCursor }
         *     
         */
        public void setVmCursor(DtoVmCursor value) {
            this.vmCursor = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoFileCursor theFileCursor;
                theFileCursor = this.getFileCursor();
                strategy.appendField(locator, this, "fileCursor", buffer, theFileCursor);
            }
            {
                DtoVmCursor theVmCursor;
                theVmCursor = this.getVmCursor();
                strategy.appendField(locator, this, "vmCursor", buffer, theVmCursor);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoFileCursor theFileCursor;
                theFileCursor = this.getFileCursor();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fileCursor", theFileCursor), currentHashCode, theFileCursor);
            }
            {
                DtoVmCursor theVmCursor;
                theVmCursor = this.getVmCursor();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vmCursor", theVmCursor), currentHashCode, theVmCursor);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.PendingSubscriberPolicy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.PendingSubscriberPolicy that = ((DtoPolicyEntry.PendingSubscriberPolicy) object);
            {
                DtoFileCursor lhsFileCursor;
                lhsFileCursor = this.getFileCursor();
                DtoFileCursor rhsFileCursor;
                rhsFileCursor = that.getFileCursor();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "fileCursor", lhsFileCursor), LocatorUtils.property(thatLocator, "fileCursor", rhsFileCursor), lhsFileCursor, rhsFileCursor)) {
                    return false;
                }
            }
            {
                DtoVmCursor lhsVmCursor;
                lhsVmCursor = this.getVmCursor();
                DtoVmCursor rhsVmCursor;
                rhsVmCursor = that.getVmCursor();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "vmCursor", lhsVmCursor), LocatorUtils.property(thatLocator, "vmCursor", rhsVmCursor), lhsVmCursor, rhsVmCursor)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}abortSlowAckConsumerStrategy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}abortSlowConsumerStrategy"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "abortSlowAckConsumerStrategy",
        "abortSlowConsumerStrategy",
        "any"
    })
    public static class SlowConsumerStrategy
        implements Equals, HashCode, ToString
    {

        protected DtoAbortSlowAckConsumerStrategy abortSlowAckConsumerStrategy;
        protected DtoAbortSlowConsumerStrategy abortSlowConsumerStrategy;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the abortSlowAckConsumerStrategy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoAbortSlowAckConsumerStrategy }
         *     
         */
        public DtoAbortSlowAckConsumerStrategy getAbortSlowAckConsumerStrategy() {
            return abortSlowAckConsumerStrategy;
        }

        /**
         * Sets the value of the abortSlowAckConsumerStrategy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoAbortSlowAckConsumerStrategy }
         *     
         */
        public void setAbortSlowAckConsumerStrategy(DtoAbortSlowAckConsumerStrategy value) {
            this.abortSlowAckConsumerStrategy = value;
        }

        /**
         * Gets the value of the abortSlowConsumerStrategy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoAbortSlowConsumerStrategy }
         *     
         */
        public DtoAbortSlowConsumerStrategy getAbortSlowConsumerStrategy() {
            return abortSlowConsumerStrategy;
        }

        /**
         * Sets the value of the abortSlowConsumerStrategy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoAbortSlowConsumerStrategy }
         *     
         */
        public void setAbortSlowConsumerStrategy(DtoAbortSlowConsumerStrategy value) {
            this.abortSlowConsumerStrategy = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoAbortSlowAckConsumerStrategy theAbortSlowAckConsumerStrategy;
                theAbortSlowAckConsumerStrategy = this.getAbortSlowAckConsumerStrategy();
                strategy.appendField(locator, this, "abortSlowAckConsumerStrategy", buffer, theAbortSlowAckConsumerStrategy);
            }
            {
                DtoAbortSlowConsumerStrategy theAbortSlowConsumerStrategy;
                theAbortSlowConsumerStrategy = this.getAbortSlowConsumerStrategy();
                strategy.appendField(locator, this, "abortSlowConsumerStrategy", buffer, theAbortSlowConsumerStrategy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoAbortSlowAckConsumerStrategy theAbortSlowAckConsumerStrategy;
                theAbortSlowAckConsumerStrategy = this.getAbortSlowAckConsumerStrategy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "abortSlowAckConsumerStrategy", theAbortSlowAckConsumerStrategy), currentHashCode, theAbortSlowAckConsumerStrategy);
            }
            {
                DtoAbortSlowConsumerStrategy theAbortSlowConsumerStrategy;
                theAbortSlowConsumerStrategy = this.getAbortSlowConsumerStrategy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "abortSlowConsumerStrategy", theAbortSlowConsumerStrategy), currentHashCode, theAbortSlowConsumerStrategy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.SlowConsumerStrategy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.SlowConsumerStrategy that = ((DtoPolicyEntry.SlowConsumerStrategy) object);
            {
                DtoAbortSlowAckConsumerStrategy lhsAbortSlowAckConsumerStrategy;
                lhsAbortSlowAckConsumerStrategy = this.getAbortSlowAckConsumerStrategy();
                DtoAbortSlowAckConsumerStrategy rhsAbortSlowAckConsumerStrategy;
                rhsAbortSlowAckConsumerStrategy = that.getAbortSlowAckConsumerStrategy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "abortSlowAckConsumerStrategy", lhsAbortSlowAckConsumerStrategy), LocatorUtils.property(thatLocator, "abortSlowAckConsumerStrategy", rhsAbortSlowAckConsumerStrategy), lhsAbortSlowAckConsumerStrategy, rhsAbortSlowAckConsumerStrategy)) {
                    return false;
                }
            }
            {
                DtoAbortSlowConsumerStrategy lhsAbortSlowConsumerStrategy;
                lhsAbortSlowConsumerStrategy = this.getAbortSlowConsumerStrategy();
                DtoAbortSlowConsumerStrategy rhsAbortSlowConsumerStrategy;
                rhsAbortSlowConsumerStrategy = that.getAbortSlowConsumerStrategy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "abortSlowConsumerStrategy", lhsAbortSlowConsumerStrategy), LocatorUtils.property(thatLocator, "abortSlowConsumerStrategy", rhsAbortSlowConsumerStrategy), lhsAbortSlowConsumerStrategy, rhsAbortSlowConsumerStrategy)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;choice minOccurs="0">
     *         &lt;element ref="{http://activemq.apache.org/schema/core}fixedCountSubscriptionRecoveryPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}fixedSizedSubscriptionRecoveryPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}lastImageSubscriptionRecoveryPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}noSubscriptionRecoveryPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}queryBasedSubscriptionRecoveryPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}retainedMessageSubscriptionRecoveryPolicy"/>
     *         &lt;element ref="{http://activemq.apache.org/schema/core}timedSubscriptionRecoveryPolicy"/>
     *         &lt;any namespace='##other'/>
     *       &lt;/choice>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "fixedCountSubscriptionRecoveryPolicy",
        "fixedSizedSubscriptionRecoveryPolicy",
        "lastImageSubscriptionRecoveryPolicy",
        "noSubscriptionRecoveryPolicy",
        "queryBasedSubscriptionRecoveryPolicy",
        "retainedMessageSubscriptionRecoveryPolicy",
        "timedSubscriptionRecoveryPolicy",
        "any"
    })
    public static class SubscriptionRecoveryPolicy
        implements Equals, HashCode, ToString
    {

        protected DtoFixedCountSubscriptionRecoveryPolicy fixedCountSubscriptionRecoveryPolicy;
        protected DtoFixedSizedSubscriptionRecoveryPolicy fixedSizedSubscriptionRecoveryPolicy;
        protected DtoLastImageSubscriptionRecoveryPolicy lastImageSubscriptionRecoveryPolicy;
        protected DtoNoSubscriptionRecoveryPolicy noSubscriptionRecoveryPolicy;
        protected DtoQueryBasedSubscriptionRecoveryPolicy queryBasedSubscriptionRecoveryPolicy;
        protected DtoRetainedMessageSubscriptionRecoveryPolicy retainedMessageSubscriptionRecoveryPolicy;
        protected DtoTimedSubscriptionRecoveryPolicy timedSubscriptionRecoveryPolicy;
        @XmlAnyElement(lax = true)
        protected Object any;

        /**
         * Gets the value of the fixedCountSubscriptionRecoveryPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoFixedCountSubscriptionRecoveryPolicy }
         *     
         */
        public DtoFixedCountSubscriptionRecoveryPolicy getFixedCountSubscriptionRecoveryPolicy() {
            return fixedCountSubscriptionRecoveryPolicy;
        }

        /**
         * Sets the value of the fixedCountSubscriptionRecoveryPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoFixedCountSubscriptionRecoveryPolicy }
         *     
         */
        public void setFixedCountSubscriptionRecoveryPolicy(DtoFixedCountSubscriptionRecoveryPolicy value) {
            this.fixedCountSubscriptionRecoveryPolicy = value;
        }

        /**
         * Gets the value of the fixedSizedSubscriptionRecoveryPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoFixedSizedSubscriptionRecoveryPolicy }
         *     
         */
        public DtoFixedSizedSubscriptionRecoveryPolicy getFixedSizedSubscriptionRecoveryPolicy() {
            return fixedSizedSubscriptionRecoveryPolicy;
        }

        /**
         * Sets the value of the fixedSizedSubscriptionRecoveryPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoFixedSizedSubscriptionRecoveryPolicy }
         *     
         */
        public void setFixedSizedSubscriptionRecoveryPolicy(DtoFixedSizedSubscriptionRecoveryPolicy value) {
            this.fixedSizedSubscriptionRecoveryPolicy = value;
        }

        /**
         * Gets the value of the lastImageSubscriptionRecoveryPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoLastImageSubscriptionRecoveryPolicy }
         *     
         */
        public DtoLastImageSubscriptionRecoveryPolicy getLastImageSubscriptionRecoveryPolicy() {
            return lastImageSubscriptionRecoveryPolicy;
        }

        /**
         * Sets the value of the lastImageSubscriptionRecoveryPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoLastImageSubscriptionRecoveryPolicy }
         *     
         */
        public void setLastImageSubscriptionRecoveryPolicy(DtoLastImageSubscriptionRecoveryPolicy value) {
            this.lastImageSubscriptionRecoveryPolicy = value;
        }

        /**
         * Gets the value of the noSubscriptionRecoveryPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoNoSubscriptionRecoveryPolicy }
         *     
         */
        public DtoNoSubscriptionRecoveryPolicy getNoSubscriptionRecoveryPolicy() {
            return noSubscriptionRecoveryPolicy;
        }

        /**
         * Sets the value of the noSubscriptionRecoveryPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoNoSubscriptionRecoveryPolicy }
         *     
         */
        public void setNoSubscriptionRecoveryPolicy(DtoNoSubscriptionRecoveryPolicy value) {
            this.noSubscriptionRecoveryPolicy = value;
        }

        /**
         * Gets the value of the queryBasedSubscriptionRecoveryPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoQueryBasedSubscriptionRecoveryPolicy }
         *     
         */
        public DtoQueryBasedSubscriptionRecoveryPolicy getQueryBasedSubscriptionRecoveryPolicy() {
            return queryBasedSubscriptionRecoveryPolicy;
        }

        /**
         * Sets the value of the queryBasedSubscriptionRecoveryPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoQueryBasedSubscriptionRecoveryPolicy }
         *     
         */
        public void setQueryBasedSubscriptionRecoveryPolicy(DtoQueryBasedSubscriptionRecoveryPolicy value) {
            this.queryBasedSubscriptionRecoveryPolicy = value;
        }

        /**
         * Gets the value of the retainedMessageSubscriptionRecoveryPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoRetainedMessageSubscriptionRecoveryPolicy }
         *     
         */
        public DtoRetainedMessageSubscriptionRecoveryPolicy getRetainedMessageSubscriptionRecoveryPolicy() {
            return retainedMessageSubscriptionRecoveryPolicy;
        }

        /**
         * Sets the value of the retainedMessageSubscriptionRecoveryPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoRetainedMessageSubscriptionRecoveryPolicy }
         *     
         */
        public void setRetainedMessageSubscriptionRecoveryPolicy(DtoRetainedMessageSubscriptionRecoveryPolicy value) {
            this.retainedMessageSubscriptionRecoveryPolicy = value;
        }

        /**
         * Gets the value of the timedSubscriptionRecoveryPolicy property.
         * 
         * @return
         *     possible object is
         *     {@link DtoTimedSubscriptionRecoveryPolicy }
         *     
         */
        public DtoTimedSubscriptionRecoveryPolicy getTimedSubscriptionRecoveryPolicy() {
            return timedSubscriptionRecoveryPolicy;
        }

        /**
         * Sets the value of the timedSubscriptionRecoveryPolicy property.
         * 
         * @param value
         *     allowed object is
         *     {@link DtoTimedSubscriptionRecoveryPolicy }
         *     
         */
        public void setTimedSubscriptionRecoveryPolicy(DtoTimedSubscriptionRecoveryPolicy value) {
            this.timedSubscriptionRecoveryPolicy = value;
        }

        /**
         * Gets the value of the any property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Object getAny() {
            return any;
        }

        /**
         * Sets the value of the any property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setAny(Object value) {
            this.any = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                DtoFixedCountSubscriptionRecoveryPolicy theFixedCountSubscriptionRecoveryPolicy;
                theFixedCountSubscriptionRecoveryPolicy = this.getFixedCountSubscriptionRecoveryPolicy();
                strategy.appendField(locator, this, "fixedCountSubscriptionRecoveryPolicy", buffer, theFixedCountSubscriptionRecoveryPolicy);
            }
            {
                DtoFixedSizedSubscriptionRecoveryPolicy theFixedSizedSubscriptionRecoveryPolicy;
                theFixedSizedSubscriptionRecoveryPolicy = this.getFixedSizedSubscriptionRecoveryPolicy();
                strategy.appendField(locator, this, "fixedSizedSubscriptionRecoveryPolicy", buffer, theFixedSizedSubscriptionRecoveryPolicy);
            }
            {
                DtoLastImageSubscriptionRecoveryPolicy theLastImageSubscriptionRecoveryPolicy;
                theLastImageSubscriptionRecoveryPolicy = this.getLastImageSubscriptionRecoveryPolicy();
                strategy.appendField(locator, this, "lastImageSubscriptionRecoveryPolicy", buffer, theLastImageSubscriptionRecoveryPolicy);
            }
            {
                DtoNoSubscriptionRecoveryPolicy theNoSubscriptionRecoveryPolicy;
                theNoSubscriptionRecoveryPolicy = this.getNoSubscriptionRecoveryPolicy();
                strategy.appendField(locator, this, "noSubscriptionRecoveryPolicy", buffer, theNoSubscriptionRecoveryPolicy);
            }
            {
                DtoQueryBasedSubscriptionRecoveryPolicy theQueryBasedSubscriptionRecoveryPolicy;
                theQueryBasedSubscriptionRecoveryPolicy = this.getQueryBasedSubscriptionRecoveryPolicy();
                strategy.appendField(locator, this, "queryBasedSubscriptionRecoveryPolicy", buffer, theQueryBasedSubscriptionRecoveryPolicy);
            }
            {
                DtoRetainedMessageSubscriptionRecoveryPolicy theRetainedMessageSubscriptionRecoveryPolicy;
                theRetainedMessageSubscriptionRecoveryPolicy = this.getRetainedMessageSubscriptionRecoveryPolicy();
                strategy.appendField(locator, this, "retainedMessageSubscriptionRecoveryPolicy", buffer, theRetainedMessageSubscriptionRecoveryPolicy);
            }
            {
                DtoTimedSubscriptionRecoveryPolicy theTimedSubscriptionRecoveryPolicy;
                theTimedSubscriptionRecoveryPolicy = this.getTimedSubscriptionRecoveryPolicy();
                strategy.appendField(locator, this, "timedSubscriptionRecoveryPolicy", buffer, theTimedSubscriptionRecoveryPolicy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                strategy.appendField(locator, this, "any", buffer, theAny);
            }
            return buffer;
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                DtoFixedCountSubscriptionRecoveryPolicy theFixedCountSubscriptionRecoveryPolicy;
                theFixedCountSubscriptionRecoveryPolicy = this.getFixedCountSubscriptionRecoveryPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fixedCountSubscriptionRecoveryPolicy", theFixedCountSubscriptionRecoveryPolicy), currentHashCode, theFixedCountSubscriptionRecoveryPolicy);
            }
            {
                DtoFixedSizedSubscriptionRecoveryPolicy theFixedSizedSubscriptionRecoveryPolicy;
                theFixedSizedSubscriptionRecoveryPolicy = this.getFixedSizedSubscriptionRecoveryPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fixedSizedSubscriptionRecoveryPolicy", theFixedSizedSubscriptionRecoveryPolicy), currentHashCode, theFixedSizedSubscriptionRecoveryPolicy);
            }
            {
                DtoLastImageSubscriptionRecoveryPolicy theLastImageSubscriptionRecoveryPolicy;
                theLastImageSubscriptionRecoveryPolicy = this.getLastImageSubscriptionRecoveryPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastImageSubscriptionRecoveryPolicy", theLastImageSubscriptionRecoveryPolicy), currentHashCode, theLastImageSubscriptionRecoveryPolicy);
            }
            {
                DtoNoSubscriptionRecoveryPolicy theNoSubscriptionRecoveryPolicy;
                theNoSubscriptionRecoveryPolicy = this.getNoSubscriptionRecoveryPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noSubscriptionRecoveryPolicy", theNoSubscriptionRecoveryPolicy), currentHashCode, theNoSubscriptionRecoveryPolicy);
            }
            {
                DtoQueryBasedSubscriptionRecoveryPolicy theQueryBasedSubscriptionRecoveryPolicy;
                theQueryBasedSubscriptionRecoveryPolicy = this.getQueryBasedSubscriptionRecoveryPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "queryBasedSubscriptionRecoveryPolicy", theQueryBasedSubscriptionRecoveryPolicy), currentHashCode, theQueryBasedSubscriptionRecoveryPolicy);
            }
            {
                DtoRetainedMessageSubscriptionRecoveryPolicy theRetainedMessageSubscriptionRecoveryPolicy;
                theRetainedMessageSubscriptionRecoveryPolicy = this.getRetainedMessageSubscriptionRecoveryPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "retainedMessageSubscriptionRecoveryPolicy", theRetainedMessageSubscriptionRecoveryPolicy), currentHashCode, theRetainedMessageSubscriptionRecoveryPolicy);
            }
            {
                DtoTimedSubscriptionRecoveryPolicy theTimedSubscriptionRecoveryPolicy;
                theTimedSubscriptionRecoveryPolicy = this.getTimedSubscriptionRecoveryPolicy();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timedSubscriptionRecoveryPolicy", theTimedSubscriptionRecoveryPolicy), currentHashCode, theTimedSubscriptionRecoveryPolicy);
            }
            {
                Object theAny;
                theAny = this.getAny();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "any", theAny), currentHashCode, theAny);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DtoPolicyEntry.SubscriptionRecoveryPolicy)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DtoPolicyEntry.SubscriptionRecoveryPolicy that = ((DtoPolicyEntry.SubscriptionRecoveryPolicy) object);
            {
                DtoFixedCountSubscriptionRecoveryPolicy lhsFixedCountSubscriptionRecoveryPolicy;
                lhsFixedCountSubscriptionRecoveryPolicy = this.getFixedCountSubscriptionRecoveryPolicy();
                DtoFixedCountSubscriptionRecoveryPolicy rhsFixedCountSubscriptionRecoveryPolicy;
                rhsFixedCountSubscriptionRecoveryPolicy = that.getFixedCountSubscriptionRecoveryPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "fixedCountSubscriptionRecoveryPolicy", lhsFixedCountSubscriptionRecoveryPolicy), LocatorUtils.property(thatLocator, "fixedCountSubscriptionRecoveryPolicy", rhsFixedCountSubscriptionRecoveryPolicy), lhsFixedCountSubscriptionRecoveryPolicy, rhsFixedCountSubscriptionRecoveryPolicy)) {
                    return false;
                }
            }
            {
                DtoFixedSizedSubscriptionRecoveryPolicy lhsFixedSizedSubscriptionRecoveryPolicy;
                lhsFixedSizedSubscriptionRecoveryPolicy = this.getFixedSizedSubscriptionRecoveryPolicy();
                DtoFixedSizedSubscriptionRecoveryPolicy rhsFixedSizedSubscriptionRecoveryPolicy;
                rhsFixedSizedSubscriptionRecoveryPolicy = that.getFixedSizedSubscriptionRecoveryPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "fixedSizedSubscriptionRecoveryPolicy", lhsFixedSizedSubscriptionRecoveryPolicy), LocatorUtils.property(thatLocator, "fixedSizedSubscriptionRecoveryPolicy", rhsFixedSizedSubscriptionRecoveryPolicy), lhsFixedSizedSubscriptionRecoveryPolicy, rhsFixedSizedSubscriptionRecoveryPolicy)) {
                    return false;
                }
            }
            {
                DtoLastImageSubscriptionRecoveryPolicy lhsLastImageSubscriptionRecoveryPolicy;
                lhsLastImageSubscriptionRecoveryPolicy = this.getLastImageSubscriptionRecoveryPolicy();
                DtoLastImageSubscriptionRecoveryPolicy rhsLastImageSubscriptionRecoveryPolicy;
                rhsLastImageSubscriptionRecoveryPolicy = that.getLastImageSubscriptionRecoveryPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "lastImageSubscriptionRecoveryPolicy", lhsLastImageSubscriptionRecoveryPolicy), LocatorUtils.property(thatLocator, "lastImageSubscriptionRecoveryPolicy", rhsLastImageSubscriptionRecoveryPolicy), lhsLastImageSubscriptionRecoveryPolicy, rhsLastImageSubscriptionRecoveryPolicy)) {
                    return false;
                }
            }
            {
                DtoNoSubscriptionRecoveryPolicy lhsNoSubscriptionRecoveryPolicy;
                lhsNoSubscriptionRecoveryPolicy = this.getNoSubscriptionRecoveryPolicy();
                DtoNoSubscriptionRecoveryPolicy rhsNoSubscriptionRecoveryPolicy;
                rhsNoSubscriptionRecoveryPolicy = that.getNoSubscriptionRecoveryPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "noSubscriptionRecoveryPolicy", lhsNoSubscriptionRecoveryPolicy), LocatorUtils.property(thatLocator, "noSubscriptionRecoveryPolicy", rhsNoSubscriptionRecoveryPolicy), lhsNoSubscriptionRecoveryPolicy, rhsNoSubscriptionRecoveryPolicy)) {
                    return false;
                }
            }
            {
                DtoQueryBasedSubscriptionRecoveryPolicy lhsQueryBasedSubscriptionRecoveryPolicy;
                lhsQueryBasedSubscriptionRecoveryPolicy = this.getQueryBasedSubscriptionRecoveryPolicy();
                DtoQueryBasedSubscriptionRecoveryPolicy rhsQueryBasedSubscriptionRecoveryPolicy;
                rhsQueryBasedSubscriptionRecoveryPolicy = that.getQueryBasedSubscriptionRecoveryPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "queryBasedSubscriptionRecoveryPolicy", lhsQueryBasedSubscriptionRecoveryPolicy), LocatorUtils.property(thatLocator, "queryBasedSubscriptionRecoveryPolicy", rhsQueryBasedSubscriptionRecoveryPolicy), lhsQueryBasedSubscriptionRecoveryPolicy, rhsQueryBasedSubscriptionRecoveryPolicy)) {
                    return false;
                }
            }
            {
                DtoRetainedMessageSubscriptionRecoveryPolicy lhsRetainedMessageSubscriptionRecoveryPolicy;
                lhsRetainedMessageSubscriptionRecoveryPolicy = this.getRetainedMessageSubscriptionRecoveryPolicy();
                DtoRetainedMessageSubscriptionRecoveryPolicy rhsRetainedMessageSubscriptionRecoveryPolicy;
                rhsRetainedMessageSubscriptionRecoveryPolicy = that.getRetainedMessageSubscriptionRecoveryPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "retainedMessageSubscriptionRecoveryPolicy", lhsRetainedMessageSubscriptionRecoveryPolicy), LocatorUtils.property(thatLocator, "retainedMessageSubscriptionRecoveryPolicy", rhsRetainedMessageSubscriptionRecoveryPolicy), lhsRetainedMessageSubscriptionRecoveryPolicy, rhsRetainedMessageSubscriptionRecoveryPolicy)) {
                    return false;
                }
            }
            {
                DtoTimedSubscriptionRecoveryPolicy lhsTimedSubscriptionRecoveryPolicy;
                lhsTimedSubscriptionRecoveryPolicy = this.getTimedSubscriptionRecoveryPolicy();
                DtoTimedSubscriptionRecoveryPolicy rhsTimedSubscriptionRecoveryPolicy;
                rhsTimedSubscriptionRecoveryPolicy = that.getTimedSubscriptionRecoveryPolicy();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "timedSubscriptionRecoveryPolicy", lhsTimedSubscriptionRecoveryPolicy), LocatorUtils.property(thatLocator, "timedSubscriptionRecoveryPolicy", rhsTimedSubscriptionRecoveryPolicy), lhsTimedSubscriptionRecoveryPolicy, rhsTimedSubscriptionRecoveryPolicy)) {
                    return false;
                }
            }
            {
                Object lhsAny;
                lhsAny = this.getAny();
                Object rhsAny;
                rhsAny = that.getAny();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "any", lhsAny), LocatorUtils.property(thatLocator, "any", rhsAny), lhsAny, rhsAny)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = new org.apache.activemq.plugin.jaxb2_commons.ElementAwareEqualsStrategy();
            return equals(null, null, object, strategy);
        }

    }

}
