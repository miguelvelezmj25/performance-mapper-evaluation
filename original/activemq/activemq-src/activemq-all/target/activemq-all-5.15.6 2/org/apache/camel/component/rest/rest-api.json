{
 "component": {
    "kind": "component",
    "scheme": "rest-api",
    "syntax": "rest-api:path/contextIdPattern",
    "title": "REST API",
    "description": "The rest-api component is used for providing Swagger API of the REST services which has been defined using the rest-dsl in Camel.",
    "label": "core,rest",
    "deprecated": false,
    "async": false,
    "consumerOnly": true,
    "producerOnly": false,
    "lenientProperties": true,
    "javaType": "org.apache.camel.component.rest.RestApiComponent",
    "firstVersion": "2.16.0",
    "groupId": "org.apache.camel",
    "artifactId": "camel-core",
    "version": "2.19.5"
  },
  "componentProperties": {
    "resolvePropertyPlaceholders": { "kind": "property", "displayName": "Resolve Property Placeholders", "group": "advanced", "label": "advanced", "required": false, "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": true, "description": "Whether the component should resolve property placeholders on itself when starting. Only properties which are of String type can use property placeholders." }
  },
  "properties": {
    "path": { "kind": "path", "displayName": "Path", "group": "consumer", "required": true, "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "The base path" },
    "contextIdPattern": { "kind": "path", "displayName": "Context Id Pattern", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "Optional CamelContext id pattern to only allow Rest APIs from rest services within CamelContext's which name matches the pattern." },
    "apiComponentName": { "kind": "parameter", "displayName": "Api Component Name", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "The Camel Rest API component to use for generating the API of the REST services such as swagger." },
    "bridgeErrorHandler": { "kind": "parameter", "displayName": "Bridge Error Handler", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": false, "secret": false, "defaultValue": false, "description": "Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "componentName": { "kind": "parameter", "displayName": "Component Name", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": false, "secret": false, "description": "The Camel Rest component to use for the REST transport such as restlet spark-rest. If no component has been explicit configured then Camel will lookup if there is a Camel component that integrates with the Rest DSL or if a org.apache.camel.spi.RestConsumerFactory is registered in the registry. If either one is found then that is being used." },
    "exceptionHandler": { "kind": "parameter", "displayName": "Exception Handler", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": false, "secret": false, "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "displayName": "Exchange Pattern", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": false, "secret": false, "description": "Sets the default exchange pattern when creating an exchange." },
    "synchronous": { "kind": "parameter", "displayName": "Synchronous", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": false, "secret": false, "defaultValue": false, "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)." }
  }
}

