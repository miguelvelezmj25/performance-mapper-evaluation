package verificationClasses;
public class FeatureSwitches {
/*
 * DO NOT EDIT! THIS FILE IS AUTOGENERATED BY fstcomp 
 */

public static boolean __SELECTED_FEATURE_Base;
public static boolean __SELECTED_FEATURE_CRC;
public static boolean __SELECTED_FEATURE_ArchiveCheck;
public static boolean __SELECTED_FEATURE_ZipMeTest;
public static boolean __SELECTED_FEATURE_GZIP;
public static boolean __SELECTED_FEATURE_Adler32Checksum;
public static boolean __SELECTED_FEATURE_Compress;
public static boolean __SELECTED_FEATURE_Extract;
public static boolean __SELECTED_FEATURE_DerivativeGZIPCRC;
public static boolean __SELECTED_FEATURE_DerivativeCompressCRC;
public static boolean __SELECTED_FEATURE_DerivativeExtractCRC;
public static boolean __SELECTED_FEATURE_DerivativeCompressGZIP;
public static boolean __SELECTED_FEATURE_DerivativeCompressAdler32Checksum;
public static boolean __SELECTED_FEATURE_DerivativeCompressGZIPCRC;
public static String getSelectedFeaturesAsNames() {
StringBuilder sb = new StringBuilder();
	if (__SELECTED_FEATURE_Base) sb.append("Base;");
	if (__SELECTED_FEATURE_DerivativeCompressAdler32Checksum) sb.append("DerivativeCompressAdler32Checksum;");
	if (__SELECTED_FEATURE_DerivativeCompressCRC) sb.append("DerivativeCompressCRC;");
	if (__SELECTED_FEATURE_DerivativeCompressGZIP) sb.append("DerivativeCompressGZIP;");
	if (__SELECTED_FEATURE_DerivativeCompressGZIPCRC) sb.append("DerivativeCompressGZIPCRC;");
	if (__SELECTED_FEATURE_DerivativeGZIPCRC) sb.append("DerivativeGZIPCRC;");
	if (__SELECTED_FEATURE_Adler32Checksum) sb.append("Adler32Checksum;");
	if (__SELECTED_FEATURE_ArchiveCheck) sb.append("ArchiveCheck;");
	if (__SELECTED_FEATURE_ZipMeTest) sb.append("ZipMeTest;");
	if (__SELECTED_FEATURE_GZIP) sb.append("GZIP;");
	if (__SELECTED_FEATURE_DerivativeExtractCRC) sb.append("DerivativeExtractCRC;");
	if (__SELECTED_FEATURE_CRC) sb.append("CRC;");
	if (__SELECTED_FEATURE_Compress) sb.append("Compress;");
	if (__SELECTED_FEATURE_Extract) sb.append("Extract;");
return sb.toString();
}
public static void select_features() {
	__SELECTED_FEATURE_Base = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_DerivativeCompressAdler32Checksum = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_DerivativeCompressCRC = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_DerivativeCompressGZIP = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_DerivativeCompressGZIPCRC = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_DerivativeGZIPCRC = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_Adler32Checksum = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_ArchiveCheck = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_ZipMeTest = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_GZIP = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_DerivativeExtractCRC = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_CRC = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_Compress = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_Extract = verificationClasses.SPLModelChecker.getBoolean();
}

public static boolean __GUIDSL_ROOT_PRODUCTION;

public static void select_helpers() {
	__GUIDSL_ROOT_PRODUCTION = true;
}

public static boolean valid_product() {
	if ( ( __SELECTED_FEATURE_Base ) && ( __SELECTED_FEATURE_ZipMeTest ) &&  ( __SELECTED_FEATURE_Compress ) && ( __SELECTED_FEATURE_Extract ) &&  ( !__SELECTED_FEATURE_GZIP || __SELECTED_FEATURE_CRC ) && ( __SELECTED_FEATURE_CRC || __SELECTED_FEATURE_Adler32Checksum ) &&  ( !( __SELECTED_FEATURE_Compress && __SELECTED_FEATURE_Adler32Checksum ) ^ __SELECTED_FEATURE_DerivativeCompressAdler32Checksum ) && ( !( __SELECTED_FEATURE_Compress && __SELECTED_FEATURE_CRC ) ^ __SELECTED_FEATURE_DerivativeCompressCRC ) && ( !( __SELECTED_FEATURE_Compress && __SELECTED_FEATURE_GZIP ) ^ __SELECTED_FEATURE_DerivativeCompressGZIP ) && ( !( __SELECTED_FEATURE_Compress && __SELECTED_FEATURE_GZIP && __SELECTED_FEATURE_CRC ) ^ __SELECTED_FEATURE_DerivativeCompressGZIPCRC ) && ( !( __SELECTED_FEATURE_Extract && __SELECTED_FEATURE_CRC ) ^ __SELECTED_FEATURE_DerivativeExtractCRC ) && ( !( __SELECTED_FEATURE_GZIP && __SELECTED_FEATURE_CRC ) ^ __SELECTED_FEATURE_DerivativeGZIPCRC ))
		return true;
	else
		return false;
}
}