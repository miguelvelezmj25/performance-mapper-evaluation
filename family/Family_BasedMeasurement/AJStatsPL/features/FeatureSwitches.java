package verificationClasses;
public class FeatureSwitches {
/*
 * DO NOT EDIT! THIS FILE IS AUTOGENERATED BY fstcomp 
 */

public static boolean __SELECTED_FEATURE_Base;
public static boolean __SELECTED_FEATURE_CodeFormatter;
public static boolean __SELECTED_FEATURE_Classes;
public static boolean __SELECTED_FEATURE_Interfaces;
public static boolean __SELECTED_FEATURE_Aspects;
public static boolean __SELECTED_FEATURE_States;
public static boolean __SELECTED_FEATURE_ClassMethods;
public static boolean __SELECTED_FEATURE_ClassConstructors;
public static boolean __SELECTED_FEATURE_InterfaceMethods;
public static boolean __SELECTED_FEATURE_AspectMethods;
public static boolean __SELECTED_FEATURE_AspectConstructors;
public static boolean __SELECTED_FEATURE_ClassFields;
public static boolean __SELECTED_FEATURE_InterfaceFields;
public static boolean __SELECTED_FEATURE_AspectFields;
public static boolean __SELECTED_FEATURE_Advice;
public static boolean __SELECTED_FEATURE_Pointcuts;
public static boolean __SELECTED_FEATURE_InterTypeMethods;
public static boolean __SELECTED_FEATURE_InterTypeConstructors;
public static boolean __SELECTED_FEATURE_InterTypeFields;
public static boolean __SELECTED_FEATURE_InterTypeDeclare;
public static String getSelectedFeaturesAsNames() {
StringBuilder sb = new StringBuilder();
	if (__SELECTED_FEATURE_AspectMethods) sb.append("AspectMethods;");
	if (__SELECTED_FEATURE_ClassFields) sb.append("ClassFields;");
	if (__SELECTED_FEATURE_Base) sb.append("Base;");
	if (__SELECTED_FEATURE_Classes) sb.append("Classes;");
	if (__SELECTED_FEATURE_ClassConstructors) sb.append("ClassConstructors;");
	if (__SELECTED_FEATURE_InterTypeMethods) sb.append("InterTypeMethods;");
	if (__SELECTED_FEATURE_Interfaces) sb.append("Interfaces;");
	if (__SELECTED_FEATURE_AspectFields) sb.append("AspectFields;");
	if (__SELECTED_FEATURE_InterfaceFields) sb.append("InterfaceFields;");
	if (__SELECTED_FEATURE_Advice) sb.append("Advice;");
	if (__SELECTED_FEATURE_Aspects) sb.append("Aspects;");
	if (__SELECTED_FEATURE_Pointcuts) sb.append("Pointcuts;");
	if (__SELECTED_FEATURE_States) sb.append("States;");
	if (__SELECTED_FEATURE_InterfaceMethods) sb.append("InterfaceMethods;");
	if (__SELECTED_FEATURE_CodeFormatter) sb.append("CodeFormatter;");
	if (__SELECTED_FEATURE_ClassMethods) sb.append("ClassMethods;");
	if (__SELECTED_FEATURE_InterTypeDeclare) sb.append("InterTypeDeclare;");
	if (__SELECTED_FEATURE_AspectConstructors) sb.append("AspectConstructors;");
	if (__SELECTED_FEATURE_InterTypeFields) sb.append("InterTypeFields;");
	if (__SELECTED_FEATURE_InterTypeConstructors) sb.append("InterTypeConstructors;");
return sb.toString();
}
public static void select_features() {
	__SELECTED_FEATURE_AspectMethods = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_ClassFields = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_Base = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_Classes = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_ClassConstructors = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_InterTypeMethods = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_Interfaces = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_AspectFields = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_InterfaceFields = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_Advice = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_Aspects = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_Pointcuts = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_States = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_InterfaceMethods = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_CodeFormatter = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_ClassMethods = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_InterTypeDeclare = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_AspectConstructors = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_InterTypeFields = verificationClasses.SPLModelChecker.getBoolean();
	__SELECTED_FEATURE_InterTypeConstructors = verificationClasses.SPLModelChecker.getBoolean();
}

public static boolean __GUIDSL_ROOT_PRODUCTION;

public static void select_helpers() {
	__GUIDSL_ROOT_PRODUCTION = true;
}

public static boolean valid_product() {
	if (  ( __SELECTED_FEATURE_Base )  && __SELECTED_FEATURE_Aspects && __SELECTED_FEATURE_States && __SELECTED_FEATURE_InterTypeMethods && __SELECTED_FEATURE_InterTypeConstructors )
		return true;
	else
		return false;
}
}